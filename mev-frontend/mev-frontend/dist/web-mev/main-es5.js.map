{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/app/app.component.ts","webpack:///src/app/app/app.component.html","webpack:///src/app/core/animations/animations.service.ts","webpack:///src/app/core/animations/route.animations.ts","webpack:///src/app/core/auth/auth-guard.service.ts","webpack:///src/app/core/auth/auth.actions.ts","webpack:///src/app/core/auth/auth.effects.ts","webpack:///src/app/core/auth/auth.reducer.ts","webpack:///src/app/core/auth/auth.selectors.ts","webpack:///src/app/core/authentication/authentication.service.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/core.state.ts","webpack:///src/app/core/google-analytics/google-analytics.effects.ts","webpack:///src/app/core/interceptors/http-error.interceptor.ts","webpack:///src/app/core/interceptors/token-interceptor.interceptor.ts","webpack:///src/app/core/local-storage/local-storage.service.ts","webpack:///src/app/core/meta-reducers/debug.reducer.ts","webpack:///src/app/core/meta-reducers/init-state-from-local-storage.reducer.ts","webpack:///src/app/core/notifications/notification.service.ts","webpack:///src/app/core/router/custom-serializer.ts","webpack:///src/app/core/settings/settings.actions.ts","webpack:///src/app/core/settings/settings.effects.ts","webpack:///src/app/core/settings/settings.model.ts","webpack:///src/app/core/settings/settings.reducer.ts","webpack:///src/app/core/settings/settings.selectors.ts","webpack:///src/app/core/title/title.service.ts","webpack:///src/app/core/user/user.service.ts","webpack:///src/app/features/analysis/models/operation-input.ts","webpack:///src/app/features/analysis/models/operation.ts","webpack:///src/app/features/analysis/services/analysis.service.ts","webpack:///src/app/features/file-manager/components/dialogs/add-file-dialog/add-file-dialog.component.ts","webpack:///src/app/features/file-manager/components/dialogs/add-file-dialog/add-file-dialog.component.html","webpack:///src/app/features/file-manager/components/dialogs/delete-file-dialog/delete-file-dialog.component.ts","webpack:///src/app/features/file-manager/components/dialogs/delete-file-dialog/delete-file-dialog.component.html","webpack:///src/app/features/file-manager/components/dialogs/edit-file-dialog/edit-file-dialog.component.ts","webpack:///src/app/features/file-manager/components/dialogs/edit-file-dialog/edit-file-dialog.component.html","webpack:///src/app/features/file-manager/components/dialogs/view-file-types-dialog/view-file-types-dialog.component.ts","webpack:///src/app/features/file-manager/components/dialogs/view-file-types-dialog/view-file-types-dialog.component.html","webpack:///src/app/features/file-manager/components/file-list/file-list.component.ts","webpack:///src/app/features/file-manager/components/file-list/file-list.component.html","webpack:///src/app/features/file-manager/components/progress-snackbar/progress-snackbar.component.ts","webpack:///src/app/features/file-manager/components/progress-snackbar/progress-snackbar.component.html","webpack:///src/app/features/file-manager/file-manager-routing.module.ts","webpack:///src/app/features/file-manager/file-manager.module.ts","webpack:///src/app/features/file-manager/services/file-manager.service.ts","webpack:///src/app/features/tutorial/tutorial.component.ts","webpack:///src/app/features/tutorial/tutorial.component.html","webpack:///src/app/features/user/login/login.component.ts","webpack:///src/app/features/user/login/login.component.html","webpack:///src/app/features/user/password-change/password-change.component.ts","webpack:///src/app/features/user/password-change/password-change.component.html","webpack:///src/app/features/user/register/register.component.ts","webpack:///src/app/features/user/register/register.component.html","webpack:///src/app/features/user/request-password-reset/request-password-reset.component.ts","webpack:///src/app/features/user/request-password-reset/request-password-reset.component.html","webpack:///src/app/features/user/response-password-reset/response-password-reset.component.ts","webpack:///src/app/features/user/response-password-reset/response-password-reset.component.html","webpack:///src/app/features/workarea/workarea.component.ts","webpack:///src/app/features/workarea/workarea.component.html","webpack:///src/app/features/workspace-detail/components/dialogs/preview-dialog/preview-dialog.component.ts","webpack:///src/app/features/workspace-detail/components/dialogs/preview-dialog/preview-dialog.component.html","webpack:///src/app/features/workspace-manager/components/dialogs/add-ws-dialog/add-ws-dialog.component.ts","webpack:///src/app/features/workspace-manager/components/dialogs/add-ws-dialog/add-ws-dialog.component.html","webpack:///src/app/features/workspace-manager/components/dialogs/delete-ws-dialog/delete-ws-dialog.component.ts","webpack:///src/app/features/workspace-manager/components/dialogs/delete-ws-dialog/delete-ws-dialog.component.html","webpack:///src/app/features/workspace-manager/components/dialogs/edit-ws-dialog/edit-ws-dialog.component.ts","webpack:///src/app/features/workspace-manager/components/dialogs/edit-ws-dialog/edit-ws-dialog.component.html","webpack:///src/app/features/workspace-manager/components/workspace-list/workspace-list.component.ts","webpack:///src/app/features/workspace-manager/components/workspace-list/workspace-list.component.html","webpack:///src/app/features/workspace-manager/models/workspace.ts","webpack:///src/app/features/workspace-manager/services/workspace.service.ts","webpack:///src/app/features/workspace-manager/workspace-manager-routing.module.ts","webpack:///src/app/features/workspace-manager/workspace-manager.module.ts","webpack:///src/app/jwtConfig.ts","webpack:///src/app/sentry-error-handler.ts","webpack:///src/app/shared/components/spinner-overlay/spinner-overlay.component.ts","webpack:///src/app/shared/components/spinner-overlay/spinner-overlay.component.html","webpack:///src/app/shared/directives/rtl-support/rtl-support.directive.ts","webpack:///src/app/shared/models/file-type.ts","webpack:///src/app/shared/models/file.ts","webpack:///src/app/shared/pipes/byte-name.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/validators/validators.ts","webpack:///src/assets/logo.png","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","m","AboutModule","component","canActivate","SettingsModule","WorkspaceDetailModule","AnalysisModule","AppRoutingModule","forRoot","useHash","scrollPositionRestoration","preloadingStrategy","enableTracing","imports","AppModule","provide","useClass","multi","useValue","autoLogin","providers","PROVIDER_ID","provider","jwtOptionsProvider","useFactory","deps","declarations","bootstrap","AppComponent","store","storageService","router","bnIdle","authenticationService","isProd","production","envName","version","versions","app","year","Date","getFullYear","logo","languages","sessionTimeout","navigation","link","label","navigationSideMenu","currentUser","subscribe","x","isAuthenticated","logout","navigate","socialUser","JSON","parse","localStorage","getItem","sessionSubscription$","startWatching","isTimedOut","onLogoutClick","testLocalStorage","isIEorEdgeOrSafari","dispatch","pageAnimationsDisabled","isAuthenticated$","pipe","stickyHeader$","language$","theme$","unsubscribe","language","value","includes","name","selector","templateUrl","styleUrls","animations","AnimationsService","routeAnimationType","pageAnimations","elementsAnimations","type","providedIn","ROUTE_ANIMATIONS_ELEMENTS","STEPS_ALL","opacity","position","optional","transform","STEPS_NONE","STEPS_PAGE","STEPS_ELEMENTS","routeAnimations","isRouteAnimationsAll","isRouteAnimationsNone","isRouteAnimationsPage","isRouteAnimationsElements","isRouteAnimationsType","AuthGuardService","route","state","currentUserValue","queryParams","returnUrl","url","authLogin","authLogout","AUTH_KEY","AuthEffects","actions$","localStorageService","login","setItem","initialState","reducer","authReducer","action","selectAuth","selectIsAuthenticated","AuthenticationService","http","API_URL","apiUrl","API_NAME","appName","JWT_TOKEN","REFRESH_TOKEN","currentUserSubject","sessionStorage","asObservable","username","password","post","email","user","access","storeJwtToken","stringify","storeRefreshToken","refresh","next","jwt","token","removeItem","getJwtToken","getRefreshToken","tokens","googleTokenId","provider_token","body","HttpLoaderFactory","i18nPrefix","CoreModule","parentModule","faIconLibrary","addIcons","metaReducers","instrument","loader","reducers","auth","settings","test","unshift","selectAuthState","selectSettingsState","selectRouterState","GoogleAnalyticsEffects","pageView","events","event","window","ga","urlAfterRedirects","HttpErrorInterceptor","notificationService","request","handle","error","errorMessage","status","indexOf","ErrorEvent","message","detail","Object","forEach","error_field","TokenInterceptor","authService","isRefreshing","refreshTokenSubject","handle401Error","refreshToken","addToken","clone","setHeaders","Authorization","APP_PREFIX","LocalStorageService","key","testValue","testKey","retrievedValue","reduce","storageKey","stateKeys","replace","toLowerCase","split","map","index","charAt","toUpperCase","slice","join","currentStateRef","length","debug","newState","console","log","payload","oldState","initStateFromLocalStorage","toString","loadInitialState","NotificationService","snackBar","zone","show","duration","panelClass","configuration","run","open","CustomSerializer","routerState","root","firstChild","params","actionSettingsChangeLanguage","actionSettingsChangeTheme","actionSettingsChangeAutoNightMode","actionSettingsChangeStickyHeader","actionSettingsChangeAnimationsPage","actionSettingsChangeAnimationsPageDisabled","actionSettingsChangeAnimationsElements","actionSettingsChangeHour","SETTINGS_KEY","INIT","SettingsEffects","overlayContainer","titleService","animationsService","translateService","ngZone","hour","changeHour","runOutsideAngular","setInterval","getHours","persistSettings","updateRouteAnimationType","updateTheme","effectiveTheme","classList","getContainerElement","toRemove","Array","from","filter","item","remove","add","setTranslateServiceLanguage","use","setTitle","snapshot","NIGHT_MODE_THEME","theme","autoNightMode","nightTheme","stickyHeader","settingsReducer","selectSettings","selectSettingsStickyHeader","selectSettingsLanguage","selectTheme","selectPageAnimations","selectElementsAnimations","selectAutoNightMode","selectNightTheme","selectHour","selectIsNightHour","selectEffectiveTheme","isNightHour","TitleService","title","lazyTranslateService","lastChild","children","data","translate","get","translatedTitle","UserService","put","InputSpec","attribute_type","resource_types","many","min","max","default_value","options","OperationInput","description","required","spec","OperationInputAdapter","Operation","inputs","outputs","mode","repository","git_hash","OperationAdapter","adapt","AnalysesService","httpClient","opAdapter","fileAdapter","operations","operation","operationData","operationId","workspaceId","operation_id","workspace_id","job_name","executedOperationId","codesInProcess","observe","response","resourceId","pageIndex","pageSize","filters","sorting","append","field","hasOwnProperty","expression","sortDirection","types","resource_type","workspaces","some","workspace","AddFileDialogComponent","dialogRef","fileService","filesToUpload","resourceTypes","formControl","fileUpload","nativeElement","click","fileSizeTreshold","target","files","fileSelected","fileNames","isLargeFile","i","size","push","addFile","hasError","close","onUploadBtnClick","setFile","confirmAdd","onNoClick","DeleteFileDialogComponent","deleteFile","confirmDelete","EditFileDialogComponent","loadResourceTypes","updateFile","getFileTypes","fileTypes","resource_type_key","resource_type_title","resource_type_description","stopEdit","ViewFileTypesDialogComponent","isTableShown","numeric","integer","feature","count","annotation","toggleShow","changeDetection","OnPush","FileListComponent","dialog","ref","dropboxUploadInProgressMsg","dropboxUploadCompleteMsg","uploadInProgressMsg","displayedColumns","isWait","fileUploadProgressSubscription","loadData","fileUploadsProgress","uploadProgressData","txt","percent","markForCheck","allFilesUploaded","every","isUploaded","file","afterClosed","success","download_link","filename","addDropboxFile","cancel","linkType","multiselect","folderselect","Dropbox","choose","file_name","result","fileId","getFilePreview","previewData","results","minN","Math","slicedData","columns","values","rows","elem","rowname","rowValues","elemValues","col","readable_resource_type","dataSource","ExampleDataSource","paginator","sort","viewFileTypes","addItem","addDropBoxItem","_exampleDatabase","_paginator","_sort","_filterChange","filteredData","renderedData","displayDataChanges","dataChange","sortChange","page","getAllFiles","searchStr","sortedData","sortData","startIndex","splice","active","direction","a","b","propertyA","propertyB","created","valueA","isNaN","valueB","ProgressSnackbarComponent","snackBarRef","uploadProgressStatus","FileManagerRoutingModule","forChild","FileManagerModule","FileService","adapter","analysesService","FILE_VALIDATION_PROGRESS_STATUSES","maxTime","Map","dialogData","maxTimer$","fileUploadsProgressMap","formData","FormData","set","reportProgress","UploadProgress","percentDone","round","loaded","total","Response","execOperationId","getExecutedOperationResult","getValue","TutorialComponent","LoginComponent","formBuilder","userService","socialAuthService","routeAnimationsElements","loading","submitted","isUserActivated","uid","activateUser","activate","err","loginForm","group","invalid","f","socialPlatformProvider","signIn","userData","googleSignInExternal","authToken","signOut","controls","onSubmit","signInWithGoogle","PasswordChangeComponent","fb","isFormValid","changePasswordForm","current_password","minLength","pattern","confirm_password","validator","valid","changePassword","reset","successMessage","RegisterComponent","registerForm","register","RequestPasswordResetComponent","IsValidForm","RequestResetForm","forbiddenEmails","form","requestPasswordReset","setTimeout","RequestResetUser","Default","ResponsePasswordResetComponent","IsResetFormValid","CurrentState","resetToken","VerifyToken","Init","ValidPasswordToken","responseResetForm","confirmPasswordReset","ResetPassword","WorkareaComponent","selectedTabIndex","Number","String","onTabChange","PreviewDialogComponent","AddWSDialogComponent","workspaceService","addWorkspace","DeleteWSDialogComponent","deleteWorkspace","EditWSDialogComponent","updateWorkspace","WorkspaceListComponent","workspace_name","getAllWorkspaces","Workspace","WorkspaceAdapter","re","created_formatted","WorkspaceService","WorkspaceManagerRoutingModule","WorkspaceManagerModule","jwtOptionsFactory","tokenGetter","whitelistedDomains","blacklistedRoutes","dsn","integrations","TryCatch","XMLHttpRequest","SentryErrorHandler","ngOriginalError","extractedError","extractError","eventId","SpinnerOverlayComponent","RtlSupportDirective","el","style","textAlign","currentLang","subscription","onLangChange","lang","FileType","File","owner_email","is_active","is_public","FileAdapter","workspace_names","ws","ByteNamePipe","bytes","k","decimals","dm","sizes","floor","parseFloat","pow","toFixed","MatModules","SharedModule","RepeatPasswordValidator","passwordFormGroup","new_password","setErrors","notMatched","packageJson","environment","angular","dependencies","ngrx","material","rxjs","ngxtranslate","fontAwesome","angularCli","devDependencies","typescript","cypress"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,YAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,8BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,kBAAU,EAAE,OAFd;AAGEC,iBAAS,EAAE;AAHb,OADqB,EAMrB;AACEF,YAAI,EAAE,OADR;AAEEG,oBAAY,EAAE;AAAA,iBACZ;AAAA;AAAA;AAAA;AAAA,uDAAwCZ,IAAxC,CAA6C,UAAAa,CAAC;AAAA,mBAAIA,CAAC,CAACC,WAAN;AAAA,WAA9C,CADY;AAAA;AAFhB,OANqB,EAWrB;AACEL,YAAI,EAAE,UADR;AAEEM,iBAAS,EAAE;AAFb,OAXqB,EAerB;AACEN,YAAI,EAAE,UADR;AAEEM,iBAAS,EAAE,uFAFb;AAGEC,mBAAW,EAAE,CAAC,8EAAD;AAHf,OAfqB,EAoBrB;AACEP,YAAI,EAAE,UADR;AAEEG,oBAAY,EAAE;AAAA,iBACZ;AAAA;AAAA;AAAA;AAAA,6DAA8CZ,IAA9C,CAAmD,UAAAa,CAAC;AAAA,mBAAIA,CAAC,CAACI,cAAN;AAAA,WAApD,CADY;AAAA;AAFhB,OApBqB,EA0BrB;AACER,YAAI,EAAE,wBADR;AAEEG,oBAAY,EAAE;AAAA,iBACZ;AAAA;AAAA;AAAA;AAAA,6EAA8DZ,IAA9D,CACE,UAAAa,CAAC;AAAA,mBAAIA,CAAC,CAACK,qBAAN;AAAA,WADH,CADY;AAAA,SAFhB;AAMEF,mBAAW,EAAE,CAAC,8EAAD;AANf,OA1BqB,EAkCrB;AACEP,YAAI,EAAE,UADR;AAEEG,oBAAY,EAAE;AAAA,iBACZ;AAAA;AAAA;AAAA;AAAA,6DAA8CZ,IAA9C,CAAmD,UAAAa,CAAC;AAAA,mBAAIA,CAAC,CAACM,cAAN;AAAA,WAApD,CADY;AAAA,SAFhB;AAIEH,mBAAW,EAAE,CAAC,8EAAD;AAJf,OAlCqB,EAwCrB;AACEP,YAAI,EAAE,uBADR;AAEEG,oBAAY,EAAE;AAAA,iBACZ;AAAA;AAAA;AAAA;AAAA,6DAA8CZ,IAA9C,CAAmD,UAAAa,CAAC;AAAA,mBAAIA,CAAC,CAACM,cAAN;AAAA,WAApD,CADY;AAAA,SAFhB;AAIEH,mBAAW,EAAE,CAAC,8EAAD;AAJf,OAxCqB,EA8CrB;AACEP,YAAI,EAAE,OADR;AAEEM,iBAAS,EAAE;AAFb,OA9CqB,EAkDrB;AACEN,YAAI,EAAE,UADR;AAEEM,iBAAS,EAAE;AAFb,OAlDqB,EAsDrB;AACEN,YAAI,EAAE,sBADR;AAEEM,iBAAS,EAAE;AAFb,OAtDqB,EA0DrB;AACEN,YAAI,EAAE,OADR;AAEEM,iBAAS,EAAE;AAFb,OA1DqB,EA8DrB;AACEN,YAAI,EAAE,4BADR;AAEEM,iBAAS,EAAE;AAFb,OA9DqB,EAkErB;AACEN,YAAI,EAAE,iBADR;AAEEM,iBAAS,EAAE;AAFb,OAlEqB,EAuErB;AACEN,YAAI,EAAE,IADR;AAEEC,kBAAU,EAAE;AAFd,OAvEqB,CAAvB;;UAwFaU,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,kBAVlB,CACP,6DAAaC,OAAb,CAAqBb,MAArB,EAA6B;AAC3Bc,iBAAO,EAAE,IADkB;AAE3BC,mCAAyB,EAAE,SAFA;AAG3BC,4BAAkB,EAAE,iEAHO;AAI3BC,uBAAa,EAAE;AAJY,SAA7B,CADO,CAUkB,EAFjB,4DAEiB;;;;4HAAhBL,gB,EAAgB;AAAA;AAAA,oBAFjB,4DAEiB;AAAA,S;AAFL,O;;;;;wEAEXA,gB,EAAgB;gBAX5B,sDAW4B;iBAXnB;AACRM,mBAAO,EAAE,CACP,6DAAaL,OAAb,CAAqBb,MAArB,EAA6B;AAC3Bc,qBAAO,EAAE,IADkB;AAE3BC,uCAAyB,EAAE,SAFA;AAG3BC,gCAAkB,EAAE,iEAHO;AAI3BC,2BAAa,EAAE;AAJY,aAA7B,CADO,CADD;AASRnB,mBAAO,EAAE,CAAC,4DAAD;AATD,W;AAWmB,U;;;;;;;;;;;;;;;;;;ACnG7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAmHaqB,S;;;;;cAAAA,S;AAAS,oBAFR,+DAEQ;;;;2BAATA,S;AAAS,S;AAAA,mBAlCT,CACT,0DADS,EAET;AACEC,iBAAO,EAAE,sEADX;AAEEC,kBAAQ,EAAE,kGAFZ;AAGEC,eAAK,EAAE;AAHT,SAFS,EAOT;AACEF,iBAAO,EAAE,sEADX;AAEEC,kBAAQ,EAAE,+FAFZ;AAGEC,eAAK,EAAE;AAHT,SAPS,EAYT;AACEF,iBAAO,EAAE,0DADX;AAEEC,kBAAQ,EAAE;AAFZ,SAZS,EAgBT;AACED,iBAAO,EAAE,yBADX;AAEEG,kBAAQ,EAAE;AACRC,qBAAS,EAAE,KADH;AAERC,qBAAS,EAAE,CACT;AACE1B,gBAAE,EAAE,2EAAoB2B,WAD1B;AAEEC,sBAAQ,EAAE,IAAI,0EAAJ,CACR,0EADQ,CACmE;AADnE;AAFZ,aADS;AAFH;AAFZ,SAhBS,C;AA8BV,kBAxEQ,CACP;AACA,oGAFO,EAGP,uEAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,kEANO,EAOP,sFAPO,EASP;AACA,oEAVO,EAYP,4EAZO,EAcP,uEAdO,EAgBP,8DAAUd,OAAV,CAAkB;AAChBe,4BAAkB,EAAE;AAClBR,mBAAO,EAAE,+DADS;AAElBS,sBAAU,EAAE,iEAFM;AAGlBC,gBAAI,EAAE,CAAC,sGAAD;AAHY;AADJ,SAAlB,CAhBO,EAwBP;AACA,gFAzBO,EA2BP;AACA,qGA5BO,EA6BP,4GA7BO,EA8BP,oEA9BO,CAwER;;;;4HAIUX,S,EAAS;AAAA,yBA3ClB,+DA2CkB,EA1ClB,oFA0CkB,EAzClB,6FAyCkB,EAxClB,wFAwCkB,EAvClB,wFAuCkB,EAtClB,qIAsCkB,EArClB,wIAqCkB,EApClB,iHAoCkB;AApCK,oBAvCvB;AACA,sGAsCuB,EArCvB,uEAqCuB,EApCvB,qEAoCuB,EAnCvB,0DAmCuB,EAlCvB,kEAkCuB,EAjCvB,sFAiCuB,EA/BvB;AACA,sEA8BuB,EA5BvB,4EA4BuB,EA1BvB,uEA0BuB,EA1BX,6DA0BW,EAhBvB;AACA,kFAeuB,EAbvB;AACA,uGAYuB,EAXvB,4GAWuB,EAVvB,oEAUuB;AAoCL,S;AA9CF,O;;;;;wEA8CPA,S,EAAS;gBA7ErB,sDA6EqB;iBA7EZ;AACRD,mBAAO,EAAE,CACP;AACA,wGAFO,EAGP,uEAHO,EAIP,qEAJO,EAKP,0DALO,EAMP,kEANO,EAOP,sFAPO,EASP;AACA,wEAVO,EAYP,4EAZO,EAcP,uEAdO,EAgBP,8DAAUL,OAAV,CAAkB;AAChBe,gCAAkB,EAAE;AAClBR,uBAAO,EAAE,+DADS;AAElBS,0BAAU,EAAE,iEAFM;AAGlBC,oBAAI,EAAE,CAAC,sGAAD;AAHY;AADJ,aAAlB,CAhBO,EAwBP;AACA,oFAzBO,EA2BP;AACA,yGA5BO,EA6BP,4GA7BO,EA8BP,oEA9BO,CADD;AAiCRC,wBAAY,EAAE,CACZ,+DADY,EAEZ,oFAFY,EAGZ,6FAHY,EAIZ,wFAJY,EAKZ,wFALY,EAMZ,qIANY,EAOZ,wIAPY,EAQZ,iHARY,CAjCN;AA2CRN,qBAAS,EAAE,CACT,0DADS,EAET;AACEL,qBAAO,EAAE,sEADX;AAEEC,sBAAQ,EAAE,kGAFZ;AAGEC,mBAAK,EAAE;AAHT,aAFS,EAOT;AACEF,qBAAO,EAAE,sEADX;AAEEC,sBAAQ,EAAE,+FAFZ;AAGEC,mBAAK,EAAE;AAHT,aAPS,EAYT;AACEF,qBAAO,EAAE,0DADX;AAEEC,sBAAQ,EAAE;AAFZ,aAZS,EAgBT;AACED,qBAAO,EAAE,yBADX;AAEEG,sBAAQ,EAAE;AACRC,yBAAS,EAAE,KADH;AAERC,yBAAS,EAAE,CACT;AACE1B,oBAAE,EAAE,2EAAoB2B,WAD1B;AAEEC,0BAAQ,EAAE,IAAI,0EAAJ,CACR,0EADQ,CACmE;AADnE;AAFZ,iBADS;AAFH;AAFZ,aAhBS,CA3CH;AA0ER7B,mBAAO,EAAE,EA1ED;AA2ERkC,qBAAS,EAAE,CAAC,+DAAD;AA3EH,W;AA6EY,U;;;;;;;;;;;;;;;;;;ACnHtyD;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAwB,WAAxB;;AAEvD;;;;AACF;;;;;;AAHmF;;AAEjF;;AAAA;;;;;;AA0BE;;AAEE;;;;AACF;;;;;;AAHsE;;AAEpE;;AAAA;;;;;;AAoBJ;;AACE;;;;AACF;;;;AADE;;AAAA;;;;;;AAGF;;AAGE;;AACF;;;;;;;;AAFQ;;;;;;AAOJ;;AACE;;AACC;;AACF;;AACA;;AACE;;AACF;;AACA;;;;;;AALE;;AAAA;;AAGA;;AAAA;;;;;;AAiCH;;AACE;;AACF;;;;;;AAFwC;;AACtC;;AAAA;;;;;;;;AAHN;;AACE;;AAAiC;AAAA;;AAAA;;AAAA;AAAA;;AAC/B;;AAGF;;AACF;;;;;;;;AALc;;AAAA;;AACE;;AAAA;;;;;;;;;;;;;;;;UD/EbC,Y;AA2BX,8BACUC,KADV,EAEUC,cAFV,EAGUC,MAHV,EAIUC,MAJV,EAKUC,qBALV,EAKsD;AAAA;;AAAA;;AAJ5C,eAAAJ,KAAA,GAAAA,KAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AA5BV,eAAAC,MAAA,GAAS,sEAAIC,UAAb;AACA,eAAAC,OAAA,GAAU,sEAAIA,OAAd;AACA,eAAAC,OAAA,GAAU,sEAAIC,QAAJ,CAAaC,GAAvB;AACA,eAAAC,IAAA,GAAO,IAAIC,IAAJ,GAAWC,WAAX,EAAP;AACA,eAAAC,IAAA,GAAO,mBAAO;AAAC;AAAA,iCAAD,CAAP,WAAP;AACA,eAAAC,SAAA,GAAY,CAAC,IAAD,CAAZ;AACA,eAAAC,cAAA,GAAiB,KAAK,EAAtB,CAsBsD,CAtB5B;;AAC1B,eAAAC,UAAA,GAAa,CACX;AAAEC,gBAAI,EAAE,OAAR;AAAiBC,iBAAK,EAAE;AAAxB,WADW,EAEX;AAAED,gBAAI,EAAE,UAAR;AAAoBC,iBAAK,EAAE;AAA3B,WAFW,EAGX;AAAED,gBAAI,EAAE,UAAR;AAAoBC,iBAAK,EAAE;AAA3B,WAHW,CAAb;AAKA,eAAAC,kBAAA,gCACK,KAAKH,UADV,IAEE;AAAEC,gBAAI,EAAE,UAAR;AAAoBC,iBAAK,EAAE;AAA3B,WAFF;AAkBE,eAAKf,qBAAL,CAA2BiB,WAA3B,CAAuCC,SAAvC,CAAiD,UAAAC,CAAC,EAAI;AACpD,iBAAI,CAACC,eAAL,GAAuBD,CAAC,KAAK,IAA7B;AACA,iBAAI,CAACF,WAAL,GAAmBE,CAAnB;AACD,WAHD;AAID;;;;0CAMe;AACd,iBAAKnB,qBAAL,CAA2BqB,MAA3B;AACA,iBAAKvB,MAAL,CAAYwB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;qCAEO;AAAA;;AACN,iBAAKC,UAAL,GAAkBC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAlB,CADM,CAGN;;AACA,iBAAKC,oBAAL,GAA4B,KAAK7B,MAAL,CACzB8B,aADyB,CACX,KAAKjB,cADM,EAEzBM,SAFyB,CAEf,UAACY,UAAD,EAAyB;AAClC,kBAAIA,UAAJ,EAAgB;AACd,sBAAI,CAACC,aAAL;AACD;AACF,aANyB,CAA5B;AAQA,iBAAKlC,cAAL,CAAoBmC,gBAApB;;AACA,gBAAIrC,YAAY,CAACsC,kBAAb,EAAJ,EAAuC;AACrC,mBAAKrC,KAAL,CAAWsC,QAAX,CACE,mHAA2C;AACzCC,sCAAsB,EAAE;AADiB,eAA3C,CADF;AAKD;;AAED,iBAAKC,gBAAL,GAAwB,KAAKxC,KAAL,CAAWyC,IAAX,CAAgB,2DAAO,uEAAP,CAAhB,CAAxB;AACA,iBAAKC,aAAL,GAAqB,KAAK1C,KAAL,CAAWyC,IAAX,CAAgB,2DAAO,4EAAP,CAAhB,CAArB;AACA,iBAAKE,SAAL,GAAiB,KAAK3C,KAAL,CAAWyC,IAAX,CAAgB,2DAAO,wEAAP,CAAhB,CAAjB;AACA,iBAAKG,MAAL,GAAc,KAAK5C,KAAL,CAAWyC,IAAX,CAAgB,2DAAO,sEAAP,CAAhB,CAAd;AACD;;;wCAEU;AACT,gBAAI,KAAKT,oBAAT,EAA+B;AAC7B,mBAAKA,oBAAL,CAA0Ba,WAA1B;AACD;AACF;;;iDAEqC;AAAA,gBAAZC,QAAY,QAAnBC,KAAmB;AACpC,iBAAK/C,KAAL,CAAWsC,QAAX,CAAoB,qGAA6B;AAAEQ,sBAAQ,EAARA;AAAF,aAA7B,CAApB;AACD;;;+CA5CmC;AAClC,mBAAO,CAAC,IAAD,EAAO,MAAP,EAAe,QAAf,EAAyBE,QAAzB,CAAkC,iEAAUC,IAA5C,CAAP;AACD;;;;;;;yBA1CUlD,Y,EAAY,kH,EAAA,sI,EAAA,uH,EAAA,2H,EAAA,sK;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,iB;AAAA,gB;AAAA,0wE;AAAA;AAAA;;;AC9BzB;;;;AAEE;;AAEE;;AACE;;AAAsB;;AACpB;;AAAM;;;;AAAkC;;AAAO;;AACjD;;AACE;;AAIA;;AACE;;AACF;;AACF;;AACF;;AAEA;;AAEE;;;;;;AAEE;;AACE;;AAA0C;AAAA;;AAAA;;AAAA,qBAAS,UAAT;AAAuB,aAAvB;;AACxC;;AAEF;;AAEA;;AACE;;AAAgC;;AAClC;;AAAgF;;AACoB;;;;AAClE;;AAClC;;AAA+D;;AAAgC;;AAAO;;AAEtG;;AACE;;AAIF;;AAkBA;;AAIA;;AAMA;;AAEE;;AACE;;AASA;;AACE;;AACF;;AACA;;AAAM;;AAAgB;;AACxB;;AAEA;;AAAsB;AAAA,qBAAS,IAAAoC,aAAA,EAAT;AAAwB,aAAxB;;AACpB;;AACE;;AACF;;AACA;;AAAM;;;;AAAmC;;AAC3C;;AAEF;;AAKA;;;;AAME;;AACF;;AAEA;;;;AAOF;;AACF;;AAEA;;AAEE;;AACA;;AACF;;AAEA;;AACE;;AACE;;AACE;;AACE;;AACA;;AAAM;;AAAM;;AACd;;AACA;;AACE;;AACA;;AAAM;;AAAO;;AACf;;AACA;;AAEE;;AACA;;AAAM;;AAAO;;AACf;;AAEF;;AACF;;AAEF;;AAEF;;AAEF;;AAEF;;;;;;AArJK;;AAK4B;;AAAA,mJAAY,KAAZ,EAAY,QAAZ;;AACnB;;AAAA;;AAEW;;AAAA;;AAYE;;AAAA;;AAChB;;AAQM;;AAAA,mJAAY,KAAZ,EAAY,QAAZ;;AAC8E;;AAAA,mJAAY,KAAZ,EAAY,QAAZ;;AACe;;AAAA;;AAEhC;;AAAA,mJAAY,KAAZ,EAAY,QAAZ;;AAG5B;;AAAA;;AAsBa;;AAAA;;AAI7C;;AAAA;;AASE;;AAAA;;AAmBA;;AAAA;;AAQP;;AAAA;;AAMQ;;AAAA;;AAGL;;AAAA;;AAWL;;AAAA;;AASY;;AAAA;;AAIA;;AAAA;;AAKA;;AAAA;;;;;;;qBD5GT,CAAC,iEAAD;;;;;;wEAEDpC,Y,EAAY;gBANxB,uDAMwB;iBANd;AACTmD,oBAAQ,EAAE,UADD;AAETC,uBAAW,EAAE,sBAFJ;AAGTC,qBAAS,EAAE,CAAC,sBAAD,CAHF;AAITC,sBAAU,EAAE,CAAC,iEAAD;AAJH,W;AAMc,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE9BzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaC,iB;AACX,qCAAc;AAAA;;AACZA,2BAAiB,CAACC,kBAAlB,GAAuC,MAAvC;AACD;;;;mDASCC,c,EACAC,kB,EAA2B;AAE3BH,6BAAiB,CAACC,kBAAlB,GACEC,cAAc,IAAIC,kBAAlB,GACI,KADJ,GAEID,cAAc,GACd,MADc,GAEdC,kBAAkB,GAClB,UADkB,GAElB,MAPN;AAQD;;;gDAhB4BC,I,EAA0B;AACrD,mBAAOJ,iBAAiB,CAACC,kBAAlB,KAAyCG,IAAhD;AACD;;;;;;AAJc,wBAAAH,kBAAA,GAAyC,MAAzC;;;yBALJD,iB;AAAiB,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;wEAEDA,iB,EAAiB;gBAH7B,wDAG6B;iBAHlB;AACVK,sBAAU,EAAE;AADF,W;AAGkB,U;;;;;;;;;;;;;;;;;;;;ACL9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAWO,UAAMC,yBAAyB,GAAG,2BAAlC;AAEP,UAAMC,SAAS,GAAU,CACvB,kEAAM,YAAN,EAAoB,kEAAM;AAAEC,eAAO,EAAE,CAAX;AAAcC,gBAAQ,EAAE;AAAxB,OAAN,CAApB,EAA8D;AAC5DC,gBAAQ,EAAE;AADkD,OAA9D,CADuB,EAIvB,kEAAM,aAAaJ,yBAAnB,EAA8C,kEAAM;AAAEE,eAAO,EAAE;AAAX,OAAN,CAA9C,EAAqE;AACnEE,gBAAQ,EAAE;AADyD,OAArE,CAJuB,EAOvB,qEAAS,CACP,kEACE,YADF,EAEE,CACE,kEAAM;AAAEC,iBAAS,EAAE,gBAAb;AAA+BH,eAAO,EAAE;AAAxC,OAAN,CADF,EAEE,oEACE,kBADF,EAEE,kEAAM;AAAEG,iBAAS,EAAE,iBAAb;AAAgCH,eAAO,EAAE;AAAzC,OAAN,CAFF,CAFF,EAME,kEAAM;AAAEC,gBAAQ,EAAE;AAAZ,OAAN,CANF,CAFF,EAUE;AAAEC,gBAAQ,EAAE;AAAZ,OAVF,CADO,EAaP,kEACE,YADF,EAEE,CACE,kEAAM;AACJC,iBAAS,EAAE,iBADP;AAEJH,eAAO,EAAE,CAFL;AAGJC,gBAAQ,EAAE;AAHN,OAAN,CADF,EAME,oEACE,kBADF,EAEE,kEAAM;AAAEE,iBAAS,EAAE,gBAAb;AAA+BH,eAAO,EAAE;AAAxC,OAAN,CAFF,CANF,CAFF,EAaE;AAAEE,gBAAQ,EAAE;AAAZ,OAbF,CAbO,CAAT,CAPuB,EAoCvB,kEACE,aAAaJ,yBADf,EAEE,oEAAQ,EAAR,EAAY,CACV,kEAAM;AAAEK,iBAAS,EAAE,iBAAb;AAAgCH,eAAO,EAAE;AAAzC,OAAN,CADU,EAEV,oEACE,kBADF,EAEE,kEAAM;AAAEG,iBAAS,EAAE,gBAAb;AAA+BH,eAAO,EAAE;AAAxC,OAAN,CAFF,CAFU,CAAZ,CAFF,EASE;AAAEE,gBAAQ,EAAE;AAAZ,OATF,CApCuB,CAAzB;AAgDA,UAAME,UAAU,GAAG,EAAnB;AACA,UAAMC,UAAU,GAAG,CAACN,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAAnB;AACA,UAAMO,cAAc,GAAG,CAACP,SAAS,CAAC,CAAD,CAAV,EAAeA,SAAS,CAAC,CAAD,CAAxB,CAAvB;AAEO,UAAMQ,eAAe,GAAG,oEAAQ,iBAAR,EAA2B,CACxD,uEAAWC,oBAAX,EAAiCT,SAAjC,CADwD,EAExD,uEAAWU,qBAAX,EAAkCL,UAAlC,CAFwD,EAGxD,uEAAWM,qBAAX,EAAkCL,UAAlC,CAHwD,EAIxD,uEAAWM,yBAAX,EAAsCL,cAAtC,CAJwD,CAA3B,CAAxB;;AAOA,eAASE,oBAAT,GAAgC;AACrC,eAAO,sEAAkBI,qBAAlB,CAAwC,KAAxC,CAAP;AACD;;AAEM,eAASH,qBAAT,GAAiC;AACtC,eAAO,sEAAkBG,qBAAlB,CAAwC,MAAxC,CAAP;AACD;;AAEM,eAASF,qBAAT,GAAiC;AACtC,eAAO,sEAAkBE,qBAAlB,CAAwC,MAAxC,CAAP;AACD;;AAEM,eAASD,yBAAT,GAAqC;AAC1C,eAAO,sEAAkBC,qBAAlB,CAAwC,UAAxC,CAAP;AACD;;;;;;;;;;;;;;;;;ACtFD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaC,gB;AACX,kCACUzE,MADV,EAEUE,qBAFV,EAEsD;AAAA;;AAD5C,eAAAF,MAAA,GAAAA,MAAA;AACA,eAAAE,qBAAA,GAAAA,qBAAA;AACN;;;;sCAEQwE,K,EAA+BC,K,EAA4B;AACrE,gBAAMxD,WAAW,GAAG,KAAKjB,qBAAL,CAA2B0E,gBAA/C;;AACA,gBAAIzD,WAAJ,EAAiB;AACf,qBAAO,IAAP;AACD,aAJoE,CAMrE;;;AACA,iBAAKnB,MAAL,CAAYwB,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAAEqD,yBAAW,EAAE;AAAEC,yBAAS,EAAEH,KAAK,CAACI;AAAnB;AAAf,aAAjC;AACA,mBAAO,KAAP;AACD;;;;;;;yBAfUN,gB,EAAgB,8G,EAAA,6J;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;wEAEDA,gB,EAAgB;gBAH5B,wDAG4B;iBAHjB;AACVhB,sBAAU,EAAE;AADF,W;AAGiB,U;;;;;;;;;;;;;;;;;;;;;;;;ACZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,UAAMuB,SAAS,GAAG,iEAAa,cAAb,CAAlB;AACA,UAAMC,UAAU,GAAG,iEAAa,eAAb,CAAnB;;;;;;;;;;;;;;;;ACHP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAMC,QAAQ,GAAG,MAAjB;;UAGMC,W,GACX,qBACUC,QADV,EAEUC,mBAFV,EAGUrF,MAHV,EAGwB;AAAA;;AAAA;;AAFd,aAAAoF,QAAA,GAAAA,QAAA;AACA,aAAAC,mBAAA,GAAAA,mBAAA;AACA,aAAArF,MAAA,GAAAA,MAAA;AAGV,aAAAsF,KAAA,GAAQ,mEACN;AAAA,iBACE,MAAI,CAACF,QAAL,CAAc7C,IAAd,CACE,6DAAO,uDAAP,CADF,EAEE,2DAAI;AAAA,mBACF,MAAI,CAAC8C,mBAAL,CAAyBE,OAAzB,CAAiCL,QAAjC,EAA2C;AAAE5D,6BAAe,EAAE;AAAnB,aAA3C,CADE;AAAA,WAAJ,CAFF,CADF;AAAA,SADM,EAQN;AAAEc,kBAAQ,EAAE;AAAZ,SARM,CAAR;AAWA,aAAAb,MAAA,GAAS,mEACP;AAAA,iBACE,MAAI,CAAC6D,QAAL,CAAc7C,IAAd,CACE,6DAAO,wDAAP,CADF,EAEE,2DAAI,YAAM;AACR,kBAAI,CAACvC,MAAL,CAAYwB,QAAZ,CAAqB,CAAC,EAAD,CAArB;;AACA,kBAAI,CAAC6D,mBAAL,CAAyBE,OAAzB,CAAiCL,QAAjC,EAA2C;AACzC5D,6BAAe,EAAE;AADwB,aAA3C;AAGD,WALD,CAFF,CADF;AAAA,SADO,EAWP;AAAEc,kBAAQ,EAAE;AAAZ,SAXO,CAAT;AAbI,O;;;yBALO+C,W,EAAW,6G,EAAA,gJ,EAAA,8G;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW;;;;;wEAAXA,W,EAAW;gBADvB;AACuB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACXxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,UAAMK,YAAY,GAAc;AACrClE,uBAAe,EAAE;AADoB,OAAhC;AAIP,UAAMmE,OAAO,GAAG,kEACdD,YADc,EAEd,uDAAG,uDAAH,EAAc,UAAAb,KAAK;AAAA,eAAK,MAAD,OAAC,CAAD,kBAAMA,KAAN,CAAC,EAAU;AAAErD,yBAAe,EAAE;AAAnB,SAAV,CAAL;AAAA,OAAnB,CAFc,EAGd,uDAAG,wDAAH,EAAe,UAAAqD,KAAK;AAAA,eAAK,MAAD,OAAC,CAAD,kBAAMA,KAAN,CAAC,EAAU;AAAErD,yBAAe,EAAE;AAAnB,SAAV,CAAL;AAAA,OAApB,CAHc,CAAhB;;AAMO,eAASoE,WAAT,CACLf,KADK,EAELgB,MAFK,EAES;AAEd,eAAOF,OAAO,CAACd,KAAD,EAAQgB,MAAR,CAAd;AACD;;;;;;;;;;;;;;;;;ACnBD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKO,UAAMC,UAAU,GAAG,mEACxB,2DADwB,EAExB,UAACjB,KAAD;AAAA,eAAsBA,KAAtB;AAAA,OAFwB,CAAnB;AAKA,UAAMkB,qBAAqB,GAAG,mEACnC,2DADmC,EAEnC,UAAClB,KAAD;AAAA,eAAsBA,KAAK,CAACrD,eAA5B;AAAA,OAFmC,CAA9B;;;;;;;;;;;;;;;;ACVP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAOA;;;;;;;UAQawE,qB;AASX,uCAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AANH,eAAAC,OAAA,GAAU,sEAAYC,MAAtB;AACA,eAAAC,QAAA,GAAW,sEAAYC,OAAvB;AAEA,eAAAC,SAAA,GAAY,KAAKF,QAAL,GAAgB,WAA5B;AACA,eAAAG,aAAA,GAAgB,KAAKH,QAAL,GAAgB,eAAhC;AAGf,eAAKI,kBAAL,GAA0B,IAAI,oDAAJ,CACxB5E,IAAI,CAACC,KAAL,CAAW4E,cAAc,CAAC1E,OAAf,CAAuB,KAAKuE,SAA5B,CAAX,CADwB,CAA1B;AAGA,eAAKjF,WAAL,GAAmB,KAAKmF,kBAAL,CAAwBE,YAAxB,EAAnB;AACD;;;;;AAMD;;;;gCAIMC,Q,EAAkBC,Q,EAAkB;AAAA;;AACxC,mBAAO,KAAKX,IAAL,CACJY,IADI,WACS,KAAKX,OADd,cACgC;AACnCY,mBAAK,EAAEH,QAD4B;AAEnCC,sBAAQ,EAAEA;AAFyB,aADhC,EAKJnE,IALI,CAMH,2DAAI,UAAAsE,IAAI,EAAI;AACV;AACA,kBAAIA,IAAI,IAAIA,IAAI,CAACC,MAAjB,EAAyB;AACvB,sBAAI,CAACC,aAAL,CAAmBrF,IAAI,CAACsF,SAAL,CAAeH,IAAI,CAACC,MAApB,CAAnB;;AACA,sBAAI,CAACG,iBAAL,CAAuBvF,IAAI,CAACsF,SAAL,CAAeH,IAAI,CAACK,OAApB,CAAvB;;AACA,sBAAI,CAACZ,kBAAL,CAAwBa,IAAxB,CAA6BN,IAA7B;AACD;;AACD,qBAAOA,IAAP;AACD,aARD,CANG,CAAP;AAgBD,W,CAED;;;;wCACsBO,G,EAAa;AACjCb,0BAAc,CAAChB,OAAf,CAAuB,KAAKa,SAA5B,EAAuCgB,GAAvC;AACD;AAED;;;;;;;4CAI0BC,K,EAAe;AACvCd,0BAAc,CAAChB,OAAf,CAAuB,KAAKc,aAA5B,EAA2CgB,KAA3C;AACD;AAED;;;;;;;mCAIS;AACP;AACAd,0BAAc,CAACe,UAAf,CAA0B,KAAKlB,SAA/B;AACA,iBAAKE,kBAAL,CAAwBa,IAAxB,CAA6B,IAA7B;AACD;AAED;;;;;;;wCAIW;AACT,mBAAOzF,IAAI,CAACC,KAAL,CAAW4E,cAAc,CAAC1E,OAAf,CAAuB,KAAKuE,SAA5B,CAAX,CAAP;AACD;AAED;;;;;;;4CAI0B;AACxB,mBAAO1E,IAAI,CAACC,KAAL,CAAW4E,cAAc,CAAC1E,OAAf,CAAuB,KAAKwE,aAA5B,CAAX,CAAP;AACD;AAED;;;;;;;uCAIa;AACX,mBAAO,KAAKkB,WAAL,OAAuB,IAA9B;AACD;AAED;;;;;;;yCAKe;AAAA;;AACb,mBAAO,KAAKxB,IAAL,CACJY,IADI,WACS,KAAKX,OADd,sBACwC;AAC3CkB,qBAAO,EAAE,KAAKM,eAAL;AADkC,aADxC,EAIJjF,IAJI,CAKH,2DAAI,UAAAkF,MAAM,EAAI;AACZ,oBAAI,CAACV,aAAL,CAAmBrF,IAAI,CAACsF,SAAL,CAAeS,MAAM,CAACX,MAAtB,CAAnB;AACD,aAFD,CALG,CAAP;AASD;AAED;;;;;;;+CAKqBY,a,EAAqB;AAAA;;AACxC,mBAAO,KAAK3B,IAAL,CACJY,IADI,WACS,KAAKX,OADd,4BAC8C;AACjD2B,4BAAc,EAAED;AADiC,aAD9C,EAIJnF,IAJI,CAKH,2DAAI,UAAA8E,KAAK,EAAI;AACX;AACA,kBAAIA,KAAK,IAAIA,KAAK,CAACP,MAAnB,EAA2B;AACzB,sBAAI,CAACC,aAAL,CAAmBrF,IAAI,CAACsF,SAAL,CAAeK,KAAK,CAACP,MAArB,CAAnB;;AACA,sBAAI,CAACG,iBAAL,CAAuBvF,IAAI,CAACsF,SAAL,CAAeK,KAAK,CAACH,OAArB,CAAvB;;AACA,sBAAI,CAACZ,kBAAL,CAAwBa,IAAxB,CAA6BE,KAA7B;AACD;;AACD,qBAAOA,KAAP;AACD,aARD,CALG,CAAP;AAeD;AAED;;;;;;;+CAKqBO,I,EAAI;AACvB,mBAAO,KAAK7B,IAAL,CAAUY,IAAV,WAAuB,KAAKX,OAA5B,6BAA6D4B,IAA7D,CAAP;AACD;AAED;;;;;;;+CAIqBA,I,EAAI;AACvB;AACA,mBAAO,KAAK7B,IAAL,CAAUY,IAAV,WACF,KAAKX,OADH,qCAEL4B,IAFK,CAAP;AAID;AAED;;;;;;;sCAIYA,I,EAAI;AACd,mBAAO,KAAK7B,IAAL,CAAUY,IAAV,WAAuB,KAAKX,OAA5B,8BAA8D4B,IAA9D,CAAP;AACD;AAED;;;;;;;6CAImBA,I,EAAI;AACrB,mBAAO,KAAK7B,IAAL,CAAUY,IAAV,WAAuB,KAAKX,OAA5B,uBAAuD4B,IAAvD,CAAP;AACD;;;8BArJ0B;AACzB,mBAAO,KAAKtB,kBAAL,CAAwBzD,KAA/B;AACD;;;;;;;yBAlBUiD,qB,EAAqB,uH;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFpB;;;;;wEAEDA,qB,EAAqB;gBAHjC,wDAGiC;iBAHtB;AACVrC,sBAAU,EAAE;AADF,W;AAGsB,U;;;;;;;;;;;;;;;;;;;;;;ACflmGO,eAASoE,iBAAT,CAA2B9B,IAA3B,EAA6C;AAClD,eAAO,IAAI,8EAAJ,CACLA,IADK,YAEF,uEAAY+B,UAFV,oBAGL,OAHK,CAAP;AAKD;;UAqEYC,U,GACX,oBAGEC,YAHF,EAIEC,aAJF,EAI8B;AAAA;;AAE5B,YAAID,YAAJ,EAAkB;AAChB,gBAAM,IAAI1K,KAAJ,CAAU,wDAAV,CAAN;AACD;;AACD2K,qBAAa,CAACC,QAAd,CACE,wEADF,EAEE,yEAFF,EAGE,yEAHF,EAIE,yEAJF,EAKE,2EALF,EAME,6EANF,EAOE,yEAPF,EAQE,+EARF,EASE,+EATF,EAUE,4EAVF,EAWE,6EAXF,EAYE,6EAZF,EAaE,+EAbF,EAcE,6EAdF;AAgBD,O;;;cA1BUH;;;;2BAAAA,U,EAAU,uDAILA,UAJK,EAIK,EAJL,C,EAIK,sI;AAAA,S;AAAA,mBA5Bf,CACT;AAAE/I,iBAAO,EAAE,sEAAX;AAA8BC,kBAAQ,EAAE,+FAAxC;AAA8DC,eAAK,EAAE;AAArE,SADS,EAET;AAAEF,iBAAO,EAAE,wEAAX;AAAkCC,kBAAQ,EAAE;AAA5C,SAFS,C;AAGV,kBA7CQ,CACP;AACA,oEAFO,EAGP,qEAHO,EAIP,2DAJO,EAMP;AACA,mFAPO,EAQP,2EARO,EASP,qEATO,EAUP,qEAVO,EAWP,qEAXO,EAYP,yEAZO,EAaP,2EAbO,EAcP,8EAdO,EAeP,yEAfO,EAiBP;AACA,gEAAYR,OAAZ,CAAoB,qDAApB,EAA8B;AAAE0J,sBAAY,EAAZ;AAAF,SAA9B,CAlBO,EAmBP,+EAA4B1J,OAA5B,EAnBO,EAoBP,4DAAcA,OAAd,CAAsB,CACpB,+DADoB,EAEpB,2EAFoB,EAGpB,kGAHoB,CAAtB,CApBO,EAyBP,uEAAY2B,UAAZ,GACI,EADJ,GAEI,yEAAoBgI,UAApB,CAA+B;AAC7BrF,cAAI,EAAE;AADuB,SAA/B,CA3BG,EA+BP;AACA,0FAhCO,EAiCP,oEAAgBtE,OAAhB,CAAwB;AACtB4J,gBAAM,EAAE;AACNrJ,mBAAO,EAAE,mEADH;AAENS,sBAAU,EAAEoI,iBAFN;AAGNnI,gBAAI,EAAE,CAAC,+DAAD;AAHA;AADc,SAAxB,CAjCO,CA6CR,EAEC;AACA,mEAHD,EAKC;AACA,mFAND,EAOC,2EAPD,EAQC,qEARD,EASC,qEATD,EAUC,qEAVD,EAWC,yEAXD,EAYC,2EAZD,EAaC,8EAbD,EAcC,yEAdD,EAgBC;AACA,0FAjBD,EAkBC,mEAlBD;;;;4HAqBUqI,U,EAAU;AAAA,oBAjEnB;AACA,sEAgEmB,EA/DnB,qEA+DmB,EA9DnB,2DA8DmB,EA5DnB;AACA,qFA2DmB,EA1DnB,2EA0DmB,EAzDnB,qEAyDmB,EAxDnB,qEAwDmB,EAvDnB,qEAuDmB,EAtDnB,yEAsDmB,EArDnB,2EAqDmB,EApDnB,8EAoDmB,EAnDnB,yEAmDmB,EAnDJ,2DAmDI,EAnDJ,8EAmDI,EAnDJ,+DAmDI,EAnDJ,wEAmDI,EAnCnB;AACA,4FAkCmB,EAlCF,mEAkCE;AAlCF,oBAejB;AACA,qEAhBiB,EAkBjB;AACA,qFAnBiB,EAoBjB,2EApBiB,EAqBjB,qEArBiB,EAsBjB,qEAtBiB,EAuBjB,qEAvBiB,EAwBjB,yEAxBiB,EAyBjB,2EAzBiB,EA0BjB,8EA1BiB,EA2BjB,yEA3BiB,EA6BjB;AACA,4FA9BiB,EA+BjB,mEA/BiB;AAkCE,S;AAHJ,O;;;;;wEAGNA,U,EAAU;gBAnEtB,sDAmEsB;iBAnEb;AACRjJ,mBAAO,EAAE,CACP;AACA,wEAFO,EAGP,qEAHO,EAIP,2DAJO,EAMP;AACA,uFAPO,EAQP,2EARO,EASP,qEATO,EAUP,qEAVO,EAWP,qEAXO,EAYP,yEAZO,EAaP,2EAbO,EAcP,8EAdO,EAeP,yEAfO,EAiBP;AACA,oEAAYL,OAAZ,CAAoB,qDAApB,EAA8B;AAAE0J,0BAAY,EAAZ;AAAF,aAA9B,CAlBO,EAmBP,+EAA4B1J,OAA5B,EAnBO,EAoBP,4DAAcA,OAAd,CAAsB,CACpB,+DADoB,EAEpB,2EAFoB,EAGpB,kGAHoB,CAAtB,CApBO,EAyBP,uEAAY2B,UAAZ,GACI,EADJ,GAEI,yEAAoBgI,UAApB,CAA+B;AAC7BrF,kBAAI,EAAE;AADuB,aAA/B,CA3BG,EA+BP;AACA,8FAhCO,EAiCP,oEAAgBtE,OAAhB,CAAwB;AACtB4J,oBAAM,EAAE;AACNrJ,uBAAO,EAAE,mEADH;AAENS,0BAAU,EAAEoI,iBAFN;AAGNnI,oBAAI,EAAE,CAAC,+DAAD;AAHA;AADc,aAAxB,CAjCO,CADD;AA0CRC,wBAAY,EAAE,EA1CN;AA2CRN,qBAAS,EAAE,CACT;AAAEL,qBAAO,EAAE,sEAAX;AAA8BC,sBAAQ,EAAE,+FAAxC;AAA8DC,mBAAK,EAAE;AAArE,aADS,EAET;AAAEF,qBAAO,EAAE,wEAAX;AAAkCC,sBAAQ,EAAE;AAA5C,aAFS,CA3CH;AA+CRvB,mBAAO,EAAE,CACP;AACA,uEAFO,EAIP;AACA,uFALO,EAMP,2EANO,EAOP,qEAPO,EAQP,qEARO,EASP,qEATO,EAUP,yEAVO,EAWP,2EAXO,EAYP,8EAZO,EAaP,yEAbO,EAeP;AACA,8FAhBO,EAiBP,mEAjBO;AA/CD,W;AAmEa,U;;kBAILqK,U;AAAU;oBAFvB;AAEuB,e;oBADvB;aACuB;;;;;;;;;;;;;;;;;;;;;;AClL5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAiBO,UAAMO,QAAQ,GAA+B;AAClDC,YAAI,EAAE,8DAD4C;AAElDC,gBAAQ,EAAE,0EAFwC;AAGlDxI,cAAM,EAAE;AAH0C,OAA7C;AAMA,UAAMmI,YAAY,GAA4B,CACnD,8GADmD,CAA9C;;AAIP,UAAI,CAAC,sEAAY/H,UAAjB,EAA6B;AAC3B,YAAI,CAAC,sEAAYqI,IAAjB,EAAuB;AACrBN,sBAAY,CAACO,OAAb,CAAqB,kEAArB;AACD;AACF;;AAEM,UAAMC,eAAe,GAAG,0EAC7B,MAD6B,CAAxB;AAIA,UAAMC,mBAAmB,GAAG,0EAGjC,UAHiC,CAA5B;AAKA,UAAMC,iBAAiB,GAAG,0EAG/B,QAH+B,CAA1B;;;;;;;;;;;;;;;;AC1CP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaC,sB,GACX,gCAAoB9I,MAApB,EAAoC;AAAA;;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAEpB,aAAA+I,QAAA,GAAW,mEACT;AAAA,iBAAM;AAAA,mBACJ,MAAI,CAAC/I,MAAL,CAAYgJ,MAAZ,CAAmBzG,IAAnB,CACE,8DAAO,UAAA0G,KAAK;AAAA,qBAAIA,KAAK,YAAY,6DAArB;AAAA,aAAZ,CADF,EAEE,2DAAI,UAACA,KAAD,EAA0B;AACtBC,oBAAO,CAACC,EAAR,CAAW,KAAX,EAAkB,MAAlB,EAA0BF,KAAK,CAACG,iBAAhC;AACAF,oBAAO,CAACC,EAAR,CAAW,MAAX,EAAmB,UAAnB;AACP,aAHD,CAFF,CADI;AAAA,WAAN;AAAA,SADS,EAST;AAAE/G,kBAAQ,EAAE;AAAZ,SATS,CAAX;AAFsC,O;;;yBAD3B0G,sB,EAAsB,8G;AAAA,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB;;;;;wEAAtBA,sB,EAAsB;gBADlC;AACkC,U;;;;;;;;;;;;;;;;;;;;;;ACNnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAYA;;;;;UAIaO,oB;AACX,sCAA6BC,mBAA7B,EAAuE;AAAA;;AAA1C,eAAAA,mBAAA,GAAAA,mBAAA;AAA4C;;;;oCAGvEC,O,EACApC,I,EAAiB;AAAA;;AAEjB,mBAAOA,IAAI,CAACqC,MAAL,CAAYD,OAAZ,EAAqBhH,IAArB,CACL,kEAAW,UAACkH,KAAD,EAA8B;AACvC,kBAAIC,YAAY,GAAG,EAAnB;;AAEA,kBAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7B,uBAAO,wDAAWA,KAAX,CAAP;AACD,eALsC,CAOvC;;;AACA,kBACEA,KAAK,YAAY,sEAAjB,IACAA,KAAK,CAACE,MAAN,KAAiB,GADjB,IAEAJ,OAAO,CAACxE,GAAR,CAAY6E,OAAZ,CAAoB,WAApB,MAAqC,CAAC,CAHxC,EAIE;AACA,uBAAOzC,IAAI,CAACqC,MAAL,CAAYD,OAAZ,CAAP;AACD;;AACD,kBAAIE,KAAK,CAACA,KAAN,YAAuBI,UAA3B,EAAuC;AACrCH,4BAAY,oBAAaD,KAAK,CAACA,KAAN,CAAYK,OAAzB,CAAZ;AACD,eAFD,MAEO;AACL,oBAAIC,MAAM,GAAG,wBAAb;;AACA,oBAAIN,KAAK,CAACA,KAAV,EAAiB;AACfM,wBAAM,GAAG,EAAT;AACAC,wBAAM,CAACxM,IAAP,CAAYiM,KAAK,CAACA,KAAlB,EAAyBQ,OAAzB,CAAiC,UAAAC,WAAW,EAAI;AAC9CH,0BAAM,IAAIN,KAAK,CAACA,KAAN,CAAYS,WAAZ,IAA2B,KAArC;AACD,mBAFD;AAGD;;AACDR,4BAAY,oBAAaK,MAAb,CAAZ,CARK,CAQ8B;AACpC;;AACD,oBAAI,CAACT,mBAAL,CAAyBG,KAAzB,CAA+BC,YAA/B;;AACA,qBAAO,wDAAWA,YAAX,CAAP;AACD,aA7BD,CADK,CAAP;AAgCD;;;;;;;yBAvCUL,oB,EAAoB,oJ;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB;;;;;wEAApBA,oB,EAAoB;gBADhC;AACgC,U;;;;;;;;;;;;;;;;;;;;;;AChBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYac,gB;AAMX,kCAAmBC,WAAnB,EAAuD;AAAA;;AAApC,eAAAA,WAAA,GAAAA,WAAA;AALX,eAAAC,YAAA,GAAe,KAAf;AACA,eAAAC,mBAAA,GAA4C,IAAI,oDAAJ,CAClD,IADkD,CAA5C;AAIiD;;;;oCAE/Cf,O,EAA2BpC,I,EAAiB;AAAA;;AACpD,mBAAOA,IAAI,CAACqC,MAAL,CAAYD,OAAZ,EAAqBhH,IAArB,CACL,kEAAW,UAAAkH,KAAK,EAAI;AAClB,kBAAIA,KAAK,YAAY,sEAAjB,IAAsCA,KAAK,CAACE,MAAN,KAAiB,GAA3D,EAAgE;AAC9D,uBAAO,MAAI,CAACY,cAAL,CAAoBhB,OAApB,EAA6BpC,IAA7B,CAAP;AACD,eAFD,MAEO;AACL,uBAAO,wDAAWsC,KAAX,CAAP;AACD;AACF,aAND,CADK,CAAP;AASD;;;yCAEsBF,O,EAA2BpC,I,EAAmB;AAAA;;AACnE,gBAAI,CAAC,KAAKkD,YAAV,EAAwB;AACtB,mBAAKA,YAAL,GAAoB,IAApB;AACA,mBAAKC,mBAAL,CAAyBnD,IAAzB,CAA8B,IAA9B;AACA,qBAAO,KAAKiD,WAAL,CAAiBI,YAAjB,GAAgCjI,IAAhC,CACL,iEAAU,UAAC8E,KAAD,EAAgB;AACxB,uBAAI,CAACgD,YAAL,GAAoB,KAApB;;AACA,uBAAI,CAACC,mBAAL,CAAyBnD,IAAzB,CAA8BE,KAAK,CAACP,MAApC;;AACA,uBAAOK,IAAI,CAACqC,MAAL,CAAY,OAAI,CAACiB,QAAL,CAAclB,OAAd,EAAuBlC,KAAK,CAACP,MAA7B,CAAZ,CAAP;AACD,eAJD,CADK,CAAP;AAOD,aAVD,MAUO;AACL,qBAAO,KAAKwD,mBAAL,CAAyB/H,IAAzB,CACL,8DAAO,UAAA8E,KAAK;AAAA,uBAAIA,KAAK,IAAI,IAAb;AAAA,eAAZ,CADK,EAEL,4DAAK,CAAL,CAFK,EAGL,iEAAU,UAAAD,GAAG,EAAI;AACf,uBAAOD,IAAI,CAACqC,MAAL,CAAY,OAAI,CAACiB,QAAL,CAAclB,OAAd,EAAuBnC,GAAvB,CAAZ,CAAP;AACD,eAFD,CAHK,CAAP;AAOD;AACF;;;mCAEgBmC,O,EAA2BlC,K,EAAe;AACzD,mBAAOkC,OAAO,CAACmB,KAAR,CAAc;AACnBC,wBAAU,EAAE;AACVC,6BAAa,mBAAYvD,KAAZ;AADH;AADO,aAAd,CAAP;AAKD;;;;;;;yBAhDU8C,gB,EAAgB,6J;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB;;;;;wEAAhBA,gB,EAAgB;gBAD5B;AAC4B,U;;;;;;;;;;;;;;;;;;;;;;ACZ7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEA,UAAMU,UAAU,GAAG,OAAnB;;UAKaC,mB;AACX,uCAAc;AAAA;AAAE;;;;kCAiCRC,G,EAAalI,K,EAAY;AAC/BjB,wBAAY,CAAC2D,OAAb,WAAwBsF,UAAxB,SAAqCE,GAArC,GAA4CrJ,IAAI,CAACsF,SAAL,CAAenE,KAAf,CAA5C;AACD;;;kCAEOkI,G,EAAa;AACnB,mBAAOrJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,WAAwBgJ,UAAxB,SAAqCE,GAArC,EAAX,CAAP;AACD;;;qCAEUA,G,EAAa;AACtBnJ,wBAAY,CAAC0F,UAAb,WAA2BuD,UAA3B,SAAwCE,GAAxC;AACD;AAED;;;;6CACmB;AACjB,gBAAMC,SAAS,GAAG,WAAlB;AACA,gBAAMC,OAAO,GAAG,SAAhB;AACA,gBAAIC,cAAJ;AACA,gBAAMxB,YAAY,GAAG,4CAArB;AAEA,iBAAKnE,OAAL,CAAa0F,OAAb,EAAsBD,SAAtB;AACAE,0BAAc,GAAG,KAAKrJ,OAAL,CAAaoJ,OAAb,CAAjB;AACA,iBAAK3D,UAAL,CAAgB2D,OAAhB;;AAEA,gBAAIC,cAAc,KAAKF,SAAvB,EAAkC;AAChC,oBAAM,IAAI1N,KAAJ,CAAUoM,YAAV,CAAN;AACD;AACF;;;6CAzDyB;AACxB,mBAAOM,MAAM,CAACxM,IAAP,CAAYoE,YAAZ,EAA0BuJ,MAA1B,CAAiC,UAACxG,KAAD,EAAayG,UAAb,EAA4B;AAClE,kBAAIA,UAAU,CAACtI,QAAX,CAAoB+H,UAApB,CAAJ,EAAqC;AACnC,oBAAMQ,SAAS,GAAGD,UAAU,CACzBE,OADe,CACPT,UADO,EACK,EADL,EAEfU,WAFe,GAGfC,KAHe,CAGT,GAHS,EAIfC,GAJe,CAIX,UAAAV,GAAG;AAAA,yBACNA,GAAG,CACAS,KADH,CACS,GADT,EAEGC,GAFH,CAEO,UAACpE,KAAD,EAAQqE,KAAR;AAAA,2BACHA,KAAK,KAAK,CAAV,GACIrE,KADJ,GAEIA,KAAK,CAACsE,MAAN,CAAa,CAAb,EAAgBC,WAAhB,KAAgCvE,KAAK,CAACwE,KAAN,CAAY,CAAZ,CAHjC;AAAA,mBAFP,EAOGC,IAPH,CAOQ,EAPR,CADM;AAAA,iBAJQ,CAAlB;AAcA,oBAAIC,eAAe,GAAGpH,KAAtB;AACA0G,yBAAS,CAACpB,OAAV,CAAkB,UAACc,GAAD,EAAMW,KAAN,EAAgB;AAChC,sBAAIA,KAAK,KAAKL,SAAS,CAACW,MAAV,GAAmB,CAAjC,EAAoC;AAClCD,mCAAe,CAAChB,GAAD,CAAf,GAAuBrJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBuJ,UAArB,CAAX,CAAvB;AACA;AACD;;AACDW,iCAAe,CAAChB,GAAD,CAAf,GAAuBgB,eAAe,CAAChB,GAAD,CAAf,IAAwB,EAA/C;AACAgB,iCAAe,GAAGA,eAAe,CAAChB,GAAD,CAAjC;AACD,iBAPD;AAQD;;AACD,qBAAOpG,KAAP;AACD,aA3BM,EA2BJ,EA3BI,CAAP;AA4BD;;;;;;;yBAhCUmG,mB;AAAmB,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFlB;;;;;wEAEDA,mB,EAAmB;gBAH/B,wDAG+B;iBAHpB;AACVrH,sBAAU,EAAE;AADF,W;AAGoB,U;;;;;;;;;;;;;;;;;;;;ACHhC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,eAASwI,KAAT,CACLxG,OADK,EAC2B;AAEhC,eAAO,UAASd,KAAT,EAAgBgB,MAAhB,EAAwB;AAC7B,cAAMuG,QAAQ,GAAGzG,OAAO,CAACd,KAAD,EAAQgB,MAAR,CAAxB;AACAwG,iBAAO,CAACC,GAAR,2BAA+BzG,MAAM,CAACnC,IAAtC,GAA8C;AAC5C6I,mBAAO,EAAQ1G,MAAO,CAAC0G,OADqB;AAE5CC,oBAAQ,EAAE3H,KAFkC;AAG5CuH,oBAAQ,EAARA;AAH4C,WAA9C;AAKA,iBAAOA,QAAP;AACD,SARD;AASD;;;;;;;;;;;;;;;;;AChBD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,eAASK,yBAAT,CACL9G,OADK,EAC2B;AAEhC,eAAO,UAASd,KAAT,EAAgBgB,MAAhB,EAAwB;AAC7B,cAAMuG,QAAQ,GAAGzG,OAAO,CAACd,KAAD,EAAQgB,MAAR,CAAxB;;AACA,cAAI,CAAC,iDAAK6G,QAAL,EAAD,EAAkB,mDAAOA,QAAP,EAAlB,EAAqC1J,QAArC,CAA8C6C,MAAM,CAACnC,IAArD,CAAJ,EAAgE;AAC9D,mBAAO,MAAP,OAAO,CAAP,kBAAY0I,QAAZ,CAAO,EAAkB,yFAAoBO,gBAApB,EAAlB,CAAP;AACD;;AACD,iBAAOP,QAAP;AACD,SAND;AAOD;;;;;;;;;;;;;;;;;ACdD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;UAOaQ,mB;AACX,qCACmBC,QADnB,EAEmBC,IAFnB,EAE+B;AAAA;;AADZ,eAAAD,QAAA,GAAAA,QAAA;AACA,eAAAC,IAAA,GAAAA,IAAA;AACf;;;;mCAEI9C,O,EAAiB;AACvB,iBAAK+C,IAAL,CAAU/C,OAAV,EAAmB;AACjBgD,sBAAQ,EAAE,IADO;AAEjBC,wBAAU,EAAE;AAFK,aAAnB;AAID;;;+BAEIjD,O,EAAiB;AACpB,iBAAK+C,IAAL,CAAU/C,OAAV,EAAmB;AACjBgD,sBAAQ,EAAE,IADO;AAEjBC,wBAAU,EAAE;AAFK,aAAnB;AAID;;;kCAEOjD,O,EAAiB;AACvB,iBAAK+C,IAAL,CAAU/C,OAAV,EAAmB;AACjBgD,sBAAQ,EAAE,IADO;AAEjBC,wBAAU,EAAE;AAFK,aAAnB;AAID;;;+BAEIjD,O,EAAiB;AACpB,iBAAK+C,IAAL,CAAU/C,OAAV,EAAmB;AACjBgD,sBAAQ,EAAE,IADO;AAEjBC,wBAAU,EAAE;AAFK,aAAnB;AAID;;;gCAEKjD,O,EAAiB;AACrB,iBAAK+C,IAAL,CAAU/C,OAAV,EAAmB;AACjBgD,sBAAQ,EAAE,KADO;AAEjBC,wBAAU,EAAE;AAFK,aAAnB;AAID;;;+BAEYjD,O,EAAiBkD,a,EAAkC;AAAA;;AAC9D;AACA;AACA,iBAAKJ,IAAL,CAAUK,GAAV,CAAc;AAAA,qBAAM,OAAI,CAACN,QAAL,CAAcO,IAAd,CAAmBpD,OAAnB,EAA4B,IAA5B,EAAkCkD,aAAlC,CAAN;AAAA,aAAd;AACD;;;;;;;yBA7CUN,mB,EAAmB,+H,EAAA,4G;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFlB;;;;;wEAEDA,mB,EAAmB;gBAH/B,wDAG+B;iBAHpB;AACVjJ,sBAAU,EAAE;AADF,W;AAGoB,U;;;;;;;;;;;;;;;;;;;;;;;;ACVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMa0J,gB;;;;;;;oCACDC,W,EAAgC;AACxC,gBAAI1I,KAAK,GAAG0I,WAAW,CAACC,IAAxB;;AAEA,mBAAO3I,KAAK,CAAC4I,UAAb,EAAyB;AACvB5I,mBAAK,GAAGA,KAAK,CAAC4I,UAAd;AACD;;AALuC,gBAQtCvI,GARsC,GAUpCqI,WAVoC,CAQtCrI,GARsC;AAAA,gBAS9BF,WAT8B,GAUpCuI,WAVoC,CAStCC,IATsC,CAS9BxI,WAT8B;AAAA,yBAWrBH,KAXqB;AAAA,gBAWhC6I,MAXgC,UAWhCA,MAXgC;AAaxC,mBAAO;AAAExI,iBAAG,EAAHA,GAAF;AAAOwI,oBAAM,EAANA,MAAP;AAAe1I,yBAAW,EAAXA;AAAf,aAAP;AACD;;;;;;;yBAfUsI,gB;AAAgB,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB;;;;;wEAAhBA,gB,EAAgB;gBAD5B;AAC4B,U;;;;;;;;;;;;;;;;;;ACN7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,UAAMK,4BAA4B,GAAG,iEAC1C,4BAD0C,EAE1C,2DAF0C,CAArC;AAKA,UAAMC,yBAAyB,GAAG,iEACvC,yBADuC,EAEvC,2DAFuC,CAAlC;AAIA,UAAMC,iCAAiC,GAAG,iEAC/C,mCAD+C,EAE/C,2DAF+C,CAA1C;AAKA,UAAMC,gCAAgC,GAAG,iEAC9C,iCAD8C,EAE9C,2DAF8C,CAAzC;AAKA,UAAMC,kCAAkC,GAAG,iEAChD,mCADgD,EAEhD,2DAFgD,CAA3C;AAKA,UAAMC,0CAA0C,GAAG,iEACxD,4CADwD,EAExD,2DAFwD,CAAnD;AAKA,UAAMC,sCAAsC,GAAG,iEACpD,uCADoD,EAEpD,2DAFoD,CAA/C;AAIA,UAAMC,wBAAwB,GAAG,iEACtC,yBADsC,EAEtC,2DAFsC,CAAjC;;;;;;;;;;;;;;;;ACrCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAqCO,UAAMC,YAAY,GAAG,UAArB;AAEP,UAAMC,IAAI,GAAG,gDAAG,yBAAH,CAAb;;UAGaC,e,GACX,yBACU9I,QADV,EAEUtF,KAFV,EAGUE,MAHV,EAIUmO,gBAJV,EAKU9I,mBALV,EAMU+I,YANV,EAOUC,iBAPV,EAQUC,gBARV,EASUC,MATV,EASwB;AAAA;;AAAA;;AARd,aAAAnJ,QAAA,GAAAA,QAAA;AACA,aAAAtF,KAAA,GAAAA,KAAA;AACA,aAAAE,MAAA,GAAAA,MAAA;AACA,aAAAmO,gBAAA,GAAAA,gBAAA;AACA,aAAA9I,mBAAA,GAAAA,mBAAA;AACA,aAAA+I,YAAA,GAAAA,YAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AACA,aAAAC,gBAAA,GAAAA,gBAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAGV,aAAAC,IAAA,GAAO,CAAP;AACA,aAAAC,UAAA,GAAa,KAAKF,MAAL,CAAYG,iBAAZ,CAA8B;AAAA,iBACzCC,WAAW,CAAC,YAAM;AAChB,gBAAMH,IAAI,GAAG,IAAI9N,IAAJ,GAAWkO,QAAX,EAAb;;AACA,gBAAIJ,IAAI,KAAK,OAAI,CAACA,IAAlB,EAAwB;AACtB,qBAAI,CAACA,IAAL,GAAYA,IAAZ;;AACA,qBAAI,CAACD,MAAL,CAAYtB,GAAZ,CAAgB;AAAA,uBACd,OAAI,CAACnN,KAAL,CAAWsC,QAAX,CAAoB,oFAAyB;AAAEoM,sBAAI,EAAJA;AAAF,iBAAzB,CAApB,CADc;AAAA,eAAhB;AAGD;AACF,WARU,EAQR,KARQ,CAD8B;AAAA,SAA9B,CAAb;AAYA,aAAAK,eAAA,GAAkB,mEAChB;AAAA,iBACE,OAAI,CAACzJ,QAAL,CAAc7C,IAAd,CACE,6DACE,yFADF,EAEE,qFAFF,EAGE,6FAHF,EAIE,oFAJF,EAKE,+EALF,EAME,mFANF,EAOE,4EAPF,CADF,EAUE,sEAAe,OAAI,CAACzC,KAAL,CAAWyC,IAAX,CAAgB,2DAAO,+DAAP,CAAhB,CAAf,CAVF,EAWE,2DAAI;AAAA;AAAA,gBAAEoD,MAAF;AAAA,gBAAU6C,QAAV;;AAAA,mBACF,OAAI,CAACnD,mBAAL,CAAyBE,OAAzB,CAAiCyI,YAAjC,EAA+CxF,QAA/C,CADE;AAAA,WAAJ,CAXF,CADF;AAAA,SADgB,EAiBhB;AAAEpG,kBAAQ,EAAE;AAAZ,SAjBgB,CAAlB;AAoBA,aAAA0M,wBAAA,GAA2B,mEACzB;AAAA,iBACE,mDACEb,IADF,EAEE,OAAI,CAAC7I,QAAL,CAAc7C,IAAd,CACE,6DACE,yFADF,EAEE,qFAFF,CADF,CAFF,EAQEA,IARF,CASE,sEACE,2DAAc,CACZ,OAAI,CAACzC,KAAL,CAAWyC,IAAX,CAAgB,2DAAO,yEAAP,CAAhB,CADY,EAEZ,OAAI,CAACzC,KAAL,CAAWyC,IAAX,CAAgB,2DAAO,6EAAP,CAAhB,CAFY,CAAd,CADF,CATF,EAeE,2DAAI;AAAA;AAAA,gBAAEoD,MAAF;AAAA;AAAA,gBAAWrC,cAAX;AAAA,gBAA2BC,kBAA3B;;AAAA,mBACF,OAAI,CAAC8K,iBAAL,CAAuBS,wBAAvB,CACExL,cADF,EAEEC,kBAFF,CADE;AAAA,WAAJ,CAfF,CADF;AAAA,SADyB,EAwBzB;AAAEnB,kBAAQ,EAAE;AAAZ,SAxByB,CAA3B;AA2BA,aAAA2M,WAAA,GAAc,mEACZ;AAAA,iBACE,mDAAMd,IAAN,EAAY,OAAI,CAAC7I,QAAL,CAAc7C,IAAd,CAAmB,6DAAO,4EAAP,CAAnB,CAAZ,EAAmEA,IAAnE,CACE,sEAAe,OAAI,CAACzC,KAAL,CAAWyC,IAAX,CAAgB,2DAAO,yEAAP,CAAhB,CAAf,CADF,EAEE,2DAAI,iBAA8B;AAAA;AAAA,gBAA5BoD,MAA4B;AAAA,gBAApBqJ,cAAoB;;AAChC,gBAAMC,SAAS,GAAG,OAAI,CAACd,gBAAL,CAAsBe,mBAAtB,GACfD,SADH;;AAEA,gBAAME,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWJ,SAAX,EAAsBK,MAAtB,CAA6B,UAACC,IAAD;AAAA,qBAC5CA,IAAI,CAACzM,QAAL,CAAc,QAAd,CAD4C;AAAA,aAA7B,CAAjB;;AAGA,gBAAIqM,QAAQ,CAACnD,MAAb,EAAqB;AACnBiD,uBAAS,CAACO,MAAV,OAAAP,SAAS,qBAAWE,QAAX,EAAT;AACD;;AACDF,qBAAS,CAACQ,GAAV,CAAcT,cAAd;AACD,WAVD,CAFF,CADF;AAAA,SADY,EAgBZ;AAAE5M,kBAAQ,EAAE;AAAZ,SAhBY,CAAd;AAmBA,aAAAsN,2BAAA,GAA8B,mEAC5B;AAAA,iBACE,OAAI,CAAC5P,KAAL,CAAWyC,IAAX,CACE,2DAAO,2EAAP,CADF,EAEE,6EAFF,EAGE,2DAAI,UAAAK,QAAQ;AAAA,mBAAI,OAAI,CAAC0L,gBAAL,CAAsBqB,GAAtB,CAA0B/M,QAA1B,CAAJ;AAAA,WAAZ,CAHF,CADF;AAAA,SAD4B,EAO5B;AAAER,kBAAQ,EAAE;AAAZ,SAP4B,CAA9B;AAUA,aAAAwN,QAAA,GAAW,mEACT;AAAA,iBACE,mDACE,OAAI,CAACxK,QAAL,CAAc7C,IAAd,CAAmB,6DAAO,+EAAP,CAAnB,CADF,EAEE,OAAI,CAACvC,MAAL,CAAYgJ,MAAZ,CAAmBzG,IAAnB,CAAwB,8DAAO,UAAA0G,KAAK;AAAA,mBAAIA,KAAK,YAAY,6DAArB;AAAA,WAAZ,CAAxB,CAFF,EAGE1G,IAHF,CAIE,2DAAI,YAAM;AACR,mBAAI,CAAC6L,YAAL,CAAkBwB,QAAlB,CACE,OAAI,CAAC5P,MAAL,CAAYoN,WAAZ,CAAwByC,QAAxB,CAAiCxC,IADnC,EAEE,OAAI,CAACiB,gBAFP;AAID,WALD,CAJF,CADF;AAAA,SADS,EAaT;AAAElM,kBAAQ,EAAE;AAAZ,SAbS,CAAX;AA3FI,O;;;yBAXO8L,e,EAAe,6G,EAAA,yG,EAAA,8G,EAAA,6H,EAAA,gJ,EAAA,0H,EAAA,yI,EAAA,4H,EAAA,4G;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe;;;;;wEAAfA,e,EAAe;gBAD3B;AAC2B,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxC5B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,UAAM4B,gBAAgB,GAAG,aAAzB;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAaO,UAAMtK,YAAY,GAAkB;AACzC5C,gBAAQ,EAAE,IAD+B;AAEzCmN,aAAK,EAAE,eAFkC;AAGzCC,qBAAa,EAAE,KAH0B;AAIzCC,kBAAU,EAAE,gEAJ6B;AAKzCC,oBAAY,EAAE,IAL2B;AAMzC5M,sBAAc,EAAE,IANyB;AAOzCjB,8BAAsB,EAAE,KAPiB;AAQzCkB,0BAAkB,EAAE,IARqB;AASzCiL,YAAI,EAAE;AATmC,OAApC;AAYP,UAAM/I,OAAO,GAAG,kEACdD,YADc,EAEd,uDACE,8EADF,EAEE,2EAFF,EAGE,mFAHF,EAIE,kFAJF,EAKE,oFALF,EAME,wFANF,EAOE,0EAPF,EAQE,UAACb,KAAD,EAAQgB,MAAR;AAAA,eAAoB,MAAD,OAAC,CAAD,kBAAMhB,KAAN,CAAC,EAAegB,MAAf,CAApB;AAAA,OARF,CAFc,EAYd,uDACE,4FADF,EAEE,UAAChB,KAAD;AAAA,YAAUtC,sBAAV,SAAUA,sBAAV;AAAA,eAAwC,MAAD,OAAC,CAAD,kBAClCsC,KADkC,CAAC,EAC9B;AACRtC,gCAAsB,EAAtBA,sBADQ;AAERiB,wBAAc,EAAE;AAFR,SAD8B,CAAxC;AAAA,OAFF,CAZc,CAAhB;;AAsBO,eAAS6M,eAAT,CACLxL,KADK,EAELgB,MAFK,EAES;AAEd,eAAOF,OAAO,CAACd,KAAD,EAAQgB,MAAR,CAAd;AACD;;;;;;;;;;;;;;;;;ACpDD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKO,UAAMyK,cAAc,GAAG,mEAC5B,+DAD4B,EAE5B,UAACzL,KAAD;AAAA,eAA0BA,KAA1B;AAAA,OAF4B,CAAvB;AAKA,UAAM0L,0BAA0B,GAAG,mEACxCD,cADwC,EAExC,UAACzL,KAAD;AAAA,eAA0BA,KAAK,CAACuL,YAAhC;AAAA,OAFwC,CAAnC;AAKA,UAAMI,sBAAsB,GAAG,mEACpCF,cADoC,EAEpC,UAACzL,KAAD;AAAA,eAA0BA,KAAK,CAAC/B,QAAhC;AAAA,OAFoC,CAA/B;AAKA,UAAM2N,WAAW,GAAG,mEACzBH,cADyB,EAEzB,UAAA5H,QAAQ;AAAA,eAAIA,QAAQ,CAACuH,KAAb;AAAA,OAFiB,CAApB;AAKA,UAAMS,oBAAoB,GAAG,mEAClCJ,cADkC,EAElC,UAAA5H,QAAQ;AAAA,eAAIA,QAAQ,CAAClF,cAAb;AAAA,OAF0B,CAA7B;AAKA,UAAMmN,wBAAwB,GAAG,mEACtCL,cADsC,EAEtC,UAAA5H,QAAQ;AAAA,eAAIA,QAAQ,CAACjF,kBAAb;AAAA,OAF8B,CAAjC;AAKA,UAAMmN,mBAAmB,GAAG,mEACjCN,cADiC,EAEjC,UAAA5H,QAAQ;AAAA,eAAIA,QAAQ,CAACwH,aAAb;AAAA,OAFyB,CAA5B;AAKA,UAAMW,gBAAgB,GAAG,mEAC9BP,cAD8B,EAE9B,UAAA5H,QAAQ;AAAA,eAAIA,QAAQ,CAACyH,UAAb;AAAA,OAFsB,CAAzB;AAKA,UAAMW,UAAU,GAAG,mEACxBR,cADwB,EAExB,UAAA5H,QAAQ;AAAA,eAAIA,QAAQ,CAACgG,IAAb;AAAA,OAFgB,CAAnB;AAKA,UAAMqC,iBAAiB,GAAG,mEAC/BH,mBAD+B,EAE/BE,UAF+B,EAG/B,UAACZ,aAAD,EAAgBxB,IAAhB;AAAA,eAAyBwB,aAAa,KAAKxB,IAAI,IAAI,EAAR,IAAcA,IAAI,IAAI,CAA3B,CAAtC;AAAA,OAH+B,CAA1B;AAMA,UAAMsC,oBAAoB,GAAG,mEAClCP,WADkC,EAElCI,gBAFkC,EAGlCE,iBAHkC,EAIlC,UAACd,KAAD,EAAQE,UAAR,EAAoBc,WAApB;AAAA,eACE,CAACA,WAAW,GAAGd,UAAH,GAAgBF,KAA5B,EAAmCxE,WAAnC,EADF;AAAA,OAJkC,CAA7B;;;;;;;;;;;;;;;;ACxDP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWayF,Y;AACX,8BACU1C,gBADV,EAEU2C,KAFV,EAEsB;AAAA;;AADZ,eAAA3C,gBAAA,GAAAA,gBAAA;AACA,eAAA2C,KAAA,GAAAA,KAAA;AACN;;;;mCAGFpB,Q,EACAqB,oB,EAAuC;AAAA;;AAEvC,gBAAIC,SAAS,GAAGtB,QAAhB;;AACA,mBAAOsB,SAAS,CAACC,QAAV,CAAmBpF,MAA1B,EAAkC;AAChCmF,uBAAS,GAAGA,SAAS,CAACC,QAAV,CAAmB,CAAnB,CAAZ;AACD;;AALsC,gBAM/BH,KAN+B,GAMrBE,SAAS,CAACE,IANW,CAM/BJ,KAN+B;AAOvC,gBAAMK,SAAS,GAAGJ,oBAAoB,IAAI,KAAK5C,gBAA/C;;AACA,gBAAI2C,KAAJ,EAAW;AACTK,uBAAS,CACNC,GADH,CACON,KADP,EAEG1O,IAFH,CAEQ,8DAAO,UAAAiP,eAAe;AAAA,uBAAIA,eAAe,KAAKP,KAAxB;AAAA,eAAtB,CAFR,EAGG7P,SAHH,CAGa,UAAAoQ,eAAe;AAAA,uBACxB,OAAI,CAACP,KAAL,CAAWrB,QAAX,WAAuB4B,eAAvB,gBAA4C,sEAAIrL,OAAhD,EADwB;AAAA,eAH5B;AAMD,aAPD,MAOO;AACL,mBAAK8K,KAAL,CAAWrB,QAAX,CAAoB,sEAAIzJ,OAAxB;AACD;AACF;;;;;;;yBA1BU6K,Y,EAAY,4H,EAAA,uH;AAAA,O;;;eAAZA,Y;AAAY,iBAAZA,YAAY,K;AAAA,oBAFX;;;;;wEAEDA,Y,EAAY;gBAHxB,wDAGwB;iBAHb;AACVvN,sBAAU,EAAE;AADF,W;AAGa,U;;;;;;;;;;;;;;;;;;;;;;;;ACXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMA;;;;;;UAOagO,W;AAGX,6BAAoB1L,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAFH,eAAAC,OAAA,GAAU,sEAAYC,MAAtB;AAEuB;;;;8BAEpCtI,E,EAAU;AACZ,mBAAO,KAAKoI,IAAL,CAAUwL,GAAV,WAAsB,KAAKvL,OAA3B,oBAA4CrI,EAA5C,OAAP;AACD;;;mCAEK;AACJ,mBAAO,KAAKoI,IAAL,CAAUwL,GAAV,WAAwB,KAAKvL,OAA7B,aAAP;AACD;;;mCAEQ4B,I,EAAI;AACX,mBAAO,KAAK7B,IAAL,CAAUY,IAAV,WAAuB,KAAKX,OAA5B,uBAAuD4B,IAAvD,CAAP;AACD;;;mCAEQA,I,EAAI;AACX,mBAAO,KAAK7B,IAAL,CAAUY,IAAV,WAAuB,KAAKX,OAA5B,uBAAuD4B,IAAvD,CAAP;AACD;;;yCAEcA,I,EAAI;AACjB,mBAAO,KAAK7B,IAAL,CAAUY,IAAV,WAAuB,KAAKX,OAA5B,8BAA8D4B,IAA9D,CAAP;AACD;;;iCAEMf,I,EAAYlJ,E,EAAY;AAC7B,mBAAO,KAAKoI,IAAL,CAAU2L,GAAV,WACF,KAAK1L,OADH,oBACoBrI,EADpB,QAEL+D,IAAI,CAACsF,SAAL,CAAeH,IAAf,CAFK,CAAP;AAID;;;kCAEMlJ,E,EAAY;AACjB,mBAAO,KAAKoI,IAAL,qBAAyB,KAAKC,OAA9B,oBAA+CrI,EAA/C,OAAP;AACD;;;;;;;yBAlCU8T,W,EAAW,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVhO,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;ACbxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;UAWakO,S,GACX,mBACSC,cADT,EAESC,cAFT,EAGSC,IAHT,EAISC,GAJT,EAKSC,GALT,EAMSC,aANT,EAOSC,OAPT,EAO2B;AAAA;;AANlB,aAAAN,cAAA,GAAAA,cAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,GAAA,GAAAA,GAAA;AACA,aAAAC,GAAA,GAAAA,GAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACL,O;AAGN;;;;;;;;;;;;;;;;;;UAiBaC,c,GACX,wBACSC,WADT,EAESrP,IAFT,EAGSsP,QAHT,EAISC,IAJT,EAIwB;AAAA;;AAHf,aAAAF,WAAA,GAAAA,WAAA;AACA,aAAArP,IAAA,GAAAA,IAAA;AACA,aAAAsP,QAAA,GAAAA,QAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACL,O;AAGN;;;;;;UAOaC,qB;;;;;;;gCACLhD,I,EAAS;AACb,gBAAM+C,IAAI,GAAG,IAAIX,SAAJ,CACXpC,IAAI,CAAC+C,IAAL,CAAUV,cADC,EAEXrC,IAAI,CAAC+C,IAAL,CAAUT,cAFC,EAGXtC,IAAI,CAAC+C,IAAL,CAAUR,IAHC,EAIXvC,IAAI,CAAC+C,IAAL,CAAUP,GAJC,EAKXxC,IAAI,CAAC+C,IAAL,CAAUN,GALC,EAMXzC,IAAI,CAAC+C,IAAL,WANW,EAOX/C,IAAI,CAAC+C,IAAL,CAAUJ,OAPC,CAAb;AAUA,mBAAO,IAAIC,cAAJ,CAAmB5C,IAAI,CAAC6C,WAAxB,EAAqC7C,IAAI,CAACxM,IAA1C,EAAgDwM,IAAI,CAAC8C,QAArD,EAA+DC,IAA/D,CAAP;AACD;;;;;;;yBAbUC,qB;AAAqB,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFpB;;;;;wEAEDA,qB,EAAqB;gBAHjC,wDAGiC;iBAHtB;AACV9O,sBAAU,EAAE;AADF,W;AAGsB,U;;;;;;;;;;;;;;;;;;AC1DlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;UAUa+O,S,GACX,mBACS7U,EADT,EAESoF,IAFT,EAGSqP,WAHT,EAISK,MAJT,EAKSC,OALT,EAMSC,IANT,EAOSC,UAPT,EAQSC,QART,EAQyB;AAAA;;AAPhB,aAAAlV,EAAA,GAAAA,EAAA;AACA,aAAAoF,IAAA,GAAAA,IAAA;AACA,aAAAqP,WAAA,GAAAA,WAAA;AACA,aAAAK,MAAA,GAAAA,MAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,QAAA,GAAAA,QAAA;AACL,O;AAGN;;;;;UAMaC,gB;;;;;;;gCACLvD,I,EAAS;AACb,gBAAMkD,MAAM,GAAGlD,IAAI,CAACkD,MAApB;AACAzI,kBAAM,CAACxM,IAAP,CAAYiV,MAAZ,EAAoBhH,GAApB,CAAwB,UAASV,GAAT,EAAcW,KAAd,EAAqB;AAC3C+G,oBAAM,CAAC1H,GAAD,CAAN,GAAc,IAAI,sEAAJ,GAA4BgI,KAA5B,CAAkCN,MAAM,CAAC1H,GAAD,CAAxC,CAAd;AACD,aAFD;AAIA,mBAAO,IAAIyH,SAAJ,CACLjD,IAAI,CAAC5R,EADA,EAEL4R,IAAI,CAACxM,IAFA,EAGLwM,IAAI,CAAC6C,WAHA,EAILK,MAJK,EAKLlD,IAAI,CAACmD,OALA,EAMLnD,IAAI,CAACoD,IANA,EAOLpD,IAAI,CAACqD,UAPA,EAQLrD,IAAI,CAACsD,QARA,CAAP;AAUD;;;;;;;yBAjBUC,gB;AAAgB,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;wEAEDA,gB,EAAgB;gBAH5B,wDAG4B;iBAHjB;AACVrP,sBAAU,EAAE;AADF,W;AAGiB,U;;;;;;;;;;;;;;;;;;ACjC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AASA;;;;;;;UAQauP,e;AAGX,iCACUC,UADV,EAEUC,SAFV,EAGUC,WAHV,EAGkC;AAAA;;AAFxB,eAAAF,UAAA,GAAAA,UAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AALO,eAAAnN,OAAA,GAAU,sEAAYC,MAAtB;AAMb;AAEJ;;;;;;;;0CAIa;AAAA;;AACX,mBAAO,KAAKgN,UAAL,CAAgB1B,GAAhB,WAAuB,KAAKvL,OAA5B,mBAAmDzD,IAAnD,CACL,2DAAI,UAAC6Q,UAAD,EAA6B;AAC/BA,wBAAU,GAAGA,UAAU,CAAC9D,MAAX,CACX,UAAA+D,SAAS;AAAA,uBAAIA,SAAS,CAAC,qBAAD,CAAT,KAAqC,IAAzC;AAAA,eADE,CAC4C;AAD5C,eAAb;AAGA,qBAAOD,UAAU,CAAC3H,GAAX,CAAe,UAAA4H,SAAS;AAAA,uBAAI,OAAI,CAACH,SAAL,CAAeH,KAAf,CAAqBM,SAArB,CAAJ;AAAA,eAAxB,CAAP;AACD,aALD,CADK,CAAP;AAQD;AAED;;;;;;;mDAIsB;AACpB,mBAAO,KAAKJ,UAAL,CAAgB1B,GAAhB,WAAuB,KAAKvL,OAA5B,4BAAP;AACD;AAED;;;;;;;uCAIarI,E,EAAU;AAAA;;AACrB,mBAAO,KAAKsV,UAAL,CACJ1B,GADI,WACG,KAAKvL,OADR,yBAC8BrI,EAD9B,QAEJ4E,IAFI,CAGH,2DAAI,UAAC+Q,aAAD;AAAA,qBAA8B,OAAI,CAACJ,SAAL,CAAeH,KAAf,CAAqBO,aAArB,CAA9B;AAAA,aAAJ,CAHG,CAAP;AAKD;AAED;;;;;;;2CAIiBC,W,EAAaC,W,EAAaf,M,EAAM;AAC/C,gBAAM7K,IAAI,GAAG;AACX6L,0BAAY,EAAEF,WADH;AAEXG,0BAAY,EAAEF,WAFH;AAGXG,sBAAQ,EAAElB,MAAM,CAACkB,QAHN;AAIXlB,oBAAM,EAAEA;AAJG,aAAb;AAOA,mBAAO,KAAKQ,UAAL,CAAgBtM,IAAhB,WAAwB,KAAKX,OAA7B,uBAAwD4B,IAAxD,CAAP;AACD;AAED;;;;;;;qDAI2BgM,mB,EAA2B;AAAA;;AACpD;AACA,gBAAMC,cAAc,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAvB,CAFoD,CAEZ;;AACxC,mBAAO,sDAAS,IAAT,EAAetR,IAAf,CACL,iEAAU;AAAA,qBACR,OAAI,CAAC0Q,UAAL,CAAgB1B,GAAhB,WACK,OAAI,CAACvL,OADV,kCACyC4N,mBADzC,QAEE;AAAEE,uBAAO,EAAE;AAAX,eAFF,CADQ;AAAA,aAAV,CADK,EAOL,iEAAU,UAAAC,QAAQ;AAAA,qBAAIF,cAAc,CAAC/Q,QAAf,CAAwBiR,QAAQ,CAACpK,MAAjC,CAAJ;AAAA,aAAlB,EAAgE,IAAhE,CAPK,CAAP;AASD;AAED;;;;;;6CAIEqK,U,EAIY;AAAA,gBAHZC,SAGY,uEAHA,CAGA;AAAA,gBAFZC,QAEY,uEAFD,CAEC;AAAA,gBADZC,OACY,uEADF,EACE;AAAA,gBAAZC,OAAY,uEAAF,EAAE;AAEZ,gBAAI7G,MAAM,GAAG,IAAI,+DAAJ,EAAb;;AAEA,gBAAI0G,SAAJ,EAAe;AACb1G,oBAAM,GAAGA,MAAM,CAAC8G,MAAP,CAAc,MAAd,EAAsBJ,SAAS,CAACzH,QAAV,EAAtB,CAAT;AACD;;AAED,gBAAI0H,QAAJ,EAAc;AACZ3G,oBAAM,GAAGA,MAAM,CAAC8G,MAAP,CAAc,WAAd,EAA2BH,QAAQ,CAAC1H,QAAT,EAA3B,CAAT;AACD;;AAED,iBAAK,IAAM8H,KAAX,IAAoBH,OAApB,EAA6B;AAC3B,kBAAIA,OAAO,CAACI,cAAR,CAAuBD,KAAvB,CAAJ,EAAmC;AACjC;AACA,oBAAME,UAAU,GAAGL,OAAO,CAACG,KAAD,CAA1B;AACA/G,sBAAM,GAAGA,MAAM,CAAC8G,MAAP,CAAcC,KAAd,EAAqBE,UAAU,CAAChI,QAAX,EAArB,CAAT;AACD;AACF;;AAED,gBAAI4H,OAAO,CAACG,cAAR,CAAuB,WAAvB,CAAJ,EAAyC;AACvC,kBAAME,aAAa,GAAGL,OAAO,CAAC,eAAD,CAAP,IAA4B,KAAlD;AACA7G,oBAAM,GAAGA,MAAM,CAAC8G,MAAP,CACP,WADO,EAEP,MAAMI,aAAN,GAAsB,IAAtB,GAA6BL,OAAO,CAAC,WAAD,CAF7B,CAAT,CAFuC,CAKpC;AACJ;;AAED,mBAAO,KAAKnB,UAAL,CAAgB1B,GAAhB,WACF,KAAKvL,OADH,wBACwBgO,UADxB,iBAEL;AAAEzG,oBAAM,EAAEA;AAAV,aAFK,CAAP;AAID;AAED;;;;;;4CAGkBiG,W,EAAmB;AACnC,mBAAO,KAAKP,UAAL,CAAgB1B,GAAhB,WACF,KAAKvL,OADH,4CAC4CwN,WAD5C,OAAP;AAGD;AAED;;;;;;8CAGoBA,W,EAAmB;AACrC,mBAAO,KAAKP,UAAL,CAAgB1B,GAAhB,WACF,KAAKvL,OADH,4CAC4CwN,WAD5C,YAAP;AAGD;AAED;;;;;;6CAGmB7V,E,EAAmB;AACpC,mBACE,KAAKsV,UAAL,CAAgB1B,GAAhB,WAAuB,KAAKvL,OAA5B,yBAAkDrI,EAAlD,OADF;AAGD;AAED;;;;;;uDAIE+W,K,EACAlB,W,EAAmB;AAAA;;AAEnB,mBACE,KAAKP,UAAL,CAAgB1B,GAAhB,WAA+B,KAAKvL,OAApC,kBAA0DzD,IAA1D,CACE,2DAAI,UAAA8O,IAAI;AAAA,qBACNA,IAAI,CAAC/B,MAAL,CACE,UAAAC,IAAI;AAAA,uBACFmF,KAAK,CAAC5R,QAAN,CAAeyM,IAAI,CAACoF,aAApB,KACApF,IAAI,CAACqF,UAAL,CAAgBC,IAAhB,CAAqB,UAAAC,SAAS;AAAA,yBAAIA,SAAS,CAACnX,EAAV,KAAiB6V,WAArB;AAAA,iBAA9B,CAFE;AAAA,eADN,CADM;AAAA,aAAR,CADF,EAQE,2DAAI,UAACnC,IAAD;AAAA,qBAAiBA,IAAI,CAAC5F,GAAL,CAAS,UAAA8D,IAAI;AAAA,uBAAI,OAAI,CAAC4D,WAAL,CAAiBJ,KAAjB,CAAuBxD,IAAvB,CAAJ;AAAA,eAAb,CAAjB;AAAA,aAAJ,CARF,CADF;AAYD;;;;;;;yBArKUyD,e,EAAe,uH,EAAA,0H,EAAA,2H;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;wEAEDA,e,EAAe;gBAH3B,wDAG2B;iBAHhB;AACVvP,sBAAU,EAAE;AADF,W;AAGgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACjB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACeU;;AACE;;AAAuB;;AACvB;;AACF;;;;;;AAFyB;;AAAA;;;;;;AAI3B;;AACE;;AAEF;;;;;;AAXF;;AACE;;AACA;;AACE;;AAIF;;AACA;;AAIF;;;;;;AATQ;;AAAA;;AAKA;;AAAA;;;;;;AAOR;;AACE;;AACE;;AACF;;AACF;;;;;;AAHiC;;AAAA;;;ADtBvC;;;;;;;UAUasR,sB;AAQX,wCACSC,SADT,EAEkC3D,IAFlC,EAGS4D,WAHT,EAGiC;AAAA;;AAFxB,eAAAD,SAAA,GAAAA,SAAA;AACyB,eAAA3D,IAAA,GAAAA,IAAA;AACzB,eAAA4D,WAAA,GAAAA,WAAA;AAVD,eAAAC,aAAA,GAAuB,EAAvB;AACD,eAAAC,aAAA,GAAgBnL,MAAM,CAACxM,IAAP,CAAY,qEAAZ,CAAhB;AAYP,eAAA4X,WAAA,GAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW/C,QAAZ,CAApB,CAAd;AAFI;AAIJ;;;;;;;;;6CAKmB;AACjB,gBAAMgD,UAAU,GAAG,KAAKA,UAAL,CAAgBC,aAAnC;AACAD,sBAAU,CAACE,KAAX;AACD;AAED;;;;;;;;kCAKQtM,K,EAAO;AACb,gBAAMuM,gBAAgB,GAAG,SAAzB;AAEA,iBAAKN,aAAL,GAAqBjM,KAAK,CAACwM,MAAN,CAAaC,KAAlC;;AACA,gBAAI,CAAC,KAAKR,aAAV,EAAyB;AACvB;AACD;;AACD,iBAAKS,YAAL,GAAoB,KAAKT,aAAL,CAAmBlJ,MAAnB,GAA4B,CAAhD,CAPa,CASb;;AACA,iBAAK4J,SAAL,GAAiB,EAAjB;AACA,iBAAKC,WAAL,GAAmB,KAAnB;;AAEA,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKZ,aAAL,CAAmBlJ,MAAvC,EAA+C8J,CAAC,EAAhD,EAAoD;AAClD,kBAAI,KAAKZ,aAAL,CAAmBY,CAAnB,EAAsBC,IAAtB,IAA8BP,gBAAlC,EAAoD;AAClD,qBAAKK,WAAL,GAAmB,IAAnB;AACD;;AACD,mBAAKD,SAAL,CAAeI,IAAf,CAAoB,KAAKd,aAAL,CAAmBY,CAAnB,EAAsB/S,IAA1C;AACD;AACF;AAED;;;;;;;uCAIiB;AACf,iBAAKkS,WAAL,CAAiBgB,OAAjB,CAAyB,KAAKf,aAA9B;AACD;;;4CAEiB;AAChB,mBAAO,KAAKE,WAAL,CAAiBc,QAAjB,CAA0B,UAA1B,IAAwC,gBAAxC,GAA2D,EAAlE;AACD;;;mCAEQ,CAER,C,CADC;;AAGF;;;;;;;sCAIS;AACP,iBAAKlB,SAAL,CAAemB,KAAf;AACD;;;;;;;yBA1EUpB,sB,EAAsB,sI,EAAA,gEAUvB,wEAVuB,C,EAUR,wJ;AAAA,O;;;cAVdA,sB;AAAsB,4C;AAAA;AAAA;;;;;;;;;;;;;;;AChBnC;;AACE;;AAAqB;;AACnB;;AAAK;;AAA6B;;AAEpC;;AAAiC;AAAA;AAAA;;AAE9B;;AACC;;AAAyC;AAAA,qBAAS,IAAAqB,gBAAA,EAAT;AAA2B,aAA3B;;AACvC;;AAAU;;AAAW;;AACrB;;AACF;;AAEA;;AAcA;;AAA+B;AAAA,qBAAU,IAAAC,OAAA,QAAV;AAAyB,aAAzB;;AAA/B;;AACA;;AAMF;;AAgBA;;AACE;;AAA6I;AAAA,qBAAS,IAAAC,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAM;;AAC1K;;AAAmB;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AAC/D;;AACA;;AACF;;AACF;;;;;;AA3CW;;AAAA;;AAeM;;AAAA;;AAuByC;;AAAA,yFAAe,UAAf,EAAe,gCAAf,EAAe,kBAAf,EAAe,CAAf;;;;;;;;;wEDlC7CxB,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACT/R,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD;AAHF,W;AAKwB,U;;;;;;oBAU9B,oD;qBAAO,wE;;;;;;;kBAPT,uD;mBAAU,Y,EAAc;AAAE,wBAAQ;AAAV,a;;;;;;;;;;;;;;;;;;;;AEnB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAKA;;;;;;;UAUasT,yB;AACX,2CACSxB,SADT,EAEkC3D,IAFlC,EAGS4D,WAHT,EAGiC;AAAA;;AAFxB,eAAAD,SAAA,GAAAA,SAAA;AACyB,eAAA3D,IAAA,GAAAA,IAAA;AACzB,eAAA4D,WAAA,GAAAA,WAAA;AACL;AAEJ;;;;;;;;sCAIS;AACP,iBAAKD,SAAL,CAAemB,KAAf;AACD;AAED;;;;;;;0CAIa;AACX,iBAAKlB,WAAL,CAAiBwB,UAAjB,CAA4B,KAAKpF,IAAL,CAAU1T,EAAtC;AACD;;;;;;;yBArBU6Y,yB,EAAyB,sI,EAAA,gEAG1B,wEAH0B,C,EAGX,wJ;AAAA,O;;;cAHdA,yB;AAAyB,+C;AAAA,iB;AAAA,e;AAAA,0N;AAAA;AAAA;ACftC;;AACE;;AAAqB;;AAAwC;;AAC7D;;AACE;;AACA;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAA0C;AAAA,qBAAS,IAAAE,aAAA,EAAT;AAAwB,aAAxB;;AAA0B;;AAAM;;AAC1E;;AAAmB;AAAA,qBAAS,IAAAH,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AAC/D;;AACF;;;;AAVI;;AAAA;;AAEA;;AAAA;;AAKmB;;AAAA;;;;;;;;;wEDKVC,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACTxT,oBAAQ,EAAE,wBADD;AAETC,uBAAW,EAAE,qCAFJ;AAGTC,qBAAS,EAAE,CAAC,qCAAD;AAHF,W;AAK2B,U;;;;;;oBAGjC,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;AElBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBQ;;AAAuC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AASrC;;AACE;;AACF;;;;;;AAF0D;;AACxD;;AAAA;;;;;;AAGJ;;AACE;;AAAmD;;;;;;AAAnD;;AAAA;;;;;;AACF;;AAAuC;;AAAqB;;;;;;AAArB;;AAAA;;;ADzB/C;;;;;;;UAUayT,uB;AAKX,yCACS3B,SADT,EAEkC3D,IAFlC,EAGS4D,WAHT,EAGiC;AAAA;;AAFxB,eAAAD,SAAA,GAAAA,SAAA;AACyB,eAAA3D,IAAA,GAAAA,IAAA;AACzB,eAAA4D,WAAA,GAAAA,WAAA;AAPF,eAAAE,aAAA,GAAgB,EAAhB;AAEP,eAAAC,WAAA,GAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAAC,0DAAW/C,QAAZ,CAApB,CAAd;AAMI;;;;qCAEO;AACT,iBAAKuE,iBAAL;AACD;;;4CAEiB;AAChB,mBAAO,KAAKxB,WAAL,CAAiBc,QAAjB,CAA0B,UAA1B,IACH,gBADG,GAEH,KAAKd,WAAL,CAAiBc,QAAjB,CAA0B,OAA1B,IACA,mBADA,GAEA,EAJJ;AAKD;AAED;;;;;;;sCAIS;AACP,iBAAKlB,SAAL,CAAemB,KAAf;AACD;AAED;;;;;;;qCAIQ;AACN,iBAAKlB,WAAL,CAAiB4B,UAAjB,CAA4B,KAAKxF,IAAjC;AACD;;;8CAEmB;AAAA;;AAClB,iBAAK4D,WAAL,CAAiB6B,YAAjB,GAAgC1V,SAAhC,CAA0C,UAAC2V,SAAD,EAA2B;AACnEA,uBAAS,CAAC9M,OAAV,CACE,UAAAzG,IAAI;AAAA,uBACD,OAAI,CAAC2R,aAAL,CAAmB3R,IAAI,CAACwT,iBAAxB,IAA6C;AAC5C/F,uBAAK,EAAEzN,IAAI,CAACyT,mBADgC;AAE5C7E,6BAAW,EAAE5O,IAAI,CAAC0T;AAF0B,iBAD5C;AAAA,eADN;AAOD,aARD;AASD;;;mCAEQ,CACP;AACD;;;;;;;yBArDUP,uB,EAAuB,sI,EAAA,gEAOxB,wEAPwB,C,EAOT,wJ;AAAA,O;;;cAPdA,uB;AAAuB,6C;AAAA,iB;AAAA,gB;AAAA,irB;AAAA;AAAA;AChBpC;;AACE;;AAAqB;;AAAS;;AAE9B;;AAAiC;AAAA;AAAA;;AAS/B;;AACE;;AACE;;AAAoE;AAAA;AAAA;;AAApE;;AAEA;;AACF;;AACF;;AAEA;;AAEE;;AACE;;AAAW;;AAAsB;;AACjC;;AAAY;AAAA;AAAA;;AACV;;;;AAGF;;AACA;;AAEA;;AACF;;AAEF;;AAEA;;AACE;;AACE;AAAA,qBAAS,IAAAQ,QAAA,EAAT;AAAmB,aAAnB;;AAAsD;;AAAI;;AAC5D;;AAAmB;AAAA,qBAAS,IAAAZ,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AAC/D;;AACF;;AACF;;;;;;AA5B4E;;AAAA;;AAEzD;;AAAA;;AAQC;;AAAA;;AACE;;AAAA;;AAIJ;;AAAA;;AAEC;;AAAA;;AAMM;;AAAA,yFAAe,UAAf,EAAe,UAAf,EAAe,kBAAf,EAAe,CAAf;;;;;;;;;;wEDrBZI,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACT3T,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAKyB,U;;;;;;oBAO/B,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;AEvBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWY;;AACI;;AACI;;AACA;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACd;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;;AACP;;AAAI;;AAAG;;AACP;;AAAI;;AAAG;;AACT;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAI;;AACR;;AAAI;;AAAI;;AACR;;AAAI;;AAAI;;AACV;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAK;;AACT;;AAAI;;AAAK;;AACT;;AAAI;;AAAK;;AACX;;AACN;;;;;;AAUA;;AACI;;AACI;;AACA;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACd;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAE;;AACN;;AAAI;;AAAE;;AACN;;AAAI;;AAAE;;AACR;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;;AACP;;AAAI;;AAAG;;AACP;;AAAI;;AAAG;;AACT;;AACN;;;;;;AAUA;;AACI;;AACI;;AACA;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACd;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACL;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAE;;AACN;;AAAI;;AAAE;;AACN;;AAAI;;AAAE;;AACR;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;;AACP;;AAAI;;AAAG;;AACP;;AAAI;;AAAG;;AACT;;AACN;;;;;;AAYA;;AACI;;AACI;;AACA;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACd;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;;AACP;;AAAI;;AAAG;;AACP;;AAAI;;AAAG;;AACT;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAI;;AACR;;AAAI;;AAAI;;AACR;;AAAI;;AAAI;;AACV;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAK;;AACT;;AAAI;;AAAK;;AACT;;AAAI;;AAAK;;AACX;;AACN;;;;;;AAcA;;AACI;;AACI;;AACA;;AAAI;;AAAa;;AACjB;;AAAI;;AAAM;;AACV;;AAAI;;AAAG;;AACT;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;;AACP;;AAAI;;AAAI;;AACR;;AAAI;;AAAG;;AACT;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;;AACP;;AAAI;;AAAI;;AACR;;AAAI;;AAAI;;AACV;;AACA;;AACE;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;;AACP;;AAAI;;AAAK;;AACT;;AAAI;;AAAK;;AACX;;AACN;;;;;;AAaA;;AACI;;AACI;;AACA;;AAAI;;AAAS;;AACb;;AAAI;;AAAS;;AACf;;AACA;;AACE;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAG;;AACP;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAG;;AACP;;AAAI;;AAAC;;AACP;;AACA;;AACE;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAC;;AACP;;AACN;;;ADrNZ;;;;;;;UAWakU,4B;AASX,8CAAmBpC,SAAnB,EAA0E;AAAA;;AAAvD,eAAAA,SAAA,GAAAA,SAAA;AARnB,eAAAqC,YAAA,GAAe;AACbC,mBAAO,EAAE,KADI;AAEbC,mBAAO,EAAE,KAFI;AAGbC,mBAAO,EAAE,KAHI;AAIbhD,sBAAU,EAAE,KAJC;AAKbiD,iBAAK,EAAE,KALM;AAMbC,sBAAU,EAAE;AANC,WAAf;AAQ4E;;;;qCAEpE,CAAW;AAEnB;;;;;;;sCAIS;AACP,iBAAK1C,SAAL,CAAemB,KAAf;AACD;AAED;;;;;;;;qCAKW3S,I,EAAM;AACf,iBAAK6T,YAAL,CAAkB7T,IAAlB,IAA0B,CAAC,KAAK6T,YAAL,CAAkB7T,IAAlB,CAA3B;AACD;;;;;;;yBA5BU4T,4B,EAA4B,sI;AAAA,O;;;cAA5BA,4B;AAA4B,mD;AAAA,kB;AAAA,gB;AAAA,yQ;AAAA;AAAA;ACdzC;;AACI;;AAAQ;;AAAU;;AAClB;;AACI;;AAAI;;AAAmB;;AACvB;;AACI;;AAAU;;AAAK;;AAAW;;AAAG;;AAAa;;AAAK;;AAE/C;;AAA0B;AAAA,qBAAS,IAAAO,UAAA,CAAW,SAAX,CAAT;AAA8B,aAA9B;;AACtB;;AACJ;;AAEA;;AA0BA;;AACA;;AAAU;;AAAK;;AAAW;;AAAG;;AAAgB;;AAAK;;AAIlD;;AAA0B;AAAA,qBAAS,IAAAA,UAAA,CAAW,SAAX,CAAT;AAA8B,aAA9B;;AACtB;;AACJ;;AAEA;;AA0BA;;AACA;;AAAU;;AAAK;;AAAW;;AAAG;;AAAoB;;AAAK;;AAItD;;AAA0B;AAAA,qBAAS,IAAAA,UAAA,CAAW,OAAX,CAAT;AAA4B,aAA5B;;AACtB;;AACJ;;AAEA;;AA2BA;;AAEA;;AAAU;;AAAK;;AAAW;;AAAG;;AAAiB;;AAAK;;AAInD;;AAA0B;AAAA,qBAAS,IAAAA,UAAA,CAAW,YAAX,CAAT;AAAiC,aAAjC;;AACtB;;AACJ;;AAEA;;AA2BA;;AACA;;AAAU;;AAAK;;AAAW;;AAAG;;AAAc;;AAAK;;AAOhD;;AAA0B;AAAA,qBAAS,IAAAA,UAAA,CAAW,SAAX,CAAT;AAA8B,aAA9B;;AACtB;;AACJ;;AAEA;;AA2BA;;AACA;;AAAU;;AAAK;;AAAW;;AAAG;;AAAiB;;AAAK;;AAMnD;;AAA0B;AAAA,qBAAS,IAAAA,UAAA,CAAW,YAAX,CAAT;AAAiC,aAAjC;;AACtB;;AACJ;;AAEA;;AAsBA;;AACA;;AAAU;;AAAK;;AAAW;;AAAG;;AAAe;;AAAK;;AACrD;;AAEA;;AAAI;;AAAuB;;AAC3B;;AACI;;AAAU;;AAAK;;AAAW;;AAAG;;AAAK;;AAAK;;AACvC;;AACA;;AAAU;;AAAK;;AAAW;;AAAG;;AAAK;;AAAK;;AAEvC;;AACA;;AAAU;;AAAK;;AAAW;;AAAG;;AAAmB;;AAAK;;AAEzD;;AACA;;AAAI;;AAAY;;AAChB;;AACI;;AAAU;;AAAK;;AAAW;;AAAG;;AAAgB;;AAAK;;AAEtD;;AACA;;AAAI;;AAAe;;AACnB;;AACI;;AAAU;;AAAK;;AAAW;;AAAG;;AAAc;;AAAK;;AACpD;;AACJ;;AACA;;AACI;;AAAmB;AAAA,qBAAS,IAAApB,SAAA,EAAT;AAAoB,aAApB;;AAAuD;;AAAK;;AACnF;;AACJ;;;;AA5OgB;;AAAA;;AAGyB;;AAAA;;AAgCzB;;AAAA;;AAGyB;;AAAA;;AAgCzB;;AAAA;;AAGyB;;AAAA;;AAkCzB;;AAAA;;AAGyB;;AAAA;;AAoCzB;;AAAA;;AAGyB;;AAAA;;AAmCzB;;AAAA;;AAGyB;;AAAA;;;;;;;;;;wEDrL5Ba,4B,EAA4B;gBANxC,uDAMwC;iBAN9B;AACTpU,oBAAQ,EAAE,4BADD;AAETC,uBAAW,EAAE,yCAFJ;AAGTC,qBAAS,EAAE,CAAC,yCAAD,CAHF;AAIT0U,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAM8B,U;;;;;;;;;;;;;;;;;;;;;;AEdzqCE;;AAAwD;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AACxD;;AAA+D;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAK3D;;AAAmD;;AAAE;;;;;;AACrD;;AAAgC;;AAAU;;;;;;AAAV;;AAAA;;;;;;AAIhC;;AAA6E;;AAAS;;;;;;AACtF;;AAA2E;;AAAY;;;;;;AAAvD;;AAA2C;;AAAA;;;;;;AAI3E;;AAA6E;;AAAS;;;;;;;;;;;;;AACtF;;AAEE;;AAA8D;;;;;;AAD9D;;AACA;;AAAA;;;;;;AAIF;;AAA6E;;AAAM;;;;;;AACnF;;AAAiC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAIjC;;AAA6E;;AAAS;;;;;;AACtF;;AAAiC;;;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAIjC;;AAA6E;;AAAa;;;;;;AAC1F;;AAAiC;;;;AAAkC;;;;;;AAAlC;;AAAA;;;;;;AAIjC;;AAA6E;;AAAM;;;;;;AACnF;;AAAiC;;AAA8C;;;;;;AAA9C;;AAAA;;;;;;AAIjC;;AAA6E;;AAAM;;;;;;AACnF;;AAAiC;;AAAwC;;;;;;AAAxC;;AAAA;;;;;;AAIjC;;AAA6E;;AAAY;;;;;;AACzF;;AAAiC;;AAAkB;;;;;;AAAlB;;AAAA;;;;;;AAMjC;;AAA6D;;AAAO;;;;;;;;AAEpE;;AACE;;AACE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAA+B;;AAAU;;AAC3C;;AAEA;;AACE;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAA4B;;AAAI;;AAClC;;AAEA;;AACE;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAA8B;;AAAM;;AACtC;;AAEA;;AACE;;AAAgC;;AAAO;;AACzC;;AAEA;;AACE;;AAAgC;;AAAc;;AAChD;;AAEF;;;;;;AAlBsD;;AAAA;;AAKO;;AAAA;;;;;;AAgB/D;;;;;;AACA;;;;;;;ADxFJ;;;;;;;UAWaC,iB;AAwBX,mCACS7E,UADT,EAES8E,MAFT,EAGS9C,WAHT,EAImB3L,mBAJnB,EAKU0O,GALV,EAKgC;AAAA;;AAJvB,eAAA/E,UAAA,GAAAA,UAAA;AACA,eAAA8E,MAAA,GAAAA,MAAA;AACA,eAAA9C,WAAA,GAAAA,WAAA;AACU,eAAA3L,mBAAA,GAAAA,mBAAA;AACT,eAAA0O,GAAA,GAAAA,GAAA;AA5BV,eAAAC,0BAAA,GAA6B,EAA7B;AACA,eAAAC,wBAAA,GACE,0FADF;AAEA,eAAAC,mBAAA,GAAsB,EAAtB;AAEA,eAAAC,gBAAA,GAAmB,CACjB,MADiB,EAEjB,eAFiB,EAGjB,QAHiB,EAIjB,MAJiB,EAKjB,SALiB,EAMjB,WANiB,EAOjB,WAPiB,EAQjB,WARiB,EASjB,SATiB,CAAnB;AAcA,eAAAC,MAAA,GAAS,KAAT;AACA,eAAArO,MAAA,GAASA,MAAT;AACQ,eAAAsO,8BAAA,GAA+C,IAAI,iDAAJ,EAA/C;AAQJ;;;;qCAMO;AAAA;;AACT,iBAAKC,QAAL;AAEA,iBAAKD,8BAAL,GAAsC,KAAKrD,WAAL,CAAiBuD,mBAAjB,CAAqCpX,SAArC,CACpC,UAAAqX,kBAAkB,EAAI;AACpB,qBAAI,CAACA,kBAAL,GAA0BA,kBAA1B,CADoB,CAGpB;;AACA,kBAAIC,GAAG,GAAG,EAAV;;AACA,+CAAkB1O,MAAM,CAACxM,IAAP,CAAYib,kBAAZ,CAAlB,oCAAmD;AAA9C,oBAAM1N,GAAG,oBAAT;AACH2N,mBAAG,mBAAY3N,GAAZ,iBAAsB0N,kBAAkB,CAAC1N,GAAD,CAAlB,CAAwB4N,OAA9C,mBAAH;AACD;;AACD,qBAAI,CAACR,mBAAL,GAA2BO,GAA3B;;AACA,qBAAI,CAACV,GAAL,CAASY,YAAT,GAToB,CAWpB;;;AACA,kBAAMC,gBAAgB,GAAG7O,MAAM,CAACxM,IAAP,CAAYib,kBAAZ,EAAgCK,KAAhC,CACvB,UAAA/N,GAAG;AAAA,uBAAI0N,kBAAkB,CAAC1N,GAAD,CAAlB,CAAwBgO,UAA5B;AAAA,eADoB,CAAzB;;AAGA,kBAAIF,gBAAJ,EAAsB;AACpB,uBAAI,CAAC3R,OAAL;;AACA,uBAAI,CAACiR,mBAAL,GAA2B,EAA3B;;AACA,uBAAI,CAACH,GAAL,CAASY,YAAT;AACD;AACF,aArBmC,CAAtC;AAuBD;;;wCAEiB;AAChB,iBAAKN,8BAAL,CAAoC3V,WAApC;AACD;;;oCAES;AACR,iBAAK4V,QAAL;AACD;AAED;;;;;;;oCAIU;AACR,gBAAMvD,SAAS,GAAG,KAAK+C,MAAL,CAAY7K,IAAZ,CAAiB,+IAAjB,EAAyC;AACzDmE,kBAAI,EAAE;AAAE2H,oBAAI,EAAE;AAAR;AADmD,aAAzC,CAAlB;AAIAhE,qBAAS,CAACiE,WAAV,GAAwB7X,SAAxB,CAAkC,YAAM,CAAE,CAA1C;AACD;AAED;;;;;;;2CAIiB;AAAA;;AACf,gBAAM8Q,OAAO,GAAyB;AACpCgH,qBAAO,EAAE,iBAAAxD,KAAK,EAAI;AAChB,oBAAME,SAAS,GAAGF,KAAK,CAACjK,GAAN,CAAU,UAAAuN,IAAI;AAAA,yBAAIA,IAAI,CAACjW,IAAT;AAAA,iBAAd,EAA6B+I,IAA7B,CAAkC,MAAlC,CAAlB;AACA,uBAAI,CAACmM,0BAAL,gCAAwDrC,SAAxD;;AACA,uBAAI,CAACoC,GAAL,CAASY,YAAT;;AACA,oBAAM1D,aAAa,GAAGQ,KAAK,CAACjK,GAAN,CAAU,UAAAuN,IAAI;AAAA,yBAAK;AACvCG,iCAAa,EAAEH,IAAI,CAAChY,IADmB;AAEvCoY,4BAAQ,EAAEJ,IAAI,CAACjW;AAFwB,mBAAL;AAAA,iBAAd,CAAtB;;AAIA,uBAAI,CAACkS,WAAL,CAAiBoE,cAAjB,CAAgCnE,aAAhC,EAA+C9T,SAA/C,CAAyD,UAAAiQ,IAAI,EAAI;AAC/D,yBAAI,CAAC/H,mBAAL,CAAyB4P,OAAzB,CAAiC,OAAI,CAAChB,wBAAtC;;AACA,yBAAI,CAACD,0BAAL,GAAkC,EAAlC;;AACA,yBAAI,CAACD,GAAL,CAASY,YAAT;;AACA,yBAAI,CAAC1R,OAAL;AACD,iBALD;AAMD,eAfmC;AAgBpCoS,oBAAM,EAAE,kBAAM,CAAE,CAhBoB;AAiBpCC,sBAAQ,EAAE,QAjB0B;AAkBpCC,yBAAW,EAAE,IAlBuB;AAmBpCC,0BAAY,EAAE;AAnBsB,aAAtC;AAqBAC,mBAAO,CAACC,MAAR,CAAezH,OAAf;AACD;AAED;;;;;;;mCAIS4D,C,EAAWnY,E,EAAYic,S,EAAmBjF,a,EAAuB;AAAA;;AACxE,iBAAKhX,EAAL,GAAUA,EAAV;AACA,gBAAMqX,SAAS,GAAG,KAAK+C,MAAL,CAAY7K,IAAZ,CAAiB,kJAAjB,EAA0C;AAC1DmE,kBAAI,EAAE;AAAE1T,kBAAE,EAAEA,EAAN;AAAUoF,oBAAI,EAAE6W,SAAhB;AAA2BjF,6BAAa,EAAEA;AAA1C;AADoD,aAA1C,CAAlB;AAIAK,qBAAS,CAACiE,WAAV,GAAwB7X,SAAxB,CAAkC,UAAAyY,MAAM,EAAI;AAC1C,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,uBAAI,CAAC3S,OAAL;AACD;AACF,aAJD;AAKD;AAED;;;;;;;0CAIgB;AACd,iBAAK6Q,MAAL,CAAY7K,IAAZ,CAAiB,8HAAjB;AACD;AAED;;;;;;;sCAIY4M,M,EAAgB;AAAA;;AAC1B,iBAAKzB,MAAL,GAAc,IAAd;AACA,iBAAKpD,WAAL,CAAiB8E,cAAjB,CAAgCD,MAAhC,EAAwC1Y,SAAxC,CAAkD,UAAAiQ,IAAI,EAAI;;;AACxD,kBAAM2I,WAAW,GAAG,EAApB;;AACA,kBAAI,aAAA3I,IAAA,MAAI,IAAJ,IAAI,aAAJ,GAAI,MAAJ,GAAI,GAAE4I,OAAN,MAAa,IAAb,IAAa,aAAb,GAAa,MAAb,GAAa,GAAEjO,MAAf,KAAyB,aAAaqF,IAAI,CAAC4I,OAAL,CAAa,CAAb,CAA1C,EAA2D;AACzD,oBAAMC,IAAI,GAAGC,IAAI,CAACpI,GAAL,CAASV,IAAI,CAAC4I,OAAL,CAAajO,MAAtB,EAA8B,EAA9B,CAAb;AACA,oBAAIoO,UAAU,GAAG/I,IAAI,CAAC4I,OAAL,CAAapO,KAAb,CAAmB,CAAnB,EAAsBqO,IAAtB,CAAjB;AACA,oBAAMG,OAAO,GAAGrQ,MAAM,CAACxM,IAAP,CAAY4c,UAAU,CAAC,CAAD,CAAV,CAAcE,MAA1B,CAAhB;AACA,oBAAMC,IAAI,GAAGH,UAAU,CAAC3O,GAAX,CAAe,UAAA+O,IAAI;AAAA,yBAAIA,IAAI,CAACC,OAAT;AAAA,iBAAnB,CAAb;AACA,oBAAMH,MAAM,GAAGF,UAAU,CAAC3O,GAAX,CAAe,UAAA+O,IAAI,EAAI;AACpC,sBAAIE,SAAS,GAAG,EAAhB;AACA,sBAAMC,UAAU,GAAGH,IAAI,CAACF,MAAxB;AACAD,yBAAO,CAACpQ,OAAR,CAAgB,UAAA2Q,GAAG;AAAA,2BAAIF,SAAS,CAAC1E,IAAV,CAAe2E,UAAU,CAACC,GAAD,CAAzB,CAAJ;AAAA,mBAAnB;AACA,yBAAOF,SAAP;AACD,iBALc,CAAf;AAMAV,2BAAW,CAAC,SAAD,CAAX,GAAyBK,OAAzB;AACAL,2BAAW,CAAC,MAAD,CAAX,GAAsBO,IAAtB;AACAP,2BAAW,CAAC,QAAD,CAAX,GAAwBM,MAAxB;AACD;;AACD,qBAAI,CAACjC,MAAL,GAAc,KAAd;;AACA,qBAAI,CAACL,GAAL,CAASY,YAAT;;AACA,qBAAI,CAACb,MAAL,CAAY7K,IAAZ,CAAiB,iJAAjB,EAAyC;AACvCmE,oBAAI,EAAE;AACJ2I,6BAAW,EAAEA;AADT;AADiC,eAAzC;AAKD,aAxBD;AAyBD;AAED;;;;;;;qCAKElE,C,EACAnY,E,EACAic,S,EACAiB,sB,EAA8B;AAAA;;AAE9B,iBAAKld,EAAL,GAAUA,EAAV;AACA,gBAAMqX,SAAS,GAAG,KAAK+C,MAAL,CAAY7K,IAAZ,CAAiB,wJAAjB,EAA4C;AAC5DmE,kBAAI,EAAE;AACJ1T,kBAAE,EAAEA,EADA;AAEJoF,oBAAI,EAAE6W,SAFF;AAGJiB,sCAAsB,EAAEA;AAHpB;AADsD,aAA5C,CAAlB;AAQA7F,qBAAS,CAACiE,WAAV,GAAwB7X,SAAxB,CAAkC,UAAAyY,MAAM,EAAI;AAC1C,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,uBAAI,CAAC3S,OAAL;AACD;AACF,aAJD;AAKD;;;qCAEiB;AAAA;;AAChB,iBAAK4T,UAAL,GAAkB,IAAIC,iBAAJ,CAChB,KAAK9F,WADW,EAEhB,KAAK+F,SAFW,EAGhB,KAAKC,IAHW,CAAlB;AAKA,mEAAU,KAAK3L,MAAL,CAAYgG,aAAtB,EAAqC,OAArC,EACG/S,IADH,CACQ,oEAAa,GAAb,CADR,EAC2B,6EAD3B,EAEGnB,SAFH,CAEa,YAAM;AACf,kBAAI,CAAC,OAAI,CAAC0Z,UAAV,EAAsB;AACpB;AACD;;AACD,qBAAI,CAACA,UAAL,CAAgBxL,MAAhB,GAAyB,OAAI,CAACA,MAAL,CAAYgG,aAAZ,CAA0BzS,KAAnD;AACD,aAPH;AAQD;;;;;;;yBAnNUiV,iB,EAAiB,gI,EAAA,mI,EAAA,wJ,EAAA,sI,EAAA,gI;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA;AAAA;4EAgCjB,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;;;;AC9EtB;;AAEA;;AACE;;AAKS;;AAAG;AAAA,qBAAS,IAAAoD,aAAA,EAAT;AAAwB,aAAxB;;AAA0B;;AAAU;;AAAI;;AAGtD;;AACA;;AACE;;AACE;;AAAyC;AAAA,qBAAS,IAAAC,OAAA,EAAT;AAAkB,aAAlB;;AACvC;;AAAmD;;AAAG;;AACtD;;AACF;;AACA;;AAAyC;AAAA,qBAAS,IAAAC,cAAA,EAAT;AAAyB,aAAzB;;AACvC;;AAA6E;;AAAM;;AACnF;;AACF;;AACF;;AACA;;AAAyC;AAAA,qBAAS,IAAAlU,OAAA,EAAT;AAAkB,aAAlB;;AACvC;;AAA+B;;AAAO;;AACtC;;AACF;;AACF;;AAGA;;AAEE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACA;;AAEA;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAGF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AACF;;AAIA;;AACE;;AAEA;;AAyBF;;AAEA;;AACA;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AAIA;;AACE;;AACF;;AAEF;;;;AAzIqB;;AAqCd;;AAAA;;AACA;;AAAA;;AAEa;;AAAA;;AAiFA;;AAAA;;AACP;;AAAA;;AAGa;;AAAA;;AAIE;;AAAA,mHAAyC,WAAzC,EAAyC,CAAzC,EAAyC,UAAzC,EAAyC,EAAzC,EAAyC,iBAAzC,EAAyC,sEAAzC;;AAIA;;AAAA;;;;;;;;;;;wEDxFf4Q,iB,EAAiB;gBAN7B,uDAM6B;iBANnB;AACT9U,oBAAQ,EAAE,eADD;AAETC,uBAAW,EAAE,4BAFJ;AAGTC,qBAAS,EAAE,CAAC,4BAAD,CAHF;AAIT0U,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMmB,U;;;;;;;;;;;;;;kBAgC3B,uD;mBAAU,wE,EAAc;AAAE,wBAAQ;AAAV,a;;;kBACxB,uD;mBAAU,8D,EAAS;AAAE,wBAAQ;AAAV,a;;;kBACnB,uD;mBAAU,Q,EAAU;AAAE,wBAAQ;AAAV,a;;;;;UAoLVkD,iB;;;;;AAcX,mCACSM,gBADT,EAESC,UAFT,EAGSC,KAHT,EAGuB;AAAA;;AAAA;;AAErB;AAJO,kBAAAF,gBAAA,GAAAA,gBAAA;AACA,kBAAAC,UAAA,GAAAA,UAAA;AACA,kBAAAC,KAAA,GAAAA,KAAA;AAhBT,kBAAAC,aAAA,GAAgB,IAAI,oDAAJ,CAAoB,EAApB,CAAhB;AAUA,kBAAAC,YAAA,GAAuB,EAAvB;AACA,kBAAAC,YAAA,GAAuB,EAAvB,CAKuB,CAGrB;;AACA,kBAAKF,aAAL,CAAmBpa,SAAnB,CAA6B;AAAA,mBAAO,QAAKka,UAAL,CAAgBrH,SAAhB,GAA4B,CAAnC;AAAA,WAA7B;;AAJqB;AAKtB;;;;;AAED;;;oCAGO;AAAA;;AACL;AACA,gBAAM0H,kBAAkB,GAAG,CACzB,KAAKN,gBAAL,CAAsBO,UADG,EAEzB,KAAKL,KAAL,CAAWM,UAFc,EAGzB,KAAKL,aAHoB,EAIzB,KAAKF,UAAL,CAAgBQ,IAJS,CAA3B;;AAMA,iBAAKT,gBAAL,CAAsBU,WAAtB;;AAEA,mBAAO,iEAASJ,kBAAT,EAA6BpZ,IAA7B,CACL,2DAAI,YAAM;AACR;AAEA,qBAAI,CAACkZ,YAAL,GAAoB,OAAI,CAACJ,gBAAL,CAAsBhK,IAAtB,CACjBxF,KADiB,GAEjByD,MAFiB,CAEV,UAAC0J,IAAD,EAAgB;AACtB,oBAAMgD,SAAS,GAAG,CAAChD,IAAI,CAACjW,IAAL,GAAYiW,IAAI,CAACpE,UAAlB,EAA8BrJ,WAA9B,EAAlB;AACA,uBAAOyQ,SAAS,CAACpS,OAAV,CAAkB,OAAI,CAAC0F,MAAL,CAAY/D,WAAZ,EAAlB,MAAiD,CAAC,CAAzD;AACD,eALiB,CAApB,CAHQ,CAUR;;AACA,kBAAM0Q,UAAU,GAAG,OAAI,CAACC,QAAL,CAAc,OAAI,CAACT,YAAL,CAAkB5P,KAAlB,EAAd,CAAnB,CAXQ,CAaR;;;AACA,kBAAMsQ,UAAU,GAAG,OAAI,CAACb,UAAL,CAAgBrH,SAAhB,GAA4B,OAAI,CAACqH,UAAL,CAAgBpH,QAA/D;AAEA,qBAAI,CAACwH,YAAL,GAAoBO,UAAU,CAACG,MAAX,CAClBD,UADkB,EAElB,OAAI,CAACb,UAAL,CAAgBpH,QAFE,CAApB;AAKA,qBAAO,OAAI,CAACwH,YAAZ;AACD,aAtBD,CADK,CAAP;AAyBD;;;uCAEY,CAAE;AAEf;;;;;;;mCAISrK,I,EAAY;AAAA;;AACnB,gBAAI,CAAC,KAAKkK,KAAL,CAAWc,MAAZ,IAAsB,KAAKd,KAAL,CAAWe,SAAX,KAAyB,EAAnD,EAAuD;AACrD,qBAAOjL,IAAP;AACD;;AAED,mBAAOA,IAAI,CAAC4J,IAAL,CAAU,UAACsB,CAAD,EAAIC,CAAJ,EAAU;AACzB,kBAAIC,SAAS,GAAQ,EAArB;AACA,kBAAIC,SAAS,GAAQ,EAArB;;AAEA,sBAAQ,OAAI,CAACnB,KAAL,CAAWc,MAAnB;AACE,qBAAK,IAAL;AAAA,8BAC2B,CAACE,CAAC,CAAC5e,EAAH,EAAO6e,CAAC,CAAC7e,EAAT,CAD3B;AACG8e,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,MAAL;AAAA,+BAC2B,CAACH,CAAC,CAACxZ,IAAH,EAASyZ,CAAC,CAACzZ,IAAX,CAD3B;AACG0Z,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,eAAL;AAAA,+BAC2B,CAACH,CAAC,CAAC5H,aAAH,EAAkB6H,CAAC,CAAC7H,aAApB,CAD3B;AACG8H,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,QAAL;AAAA,+BAC2B,CAACH,CAAC,CAAC5S,MAAH,EAAW6S,CAAC,CAAC7S,MAAb,CAD3B;AACG8S,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,WAAL;AAAA,+BAC2B,CAACH,CAAC,CAAC3H,UAAH,EAAe4H,CAAC,CAAC5H,UAAjB,CAD3B;AACG6H,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,KAAL;AAAA,+BAC2B,CAACH,CAAC,CAACxX,GAAH,EAAQyX,CAAC,CAACzX,GAAV,CAD3B;AACG0X,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,SAAL;AACGD,2BADH,GAC4B,IAAI/b,IAAJ,CAAS6b,CAAC,CAACI,OAAX,CAD5B;AACcD,2BADd,GACiD,IAAIhc,IAAJ,CAAS8b,CAAC,CAACG,OAAX,CADjD;AAEE;;AACF,qBAAK,MAAL;AAAA,+BAC2B,CAACJ,CAAC,CAACxG,IAAH,EAASyG,CAAC,CAACzG,IAAX,CAD3B;AACG0G,2BADH;AACcC,2BADd;AAEE;AAxBJ;;AA2BA,kBAAME,MAAM,GAAGC,KAAK,CAAC,CAACJ,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AACA,kBAAMK,MAAM,GAAGD,KAAK,CAAC,CAACH,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AAEA,qBACE,CAACE,MAAM,GAAGE,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAxB,KAA8B,OAAI,CAACvB,KAAL,CAAWe,SAAX,KAAyB,KAAzB,GAAiC,CAAjC,GAAqC,CAAC,CAApE,CADF;AAGD,aArCM,CAAP;AAsCD;;;8BA9GS;AACR,mBAAO,KAAKd,aAAL,CAAmB3Y,KAA1B;AACD,W;4BAEUyM,M,EAAgB;AACzB,iBAAKkM,aAAL,CAAmBrU,IAAnB,CAAwBmI,MAAxB;AACD;;;;QAToC,mE;;;;;;;;;;;;;;;;;AEnQvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAIA;;;;;;;UAUayN,yB;AAGX,2CACSC,WADT,EAES/H,WAFT,EAEiC;AAAA;;AADxB,eAAA+H,WAAA,GAAAA,WAAA;AACA,eAAA/H,WAAA,GAAAA,WAAA;AAJT,eAAAgI,oBAAA,GAAuB,EAAvB;AAKI;;;;qCAEI;AAAA;;AACN,iBAAKhI,WAAL,CAAiBuD,mBAAjB,CAAqCpX,SAArC,CAA+C,UAAAiQ,IAAI,EAAI;AACrD,kBAAIqH,GAAG,GAAG,EAAV;;AACA,gDAAkB1O,MAAM,CAACxM,IAAP,CAAY6T,IAAZ,CAAlB,qCAAqC;AAAhC,oBAAMtG,GAAG,qBAAT;AACH2N,mBAAG,mBAAY3N,GAAZ,iBAAsBsG,IAAI,CAACtG,GAAD,CAAJ,CAAU4N,OAAhC,qBAAH;AACD;;AACD,qBAAI,CAACsE,oBAAL,GAA4BvE,GAA5B;AACD,aAND;AAOD;;;;;;;yBAhBUqE,yB,EAAyB,2I,EAAA,wJ;AAAA,O;;;cAAzBA,yB;AAAyB,8C;AAAA,gB;AAAA,e;AAAA,kK;AAAA;AAAA;ACdtC;;AACI;;AAAI;;AAAc;;AAClB;;AAA4C;AAAA,qBAAS,IAAAC,WAAA,UAAT;AAA8B,aAA9B;;AACxC;;AAA4C;;AAAK;;AACnD;;AACF;;AACJ;;;;AADS;;AAAA;;;;;;;;;wEDSID,yB,EAAyB;gBALrC,uDAKqC;iBAL3B;AACT/Z,oBAAQ,EAAE,uBADD;AAETC,uBAAW,EAAE,oCAFJ;AAGTC,qBAAS,EAAE,CAAC,oCAAD;AAHF,W;AAK2B,U;;;;;;;;;;;;;;;;;;;;;;;;AEdtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAMtF,MAAM,GAAW,EAAvB;;UAMasf,wB;;;;;cAAAA;;;;2BAAAA,wB;AAAwB,S;AAAA,kBAH1B,CAAC,6DAAaC,QAAb,CAAsBvf,MAAtB,CAAD,CAG0B,EAFzB,4DAEyB;;;;4HAAxBsf,wB,EAAwB;AAAA;AAAA,oBAFzB,4DAEyB;AAAA,S;AAFb,O;;;;;wEAEXA,wB,EAAwB;gBAJpC,sDAIoC;iBAJ3B;AACRpe,mBAAO,EAAE,CAAC,6DAAaqe,QAAb,CAAsBvf,MAAtB,CAAD,CADD;AAERF,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAI2B,U;;;;;;;;;;;;;;;;;;ACTrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAyBa0f,iB;;;;;cAAAA;;;;2BAAAA,iB;AAAiB,S;AAAA,kBAFnB,CAAC,4DAAD,EAAe,qFAAf,EAAyC,sEAAzC,CAEmB;;;;4HAAjBA,iB,EAAiB;AAAA,yBAV1B,qHAU0B,EAT1B,8IAS0B,EAR1B,iJAQ0B,EAP1B,uJAO0B,EAN1B,gIAM0B,EAL1B,wIAK0B;AALE,oBAGpB,4DAHoB,EAGN,qFAHM,EAGoB,sEAHpB,CAKF;AAFkC,oBADpD,qHACoD;AAElC,S;AAHD,O;;;;;wEAGhBA,iB,EAAiB;gBAZ7B,sDAY6B;iBAZpB;AACRzd,wBAAY,EAAE,CACZ,qHADY,EAEZ,8IAFY,EAGZ,iJAHY,EAIZ,uJAJY,EAKZ,gIALY,EAMZ,wIANY,CADN;AASRjC,mBAAO,EAAE,CAAC,qHAAD,CATD;AAURoB,mBAAO,EAAE,CAAC,4DAAD,EAAe,qFAAf,EAAyC,sEAAzC;AAVD,W;AAYoB,U;;;;;;;;;;;;;;;;;;ACzB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAeA;;;;;;;UAQaue,W;AAiBX,6BACUpK,UADV,EAEUqK,OAFV,EAGUC,eAHV,EAG0C;AAAA;;AAFhC,eAAAtK,UAAA,GAAAA,UAAA;AACA,eAAAqK,OAAA,GAAAA,OAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AAnBO,eAAAvX,OAAA,GAAU,sEAAYC,MAAtB;AACA,eAAAuX,iCAAA,GAAoC,CACnD,eADmD,EAEnD,eAFmD,CAApC;AAIT,eAAAC,OAAA,GAAU,KAAV,CAckC,CAdjB;;AAEzB,eAAA7B,UAAA,GAAsC,IAAI,oDAAJ,CAA4B,EAA5B,CAAtC;AAEO,eAAApD,mBAAA,GAEH,IAAI,oDAAJ,CAAyC,IAAIkF,GAAJ,EAAzC,CAFG;AAWH;;;;0CAMY;AACd,mBAAO,KAAKC,UAAZ;AACD;AAED;;;;;;;yCAIY;AACV,mBAAO,KAAK1K,UAAL,CAAgB1B,GAAhB,WAAmC,KAAKvL,OAAxC,sBAAP;AACD;AAED;;;;;;;wCAIkB;AAAA;;AAChB;AACA,gBAAM4X,SAAS,GAAG,mDAAM,KAAKH,OAAX,CAAlB;AACA,+DAAM,CAAN,EAAS,IAAT,EACGlb,IADH,CAEI,iEAAU;AAAA,qBAAM,OAAI,CAAC0Q,UAAL,CAAgB1B,GAAhB,WAAuB,OAAI,CAACvL,OAA5B,iBAAN;AAAA,aAAV,CAFJ,EAGI,2DAAI,UAAC0P,KAAD;AAAA,qBAAmBA,KAAK,CAACjK,GAAN,CAAU,UAAAuN,IAAI;AAAA,uBAAI,OAAI,CAACsE,OAAL,CAAavK,KAAb,CAAmBiG,IAAnB,CAAJ;AAAA,eAAd,CAAnB;AAAA,aAAJ,CAHJ,EAII,iEACE,UAAAtD,KAAK;AAAA,qBACHA,KAAK,CAACb,IAAN,CAAW,UAAAmE,IAAI;AAAA,uBACb,OAAI,CAACwE,iCAAL,CAAuC1a,QAAvC,CAAgDkW,IAAI,CAACrP,MAArD,CADa;AAAA,eAAf,CADG;AAAA,aADP,EAKE,IALF,CAJJ,EAWI,iEAAUiU,SAAV,CAXJ,EAaGxc,SAbH,CAaa,UAAAiQ,IAAI,EAAI;AACjB,qBAAI,CAACuK,UAAL,CAAgBzU,IAAhB,CAAqBkK,IAArB;AACD,aAfH;AAgBD;AAED;;;;;;;;;kCAMQqE,K,EAAY;AAAA;;AAClB,gBAAMmI,sBAAsB,GAAG,IAAIH,GAAJ,EAA/B;;AAEA,iBAAK,IAAI5H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAAC1J,MAA1B,EAAkC8J,CAAC,EAAnC,EAAuC;AACrC+H,oCAAsB,CAACnI,KAAK,CAACI,CAAD,CAAL,CAAS/S,IAAV,CAAtB,GAAwC;AAAE4V,uBAAO,EAAE,CAAX;AAAcI,0BAAU,EAAE;AAA1B,eAAxC;AACD;;AACD,iBAAKP,mBAAL,CAAyBrR,IAAzB,CAA8B0W,sBAA9B;;AANkB,uCAQT/H,GARS;AAShB,kBAAMgI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,sBAAQ,CAACE,GAAT,CAAa,aAAb,EAA4BtI,KAAK,CAACI,GAAD,CAAjC,EAAsCJ,KAAK,CAACI,GAAD,CAAL,CAAS/S,IAA/C;;AAEA,qBAAI,CAACkQ,UAAL,CACGtM,IADH,WACW,OAAI,CAACX,OADhB,yBAC6C8X,QAD7C,EACuD;AACnDG,8BAAc,EAAE,IADmC;AAEnDnK,uBAAO,EAAE;AAF0C,eADvD,EAKG1S,SALH,CAKa,UAAA6H,KAAK,EAAI;AAClB,wBAAQA,KAAK,CAACzF,IAAd;AACE,uBAAK,mEAAc0a,cAAnB;AACE,wBAAMC,WAAW,GAAGhE,IAAI,CAACiE,KAAL,CACjBnV,KAAK,CAACoV,MAAN,GAAe,GAAhB,GAAuBpV,KAAK,CAACqV,KADX,CAApB;AAGAT,0CAAsB,CAACnI,KAAK,CAACI,GAAD,CAAL,CAAS/S,IAAV,CAAtB,GAAwC;AACtC4V,6BAAO,EAAEwF,WAD6B;AAEtCpF,gCAAU,EAAE;AAF0B,qBAAxC;;AAIA,2BAAI,CAACP,mBAAL,CAAyBrR,IAAzB,CAA8B0W,sBAA9B;;AACA;;AACF,uBAAK,mEAAcU,QAAnB;AACEV,0CAAsB,CAACnI,KAAK,CAACI,GAAD,CAAL,CAAS/S,IAAV,CAAtB,GAAwC;AACtC4V,6BAAO,EAAE,GAD6B;AAEtCI,gCAAU,EAAE;AAF0B,qBAAxC;;AAIA,2BAAI,CAACP,mBAAL,CAAyBrR,IAAzB,CAA8B0W,sBAA9B;;AAhBJ;AAkBD,eAxBH;AAZgB;;AAQlB,iBAAK,IAAI/H,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGJ,KAAK,CAAC1J,MAA1B,EAAkC8J,GAAC,EAAnC,EAAuC;AAAA,oBAA9BA,GAA8B;AA6BtC;AACF;AAED;;;;;;;yCAIeJ,K,EAAK;AAAA;;AAClB,mBAAO,KAAKzC,UAAL,CACJtM,IADI,WACI,KAAKX,OADT,iCAC8C0P,KAD9C,EAEJnT,IAFI,CAGH,iEAAU,UAAAwR,QAAQ,EAAI;AACpB,qBAAO,sDACLA,QAAQ,CAAC,YAAD,CAAR,CAAuBtI,GAAvB,CAA2B,UAAA+S,eAAe;AAAA,uBACxC,OAAI,CAACjB,eAAL,CAAqBkB,0BAArB,CAAgDD,eAAhD,CADwC;AAAA,eAA1C,CADK,CAAP;AAKD,aAND,CAHG,CAAP;AAWD;AAED;;;;;;;qCAIWxF,I,EAAU;AACnB,iBAAK/F,UAAL,CACGvB,GADH,WACU,KAAK1L,OADf,wBACoCgT,IAAI,CAACrb,EADzC,QACgDqb,IADhD,EAEG5X,SAFH,CAEa,UAAAiQ,IAAI,EAAI,CAAE,CAFvB;AAGD;AAED;;;;;;;qCAIW1T,E,EAAmB;AAC5B,iBAAKsV,UAAL,qBAA0B,KAAKjN,OAA/B,wBAAoDrI,EAApD,QAA2DyD,SAA3D;AACD;AAED;;;;;;;;yCAKe0Y,M,EAAuB;AACpC,gBAAMvM,MAAM,GAAG;AACbA,oBAAM,EAAE,IAAI,+DAAJ,GAAiByQ,GAAjB,CAAqB,MAArB,EAA6B,GAA7B,EAAkCA,GAAlC,CAAsC,WAAtC,EAAmD,GAAnD;AADK,aAAf;AAGA,mBACE,KAAK/K,UAAL,CAAgB1B,GAAhB,WACK,KAAKvL,OADV,wBAC+B8T,MAD/B,iBAEEvM,MAFF,CADF;AAMD;;;8BA1IO;AACN,mBAAO,KAAKqO,UAAL,CAAgB8C,QAAhB,EAAP;AACD;;;;;;;yBAzBUrB,W,EAAW,uH,EAAA,2H,EAAA,wJ;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACV5Z,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;UAWakb,iB;AACX,qCAAc;AAAA;AAAE;;;;qCAER,CAAW;;;;;;;yBAHRA,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,qC;AAAA,iB;AAAA,e;AAAA,sX;AAAA;AAAA;ACb9B;;AACE;;AACE;;AACE;;AACE;;AAAmB;;AACjB;;AAEE;;AACF;;AACA;;AACF;;AACA;;AACE;;AAMF;;AACF;;AACF;;AACF;;AACF;;AAGA;;AACE;;AACE;;AAIF;;AACF;;;;AAjBY;;AAAA,oFAAc,OAAd,EAAc,GAAd;;;;;;;;;;wEDFCA,iB,EAAiB;gBAN7B,uDAM6B;iBANnB;AACT3b,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD,CAHF;AAIT0U,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMmB,U;;;;;;;;;;;;;;;;;;;;AEb9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoCU;;AACE;;AAAM;;AAA6E;;AACrF;;;;;;AAEA;;AACE;;AAAM;;AAA0D;;AAClE;;;;;;AAMI;;AACE;;AACF;;;;;;AAQA;;AACE;;AACF;;;;;;AAYA;;;;;;;AD/Dd;;;;;;;UAWa+G,c;AAYX,gCACUC,WADV,EAEUna,KAFV,EAGU1E,MAHV,EAIUE,qBAJV,EAKU4e,WALV,EAMUC,iBANV,EAM8C;AAAA;;AAAA;;AALpC,eAAAF,WAAA,GAAAA,WAAA;AACA,eAAAna,KAAA,GAAAA,KAAA;AACA,eAAA1E,MAAA,GAAAA,MAAA;AACA,eAAAE,qBAAA,GAAAA,qBAAA;AACA,eAAA4e,WAAA,GAAAA,WAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AAjBV,eAAAC,uBAAA,GAA0B,2EAA1B;AAGA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,SAAA,GAAY,KAAZ;AAGA,eAAAC,eAAA,GAAkB,IAAlB,CAU8C,CAE5C;;AACA,cAAI,KAAKjf,qBAAL,CAA2B0E,gBAA/B,EAAiD;AAC/C,iBAAK5E,MAAL,CAAYwB,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD,WAL2C,CAO5C;;;AACA,eAAKkD,KAAL,CAAW6I,MAAX,CAAkBnM,SAAlB,CAA4B,UAAAmM,MAAM,EAAI;AACpC,gBAAIA,MAAM,CAAClG,KAAP,IAAgBkG,MAAM,CAAC6R,GAA3B,EAAgC;AAC9B,qBAAI,CAAC/X,KAAL,GAAakG,MAAM,CAAClG,KAApB;AACA,qBAAI,CAAC+X,GAAL,GAAW7R,MAAM,CAAC6R,GAAlB;;AACA,qBAAI,CAACC,YAAL;AACD;AACF,WAND;AAOD;;;;yCAEc;AAAA;;AACb,iBAAKF,eAAL,GAAuB,IAAvB;AACA,iBAAKL,WAAL,CAAiBQ,QAAjB,CAA0B;AAAEjY,mBAAK,EAAE,KAAKA,KAAd;AAAqB+X,iBAAG,EAAE,KAAKA;AAA/B,aAA1B,EAAgEhe,SAAhE,CACE,UAAAiQ,IAAI,EAAI;AACN,qBAAI,CAAC8N,eAAL,GAAuB,IAAvB;AACD,aAHH,EAIE,UAAAI,GAAG,EAAI;AACL,qBAAI,CAACJ,eAAL,GAAuB,KAAvB;AACD,aANH;AAQD;AAED;;;;;;qCAIQ;AACN,iBAAKK,SAAL,GAAiB,KAAKX,WAAL,CAAiBY,KAAjB,CAAuB;AACtC7Y,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWyL,QAAhB,CAD+B;AAEtC3L,sBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAW2L,QAAhB;AAF4B,aAAvB,CAAjB,CADM,CAMN;;AACA,iBAAKvN,SAAL,GAAiB,KAAKJ,KAAL,CAAWmL,QAAX,CAAoBhL,WAApB,CAAgC,WAAhC,KAAgD,GAAjE;AACD;AAED;;;;;;qCAQW;AAAA;;AACT,iBAAKqa,SAAL,GAAiB,IAAjB,CADS,CAGT;;AACA,gBAAI,KAAKM,SAAL,CAAeE,OAAnB,EAA4B;AAC1B;AACD;;AAED,iBAAKT,OAAL,GAAe,IAAf;AACA,iBAAK/e,qBAAL,CACGoF,KADH,CACS,KAAKqa,CAAL,CAAO/Y,KAAP,CAAa/D,KADtB,EAC6B,KAAK8c,CAAL,CAAOjZ,QAAP,CAAgB7D,KAD7C,EAEGzB,SAFH,CAGI,UAAAiQ,IAAI,EAAI;AACN,qBAAI,CAACrR,MAAL,CAAYwB,QAAZ,CAAqB,CAAC,OAAI,CAACsD,SAAN,CAArB;AACD,aALL,EAMI,UAAA2E,KAAK,EAAI;AACP,qBAAI,CAACwV,OAAL,GAAe,KAAf;AACD,aARL;AAUD;AAED;;;;;;6CAGgB;AAAA;;AACd,gBAAMW,sBAAsB,GAAG,0EAAoBtgB,WAAnD;AACA,iBAAK2f,OAAL,GAAe,IAAf;AACA,iBAAKF,iBAAL,CAAuBc,MAAvB,CAA8BD,sBAA9B,EAAsDxiB,IAAtD,CAA2D,UAAA0iB,QAAQ,EAAI;AACrE;AACAle,0BAAY,CAAC2D,OAAb,CAAqB,YAArB,EAAmC7D,IAAI,CAACsF,SAAL,CAAe8Y,QAAf,CAAnC;;AACA,qBAAI,CAAC5f,qBAAL,CACG6f,oBADH,CACwBD,QAAQ,CAACE,SADjC,EAEGzd,IAFH,CAEQ,gEAAS;AAAA,uBAAO,OAAI,CAAC0c,OAAL,GAAe,KAAtB;AAAA,eAAT,CAFR,EAGG7d,SAHH,CAGa,UAAAyY,MAAM,EAAI;AACnB,uBAAI,CAAC7Z,MAAL,CAAYwB,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD,eALH;AAMD,aATD;AAUD;AAED;;;;;;oCAGO;AAAA;;AACL,iBAAKud,iBAAL,CAAuBkB,OAAvB,GAAiC7iB,IAAjC,CAAsC,UAAAiU,IAAI,EAAI;AAC5C;AACA,qBAAI,CAACrR,MAAL,CAAYwB,QAAZ,CAAqB,UAArB;AACD,aAHD;AAID;;;8BAnDO;AACN,mBAAO,KAAKge,SAAL,CAAeU,QAAtB;AACD;;;;;;;yBAnEUtB,c,EAAc,2H,EAAA,+H,EAAA,uH,EAAA,sK,EAAA,wI,EAAA,wI;AAAA,O;;;cAAdA,c;AAAc,uC;AAAA,iB;AAAA,gB;AAAA,s1E;AAAA;AAAA;ACpB3B;;AAGE;;AAA8B;AAAA,qBAAY,IAAAuB,QAAA,EAAZ;AAAsB,aAAtB;;AAC5B;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAA8D;AAAA,qBAAS,IAAAC,gBAAA,EAAT;AAA2B,aAA3B;;AAC9D;;AACE;;AAAA;;AAA8D;;AAEjC;;AAEA;;AAEA;;AAEX;;AACpB;;AACE;;AAAA;;AAAkC;;AAAmB;;AACvD;;AACF;;AACA;;AACA;;AACA;;AACE;;AACF;;AAMA;;AAIA;;AAIA;;AACE;;AACE;;AAEA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAEA;;AAGF;;AACA;;AACE;;AAAoE;;AAAgB;;AACtF;;AACF;;AAIA;;AACE;;AAEE;;AACA;;AACF;;AACF;;AAEA;;AACE;;AAAuB;;AAAyB;;AAChD;;AAEE;;AACF;;AACF;;AAQF;;AACF;;AACF;;AACF;;AACF;;;;AA5FQ;;AAAA;;AAiCgC;;AAAA;;AAIF;;AAAA;;AAKE;;AAAA;;AAGf;;AAAA;;AAOe;;AAAA;;AAGf;;AAAA;;AAK+B;;AAAA;;AAOW;;AAAA,8FAAoB,SAApB,EAAoB,2BAApB;;AAE/C;;AAAA;;AAOgD;;AAAA;;;;;;;;;wED3DvDxB,c,EAAc;gBAL1B,uDAK0B;iBALhB;AACT5b,oBAAQ,EAAE,gBADD;AAETC,uBAAW,EAAE,wBAFJ;AAGTC,qBAAS,EAAE,CAAC,wBAAD;AAHF,W;AAKgB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUwB;;AACI;;AAAM;;AAAkB;;AAC5B;;;;;;AADU;;AAAA;;;;;;AAEV;;AACI;;AAAM;;AAAoB;;AAC9B;;;;;;AADU;;AAAA;;;;;;AASF;;AACI;;AACJ;;;;;;AAHA;;AACA;;AAGJ;;;;;;AAHe;;AAAA;;;;;;AAYX;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACI;;AAGJ;;;;;;AAXJ;;AACI;;AAGA;;AAGA;;AAMJ;;;;;;AAZe;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAgBX;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;AANe;;AAAA;;AAGA;;AAAA;;;;;;AAWf;;;;;;;;;ADjE5B;;;;;;;UAYamd,uB;AASX,yCAAoBvB,WAApB,EAAsDwB,EAAtD,EAAuE;AAAA;;AAAnD,eAAAxB,WAAA,GAAAA,WAAA;AAAkC,eAAAwB,EAAA,GAAAA,EAAA;AARtD,eAAAtB,uBAAA,GAA0B,+EAA1B;AAIA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAqB,WAAA,GAAc,IAAd;AAEyE;;;;qCAEjE;AACN,iBAAKC,kBAAL,GAA0B,KAAKF,EAAL,CAAQb,KAAR,CACxB;AACEgB,8BAAgB,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWpO,QAAZ,CAAL,CADpB;AAEE3L,sBAAQ,EAAE,CACR,EADQ,EAER,CACE,0DAAW2L,QADb,EAEE,0DAAWqO,SAAX,CAAqB,CAArB,CAFF,EAGE,0DAAWC,OAAX,CACE,iEADF,CAHF,CAFQ,CAFZ;AAYEC,8BAAgB,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWvO,QAAZ,CAAL;AAZpB,aADwB,EAexB;AAAEwO,uBAAS,EAAE;AAAb,aAfwB,CAA1B;AAiBD;AAED;;;;;;;AAQA;;;2CAIiB;AAAA;;AACf,iBAAK3B,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKsB,kBAAL,CAAwBM,KAA5B,EAAmC;AACjC,mBAAK7B,OAAL,GAAe,IAAf;AACA,mBAAKC,SAAL,GAAiB,KAAjB;AACA,mBAAKJ,WAAL,CAAiBiC,cAAjB,CAAgC,KAAKP,kBAAL,CAAwB3d,KAAxD,EAA+DzB,SAA/D,CACE,UAAAiQ,IAAI,EAAI;AACN,uBAAI,CAACmP,kBAAL,CAAwBQ,KAAxB;;AACA,uBAAI,CAACT,WAAL,GAAmB,IAAnB;AACA,uBAAI,CAAC7W,YAAL,GAAoB,IAApB;AACA,uBAAI,CAACuX,cAAL,GAAsB,8CAAtB;AACA,uBAAI,CAAChC,OAAL,GAAe,KAAf;AACD,eAPH,EAQE,UAAAM,GAAG,EAAI;AACL,uBAAI,CAAC0B,cAAL,GAAsB,IAAtB;AACA,uBAAI,CAACvX,YAAL,GAAoB,mBAApB;AACA,uBAAI,CAACuV,OAAL,GAAe,KAAf;AACD,eAZH;AAcD,aAjBD,MAiBO;AACL,mBAAKsB,WAAL,GAAmB,KAAnB;AACD;AACF;;;8BA9BO;AACN,mBAAO,KAAKC,kBAAL,CAAwBN,QAA/B;AACD;;;;;;;yBArCUG,uB,EAAuB,wI,EAAA,2H;AAAA,O;;;cAAvBA,uB;AAAuB,4C;AAAA,iB;AAAA,gB;AAAA,sgC;AAAA;AAAA;AClBpC;;AACI;;AAAuC;AAAA,qBAAY,IAAAU,cAAA,EAAZ;AAA4B,aAA5B;;AACnC;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAe;;AACvB;;AAEA;;AACI;;AAGA;;AAGJ;;AAEA;;AACI;;AACI;;AAEI;;AAKR;;AACJ;;AAEA;;AACI;;AACI;;AAEA;;AAcJ;;AACJ;;AAEA;;AACI;;AACI;;AAGA;;AAQJ;;AAEJ;;AAEA;;AACI;;AAEI;;AACA;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA9EU;;AAAA;;AAS0C;;AAAA;;AAGE;;AAAA;;AAMF;;AAAA;;AAEpB;;AAAA;;AACK;;AAAA;;AASe;;AAAA;;AAEpB;;AAAA;;AACC;;AAAA;;AAkBmB;;AAAA;;AAGpB;;AAAA;;AACC;;AAAA;;AAa8C;;AAAA,8FAAoB,SAApB,EAAoB,2BAApB;;AAE7C;;AAAA;;;;;;;;;;wEDrDrBV,uB,EAAuB;gBANnC,uDAMmC;iBANzB;AACTrd,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD,CAHF;AAIT0U,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMyB,U;;;;;;;;;;;;;;;;;;;;;;;;AElBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYc;;AACE;;AACF;;;;;;AASE;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AACA;;AACE;;AACF;;;;;;AATF;;AACE;;AAGA;;AAGA;;AAIF;;;;;;AAVa;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAaX;;AACE;;AACF;;;;;;AACA;;AACE;;AACJ;;;;;;AANA;;AACE;;AAGA;;AAGF;;;;;;AANa;;AAAA;;AAGA;;AAAA;;;;;;AAUb;;;;;;;;;AD5Cd;;;;;;;UAWaqJ,iB;AAOX,mCACUrC,WADV,EAEU7e,MAFV,EAGUE,qBAHV,EAIU4e,WAJV,EAKmBxV,mBALnB,EAK2D;AAAA;;AAJjD,eAAAuV,WAAA,GAAAA,WAAA;AACA,eAAA7e,MAAA,GAAAA,MAAA;AACA,eAAAE,qBAAA,GAAAA,qBAAA;AACA,eAAA4e,WAAA,GAAAA,WAAA;AACS,eAAAxV,mBAAA,GAAAA,mBAAA;AAXnB,eAAA0V,uBAAA,GAA0B,2EAA1B;AAGA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,SAAA,GAAY,KAAZ,CAO2D,CAEzD;;AACA,cAAI,KAAKhf,qBAAL,CAA2B0E,gBAA/B,EAAiD;AAC/C,iBAAK5E,MAAL,CAAYwB,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;AACF;;;;qCAEO;AACN,iBAAK2f,YAAL,GAAoB,KAAKtC,WAAL,CAAiBY,KAAjB,CAClB;AACE7Y,mBAAK,EAAE,CAAC,EAAD,EAAK,0DAAWyL,QAAhB,CADT;AAEE3L,sBAAQ,EAAE,CACR,EADQ,EAER,CACE,0DAAW2L,QADb,EAEE,0DAAWqO,SAAX,CAAqB,CAArB,CAFF,EAGE,0DAAWC,OAAX,CACE,iEADF,CAHF,CAFQ,CAFZ;AAYEC,8BAAgB,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWvO,QAAZ,CAAL;AAZpB,aADkB,EAelB;AAAEwO,uBAAS,EAAE;AAAb,aAfkB,CAApB;AAiBD;AAED;;;;;;qCAOW;AAAA;;AACT,iBAAK3B,SAAL,GAAiB,IAAjB;;AAEA,gBAAI,KAAKiC,YAAL,CAAkBL,KAAtB,EAA6B;AAC3B,mBAAK7B,OAAL,GAAe,IAAf;AACA,mBAAKH,WAAL,CACGsC,QADH,CACY,KAAKD,YAAL,CAAkBte,KAD9B,EAEGN,IAFH,CAEQ,8DAFR,EAGGnB,SAHH,CAII,UAAAiQ,IAAI,EAAI;AACN,uBAAI,CAAC/H,mBAAL,CAAyB4P,OAAzB,CACE,+EADF;;AAGA,uBAAI,CAAClZ,MAAL,CAAYwB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD,eATL,EAUI,UAAAiI,KAAK,EAAI;AACP,uBAAI,CAACH,mBAAL,CAAyBG,KAAzB,CAA+BA,KAA/B;;AACA,uBAAI,CAACwV,OAAL,GAAe,KAAf;AACD,eAbL;AAeD;AACF;;;8BAzBO;AACN,mBAAO,KAAKkC,YAAL,CAAkBjB,QAAzB;AACD;;;;;;;yBA7CUgB,iB,EAAiB,2H,EAAA,uH,EAAA,sK,EAAA,wI,EAAA,sI;AAAA,O;;;cAAjBA,iB;AAAiB,0C;AAAA,iB;AAAA,gB;AAAA,68B;AAAA;AAAA;ACtB9B;;AACE;;AAAiC;AAAA,qBAAY,IAAAf,QAAA,EAAZ;AAAsB,aAAtB;;AAC/B;;AACE;;AACE;;AACE;;AACE;;AAAI;;;;AAAqC;;AAC3C;;AACA;;AACE;;AACE;;AAEA;;AAGF;;AACF;;AAEA;;AACE;;AACE;;AAEA;;AAYA;;AACJ;;AAEA;;AACE;;AACE;;AAEA;;AAQA;;AACJ;;AAEA;;AACE;;AAEE;;AACA;;AACF;;AACA;;AAEE;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;AAlEQ;;AAAA;;AAKQ;;AAAA;;AAGwB;;AAAA;;AAEkB;;AAAA;;AACjC;;AAAA;;AAOe;;AAAA;;AAEQ;;AAAA;;AAC7B;;AAAA;;AAgBqB;;AAAA;;AAEgB;;AAAA;;AACrC;;AAAA;;AAYgD;;AAAA,8FAAoB,SAApB,EAAoB,2BAApB;;AAE/C;;AAAA;;AAIN;;AAAA;;;;;;;;;;wEDrCDe,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACTle,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeoB;;AACI;;AAAM;;AAAkB;;AAC5B;;;;;;AADU;;AAAA;;;;;;AAEV;;AACI;;AAAM;;AAAoB;;AAC9B;;;;;;AADU;;AAAA;;;;;;AAiBA;;AACE;;AACF;;;;;;AAcA;;;AD/C9B;;;;;;;UAYame,6B;AASX,+CAAoBjX,WAApB,EAAwD;AAAA;;AAApC,eAAAA,WAAA,GAAAA,WAAA;AARpB,eAAA4U,uBAAA,GAA0B,2EAA1B;AAKA,eAAAsC,WAAA,GAAc,IAAd;AACA,eAAArC,OAAA,GAAU,KAAV;AAE0D;;;;qCAElD;AACN,iBAAKsC,gBAAL,GAAwB,IAAI,wDAAJ,CAAc;AACpC3a,mBAAK,EAAE,IAAI,0DAAJ,CACL,IADK,EAEL,CAAC,0DAAWyL,QAAZ,EAAsB,0DAAWzL,KAAjC,CAFK,EAGL,KAAK4a,eAHA;AAD6B,aAAd,CAAxB;AAOD;;;2CAEgBC,I,EAAM;AAAA;;AACrB,gBAAIA,IAAI,CAACX,KAAT,EAAgB;AACd,mBAAKQ,WAAL,GAAmB,IAAnB;AACA,mBAAKrC,OAAL,GAAe,IAAf;AACA,mBAAK7U,WAAL,CACGsX,oBADH,CACwB,KAAKH,gBAAL,CAAsB1e,KAD9C,EAEGzB,SAFH,CAGI,UAAAiQ,IAAI,EAAI;AACN,uBAAI,CAACkQ,gBAAL,CAAsBP,KAAtB;;AACA,uBAAI,CAACtX,YAAL,GAAoB,IAApB;AACA,uBAAI,CAACuX,cAAL,GACE,iFADF;AAEA,uBAAI,CAAChC,OAAL,GAAe,KAAf;AACA0C,0BAAU,CAAC,YAAM;AACf,yBAAI,CAAC1C,OAAL,GAAe,KAAf;AACD,iBAFS,EAEP,IAFO,CAAV;AAGD,eAZL,EAaI,UAAAM,GAAG,EAAI;AACL,uBAAI,CAAC0B,cAAL,GAAsB,IAAtB;AACA,uBAAI,CAACvX,YAAL,GAAoB,mBAApB;AACA,uBAAI,CAACuV,OAAL,GAAe,KAAf;AACD,eAjBL;AAmBD,aAtBD,MAsBO;AACL,mBAAKqC,WAAL,GAAmB,KAAnB;AACD;AACF;;;;;;;yBA/CUD,6B,EAA6B,sK;AAAA,O;;;cAA7BA,6B;AAA6B,mD;AAAA,iB;AAAA,e;AAAA,2xB;AAAA;AAAA;ACjB1C;;AACM;;AACE;;AACI;;AACI;;AACE;;AAAI;;AAAe;;AAErB;;AACA;;AACI;;AACI;;AAA4G;;AAC5G;;AAAiF;;AACjF;;AAA6E;;AAC7E;;AACJ;;AACA;;AAGA;;AAIA;;AAA+C;AAAA,qBAAY,IAAAO,gBAAA,sBAAZ;AAA8C,aAA9C;;AAU3C;;AACI;;AACE;;AAEA;;AAGF;;AACF;;AASF;;AACI;;AAEE;;AACA;;AACF;;AACJ;;AAEJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA/CgD;;AAAA;;AAGE;;AAAA;;AAId;;AAAA;;AAWoB;;AAAA;;AAGf;;AAAA;;AAc0C;;AAAA,8FAAoB,SAApB,EAAoB,2BAApB;;AAE/C;;AAAA;;;;;;;;;wEDnCvBP,6B,EAA6B;gBANzC,uDAMyC;iBAN/B;AACTre,oBAAQ,EAAE,4BADD;AAETC,uBAAW,EAAE,yCAFJ;AAGTC,qBAAS,EAAE,CAAC,yCAAD,CAHF;AAIT0U,2BAAe,EAAE,sEAAwBiK;AAJhC,W;AAM+B,U;;;;;;;;;;;;;;;;;;;;;;AEjB1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACSoB;;AACI;;AACJ;;;;;;AAEA;;AACI;;AACJ;;;;;;AAIQ;;AACI;;AAAM;;AAAkB;;AAC5B;;;;;;AADU;;AAAA;;;;;;AAEV;;AACI;;AAAM;;AAAoB;;AAC9B;;;;;;AADU;;AAAA;;;;;;AASF;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AACA;;AACI;;AAGJ;;;;;;AAXJ;;AACI;;AAGA;;AAGA;;AAMJ;;;;;;AAZe;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAgBX;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;AANJ;;AACI;;AAGA;;AAGJ;;;;;;AANe;;AAAA;;AAGA;;AAAA;;;;;;AAWf;;;;;;;;;;;;AAnDZ;;AACI;;AACI;;AAGA;;AAGJ;;AAEA;;AACI;;AACI;;AAEA;;AAcJ;;AACJ;;AAEA;;AACI;;AACI;;AAGA;;AAQJ;;AAEJ;;AAEA;;AACI;;AAEI;;AACA;;AACJ;;AAEJ;;AACJ;;;;;;AAtDoC;;AAAA;;AAGE;;AAAA;;AAMF;;AAAA;;AAEpB;;AAAA;;AACC;;AAAA;;AAkBmB;;AAAA;;AAGpB;;AAAA;;AACC;;AAAA;;AAa8C;;AAAA,+FAAoB,SAApB,EAAoB,8BAApB;;AAE7C;;AAAA;;;AD7DtC;;;;;;;UAYaC,8B;AAaX,gDACU1X,WADV,EAEUpK,MAFV,EAGU0E,KAHV,EAIU4b,EAJV,EAIyB;AAAA;;AAAA;;AAHf,eAAAlW,WAAA,GAAAA,WAAA;AACA,eAAApK,MAAA,GAAAA,MAAA;AACA,eAAA0E,KAAA,GAAAA,KAAA;AACA,eAAA4b,EAAA,GAAAA,EAAA;AAhBV,eAAAtB,uBAAA,GAA0B,+EAA1B;AAKA,eAAAC,OAAA,GAAU,KAAV;AACA,eAAAC,SAAA,GAAY,KAAZ;AAIA,eAAA6C,gBAAA,GAAmB,IAAnB;AAQE,eAAKC,YAAL,GAAoB,MAApB;AACA,eAAKtd,KAAL,CAAW6I,MAAX,CAAkBnM,SAAlB,CAA4B,UAAAmM,MAAM,EAAI;AACpC,mBAAI,CAAC0U,UAAL,GAAkB1U,MAAM,CAAClG,KAAzB;AACA,mBAAI,CAAC+X,GAAL,GAAW7R,MAAM,CAAC6R,GAAlB;;AACA,mBAAI,CAAC8C,WAAL;AACD,WAJD;AAKD;;;;qCAEO;AACN,iBAAKC,IAAL;AACD;;;wCAEa;AAAA;;AACZ,iBAAKH,YAAL,GAAoB,UAApB;AACA,iBAAK5X,WAAL,CACGgY,kBADH,CACsB;AAAE/a,mBAAK,EAAE,KAAK4a,UAAd;AAA0B7C,iBAAG,EAAE,KAAKA;AAApC,aADtB,EAEGhe,SAFH,CAGI,UAAAiQ,IAAI,EAAI;AACN,qBAAI,CAAC2Q,YAAL,GAAoB,UAApB;AACD,aALL,EAMI,UAAAzC,GAAG,EAAI;AACL,qBAAI,CAACyC,YAAL,GAAoB,aAApB;AACD,aARL;AAUD;;;iCAEM;AACL,iBAAKK,iBAAL,GAAyB,KAAK/B,EAAL,CAAQb,KAAR,CACvB;AACEpY,mBAAK,EAAE,CAAC,KAAK4a,UAAN,CADT;AAEE7C,iBAAG,EAAE,CAAC,KAAKA,GAAN,CAFP;AAGE1Y,sBAAQ,EAAE,CACR,EADQ,EAER,CACE,0DAAW2L,QADb,EAEE,0DAAWqO,SAAX,CAAqB,CAArB,CAFF,EAGE,0DAAWC,OAAX,CACE,iEADF,CAHF,CAFQ,CAHZ;AAaEC,8BAAgB,EAAE,CAAC,EAAD,EAAK,CAAC,0DAAWvO,QAAZ,CAAL;AAbpB,aADuB,EAgBvB;AAAEwO,uBAAS,EAAE;AAAb,aAhBuB,CAAzB;AAkBD;;;0CAEe;AAAA;;AACd,iBAAK3B,SAAL,GAAiB,IAAjB;;AACA,gBAAI,KAAKmD,iBAAL,CAAuBvB,KAA3B,EAAkC;AAChC;AACA,mBAAK7B,OAAL,GAAe,IAAf;AAEA,mBAAK7U,WAAL,CACGkY,oBADH,CACwB,KAAKD,iBAAL,CAAuBxf,KAD/C,EAEGzB,SAFH,CAGI,UAAAiQ,IAAI,EAAI;AACN,uBAAI,CAACgR,iBAAL,CAAuBrB,KAAvB;;AACA,uBAAI,CAACe,gBAAL,GAAwB,IAAxB;AACA,uBAAI,CAACrY,YAAL,GAAoB,IAApB;AACA,uBAAI,CAACuX,cAAL,GACE,6EADF;AAEAU,0BAAU,CAAC,YAAM;AACf,yBAAI,CAACV,cAAL,GAAsB,IAAtB;;AACA,yBAAI,CAACjhB,MAAL,CAAYwB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,iBAHS,EAGP,IAHO,CAAV;AAID,eAbL,EAcI,UAAA+d,GAAG,EAAI;AACL,uBAAI,CAAC0B,cAAL,GAAsB,IAAtB;AACA,uBAAI,CAACvX,YAAL,GAAoB,mBAApB;AACA,uBAAI,CAACuV,OAAL,GAAe,KAAf;AACD,eAlBL;AAoBD,aAxBD,MAwBO;AACL,mBAAK8C,gBAAL,GAAwB,KAAxB;AACD;AACF;AAED;;;;;;8BAGQ;AACN,mBAAO,KAAKM,iBAAL,CAAuBnC,QAA9B;AACD;;;;;;;yBAtGU4B,8B,EAA8B,sK,EAAA,uH,EAAA,+H,EAAA,2H;AAAA,O;;;cAA9BA,8B;AAA8B,oD;AAAA,iB;AAAA,e;AAAA,w4B;AAAA;AAAA;ACnB3C;;AACI;;AAAsC;AAAA,qBAAY,IAAAS,aAAA,EAAZ;AAA2B,aAA3B;;AAClC;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAgB;;AACxB;;AAEA;;AAIA;;AAIA;;AAyDJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AA7EU;;AAAA;;AAQgB;;AAAA;;AAIA;;AAAA;;AAID;;AAAA;;;;;;;;;;wEDEZT,8B,EAA8B;gBAN1C,uDAM0C;iBANhC;AACT9e,oBAAQ,EAAE,6BADD;AAETC,uBAAW,EAAE,0CAFJ;AAGTC,qBAAS,EAAE,CAAC,0CAAD,CAHF;AAIT0U,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMgC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnB3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIQ;;AAA2B;;AAAS;;AACpC;;;;;;AAOA;;AAA2B;;AAAI;;AAC/B;;;;;;;;AAQR;;AACE;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AACvC;;AACA;;AAAiC;;AAAa;;AAChD;;AACF;;;ADtBA;;;;;;;UAYa2K,iB;AAGX,qCAAc;AAAA;;AAFG,eAAAtc,QAAA,GAAW,sEAAYC,OAAvB;AACjB,eAAAsc,gBAAA,GAAmB,CAAnB,CACc,CADQ;AACN;;;;qCAER,CAAW;AAEnB;;;;;;4CAIkB;AAChB,gBAAM/W,KAAK,GACT9J,YAAY,CAACC,OAAb,WAAwB,KAAKqE,QAA7B,qBACA,KAAKuc,gBAFP;AAGA,iBAAKA,gBAAL,GAAwBC,MAAM,CAAChX,KAAD,CAA9B;AACD;AAED;;;;;;wCAIc;AACZ,iBAAK+W,gBAAL,GAAwB,CAAxB,CADY,CACe;AAC5B;AAED;;;;;;sCAIYxZ,K,EAA0B;AACpCrH,wBAAY,CAAC2D,OAAb,WAAwB,KAAKW,QAA7B,kBAAoDyc,MAAM,CAAC1Z,KAAK,CAACyC,KAAP,CAA1D;AACD;;;;;;;yBAhCU8W,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,qC;AAAA,gB;AAAA,e;AAAA,kV;AAAA;AAAA;AChB9B;;AACE;;AAAsD;AAAA,qBAAqB,IAAAI,WAAA,QAArB;AAAwC,aAAxC,EAAyC,qBAAzC,EAAyC;AAAA;AAAA,aAAzC;;AACpD;;AACE;;AAIA;;AACF;;AAEA;;AACE;;AAIA;;AACF;;AAEF;;AACF;;AAEA;;;;AApBkG;;AAAA;;AAoBrE;;AAAA;;;;;;;;;;wEDLhBJ,iB,EAAiB;gBAN7B,uDAM6B;iBANnB;AACTxf,oBAAQ,EAAE,cADD;AAETC,uBAAW,EAAE,2BAFJ;AAGTC,qBAAS,EAAE,CAAC,2BAAD,CAHF;AAIT0U,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMmB,U;;;;;;;;;;;;;;;;;;;;AEhB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAQJ;;AACI;;AACJ;;;;;;;;;;AADI;;AAAA;;;;;;AAHR;;AACI;;AAAwB;;AAAU;;AAClC;;AAGJ;;;;;;;;AAJ4B;;AAAA;;AACpB;;AAAA;;;;;;AAbhB;;AACI;;AACI;;AACI;;AACA;;AAGJ;;AACJ;;AACA;;AAEI;;AAOJ;;AACJ;;;;;;AAfsC;;AAAA;;AAO1B;;AAAA;;;;;;AAUZ;;AACI;;AACJ;;;ADrBA;;;;;;;UAWagL,sB;AAGX,wCACS7N,SADT,EAEkC3D,IAFlC,EAE2C;AAAA;;AADlC,eAAA2D,SAAA,GAAAA,SAAA;AACyB,eAAA3D,IAAA,GAAAA,IAAA;AAC9B;;;;qCAEI;AACN,iBAAK2I,WAAL,GAAmB,KAAK3I,IAAL,CAAU2I,WAA7B;AACD;AAED;;;;;;;sCAIS;AACP,iBAAKhF,SAAL,CAAemB,KAAf;AACD;;;mCAEQ,CACP;AACD;;;;;;;yBAtBU0M,sB,EAAsB,sI,EAAA,gEAKvB,wEALuB,C;AAKR,O;;;cALdA,sB;AAAsB,2C;AAAA,iB;AAAA,e;AAAA,iU;AAAA;AAAA;ACnBnC;;AAAI;;AAAiB;;AACrB;;AACA;;AAAsF;;AACtF;;AACA;;AAEA;;;;AAqBA;;;;AAIA;;AACI;;AAAmB;AAAA,qBAAS,IAAAtM,SAAA,EAAT;AAAoB,aAApB;;AAAuD;;AAAK;;AACnF;;;;AA3BO;;AAAA;;AAqBF;;AAAA;;;;;;;;;;;wEDRQsM,sB,EAAsB;gBANlC,uDAMkC;iBANxB;AACT7f,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD,CAHF;AAIT0U,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMwB,U;;;;;;oBAK9B,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;AExBZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeQ;;AAAuC;;AAAqB;;;;;;AAArB;;AAAA;;;;UDJlCiL,oB;AACX,sCACS9N,SADT,EAEkC3D,IAFlC,EAGS0R,gBAHT,EAG2C;AAAA;;AAFlC,eAAA/N,SAAA,GAAAA,SAAA;AACyB,eAAA3D,IAAA,GAAAA,IAAA;AACzB,eAAA0R,gBAAA,GAAAA,gBAAA;AAGT,eAAA3N,WAAA,GAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAChC,0DAAW/C,QADqB,CAEhC;AAFgC,WAApB,CAAd;AAFI;;;;4CAOc;AAChB,mBAAO,KAAK+C,WAAL,CAAiBc,QAAjB,CAA0B,UAA1B,IACH,gBADG,GAEH,KAAKd,WAAL,CAAiBc,QAAjB,CAA0B,OAA1B,IACA,mBADA,GAEA,EAJJ;AAKD;;;mCAEQ,CACP;AACD;;;sCAEQ;AACP,iBAAKlB,SAAL,CAAemB,KAAf;AACD;;;uCAEgB;AACf,iBAAK4M,gBAAL,CAAsBC,YAAtB,CAAmC,KAAK3R,IAAxC;AACD;;;;;;;yBA9BUyR,oB,EAAoB,sI,EAAA,gEAGrB,wEAHqB,C,EAGN,+J;AAAA,O;;;cAHdA,oB;AAAoB,0C;AAAA,iB;AAAA,e;AAAA,ghB;AAAA;AAAA;ACXjC;;AACE;;AAAqB;;AAAiB;;AAEtC;;AAAiC;AAAA;AAAA;;AAS/B;;AACE;;AACE;;AAAyE;AAAA;AAAA;;AAAzE;;AACA;;AACF;;AACF;;AAEA;;AACE;;AAA2H;AAAA,qBAAS,IAAAxM,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAI;;AACtJ;;AAAmB;AAAA,qBAAS,IAAAC,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AAC/D;;AACA;;AACF;;AACF;;;;;;AAXiF;;AAAA;;AAC9D;;AAAA;;AAKuC;;AAAA,yFAAe,UAAf,EAAe,UAAf,EAAe,kBAAf,EAAe,CAAf;;;;;;;;;wEDT7CuM,oB,EAAoB;gBALhC,uDAKgC;iBALtB;AACT9f,oBAAQ,EAAE,mBADD;AAETC,uBAAW,EAAE,gCAFJ;AAGTC,qBAAS,EAAE,CAAC,gCAAD;AAHF,W;AAKsB,U;;;;;;oBAG5B,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;AEdZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASa+f,uB;AACX,yCACSjO,SADT,EAEkC3D,IAFlC,EAGS0R,gBAHT,EAG2C;AAAA;;AAFlC,eAAA/N,SAAA,GAAAA,SAAA;AACyB,eAAA3D,IAAA,GAAAA,IAAA;AACzB,eAAA0R,gBAAA,GAAAA,gBAAA;AACL;;;;sCAEK;AACP,iBAAK/N,SAAL,CAAemB,KAAf;AACD;;;0CAEY;AACX,iBAAK4M,gBAAL,CAAsBG,eAAtB,CAAsC,KAAK7R,IAAL,CAAU1T,EAAhD;AACD;;;;;;;yBAbUslB,uB,EAAuB,sI,EAAA,gEAGxB,wEAHwB,C,EAGT,+J;AAAA,O;;;cAHdA,uB;AAAuB,6C;AAAA,iB;AAAA,e;AAAA,0N;AAAA;AAAA;ACTpC;;AACE;;AAAqB;;AAErB;;AACA;;AACE;;AACA;;AACA;;AACA;;AACF;;AAEA;;AACE;;AAA0C;AAAA,qBAAS,IAAAvM,aAAA,EAAT;AAAwB,aAAxB;;AAA0B;;AAAM;;AAC1E;;AAAmB;AAAA,qBAAS,IAAAH,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AAC/D;;AACF;;;;AAVI;;AAAA;;AAEA;;AAAA;;AAKmB;;AAAA;;;;;;;;;wEDHV0M,uB,EAAuB;gBALnC,uDAKmC;iBALzB;AACTjgB,oBAAQ,EAAE,sBADD;AAETC,uBAAW,EAAE,mCAFJ;AAGTC,qBAAS,EAAE,CAAC,mCAAD;AAHF,W;AAKyB,U;;;;;;oBAG/B,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;;;AEZZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACeQ;;AAAuC;;AAAqB;;;;;;AAArB;;AAAA;;;;UDNlCigB,qB;AACX,uCACSnO,SADT,EAEkC3D,IAFlC,EAGS0R,gBAHT,EAG2C;AAAA;;AAFlC,eAAA/N,SAAA,GAAAA,SAAA;AACyB,eAAA3D,IAAA,GAAAA,IAAA;AACzB,eAAA0R,gBAAA,GAAAA,gBAAA;AAGT,eAAA3N,WAAA,GAAc,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,CAChC,0DAAW/C,QADqB,CAEhC;AAFgC,WAApB,CAAd;AAFI;;;;4CAOc;AAChB,mBAAO,KAAK+C,WAAL,CAAiBc,QAAjB,CAA0B,UAA1B,IACH,gBADG,GAEH,KAAKd,WAAL,CAAiBc,QAAjB,CAA0B,OAA1B,IACA,mBADA,GAEA,EAJJ;AAKD;;;mCAEQ,CACP;AACD;;;sCAEQ;AACP,iBAAKlB,SAAL,CAAemB,KAAf;AACD;;;qCAEO;AACN,iBAAK4M,gBAAL,CAAsBK,eAAtB,CAAsC,KAAK/R,IAA3C;AACD;;;;;;;yBA9BU8R,qB,EAAqB,sI,EAAA,gEAGtB,wEAHsB,C,EAGP,+J;AAAA,O;;;cAHdA,qB;AAAqB,2C;AAAA,iB;AAAA,e;AAAA,ghB;AAAA;AAAA;ACTlC;;AACE;;AAAqB;;AAAc;;AAEnC;;AAAiC;AAAA;AAAA;;AAS/B;;AACE;;AACE;;AAAyE;AAAA;AAAA;;AAAzE;;AACA;;AACF;;AACF;;AAEA;;AACE;;AAA0F;AAAA,qBAAS,IAAAhM,QAAA,EAAT;AAAmB,aAAnB;;AACzD;;AAAI;;AACrC;;AAAmB;AAAA,qBAAS,IAAAZ,SAAA,EAAT;AAAoB,aAApB;;AAAoC;;AAAM;;AAC/D;;AACF;;AACF;;;;;;AAXiF;;AAAA;;AAC9D;;AAAA;;AAKM;;AAAA,yFAAe,UAAf,EAAe,UAAf,EAAe,kBAAf,EAAe,CAAf;;;;;;;;;wEDXZ4M,qB,EAAqB;gBALjC,uDAKiC;iBALvB;AACTngB,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKuB,U;;;;;;oBAG7B,oD;qBAAO,wmD;;AAAE;;;;;;AACrD;;AAAgC;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAIhC;;AAAkF;;AAAc;;;;;;;;;;AAChG;;AACE;;AACE;;AACF;;AACF;;;;;;AAHK;;AAAA;;AACD;;AAAA;;;;;;AAOJ;;AAAkF;;AAAY;;;;;;AAC9F;;AAAiC;;;;AAAkC;;;;;;AAAlC;;AAAA;;;;;;AAIjC;;AAAkF;;AAClF;;;;;;AACA;;AAAiC;;;;AAAmC;;;;;;AAAnC;;AAAA;;;;;;AAIjC;;AAAkF;;AAClF;;;;;;AACA;;AAAiC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAMjC;;AAAkE;;AAAO;;;;;;;;AAEzE;;AACE;;AAA8D;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAC5D;;AAA4B;;AAAI;;AAClC;;AAEA;;AACE;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAA8B;;AAAM;;AACtC;;AAEA;;AACE;;AAAuC;;AAAM;;AAC/C;;AAEF;;;;;;AAJiE;;AAAA;;;;;;AAOnE;;;;;;AACA;;;;;;;;UD7DSmgB,sB;AAWX,wCACSpQ,UADT,EAES8E,MAFT,EAGSgL,gBAHT,EAG2C;AAAA;;AAFlC,eAAA9P,UAAA,GAAAA,UAAA;AACA,eAAA8E,MAAA,GAAAA,MAAA;AACA,eAAAgL,gBAAA,GAAAA,gBAAA;AAbT,eAAA3K,gBAAA,GAAmB,CACjB,gBADiB,EAEjB,SAFiB,EAGjB,UAHiB,EAIjB,aAJiB,EAKjB,SALiB,CAAnB;AAcI;;;;qCAMO;AACT,iBAAKG,QAAL;AACD;;;oCAES;AACR,iBAAKA,QAAL;AACD;;;oCAES;AAAA;;AACR,gBAAMvD,SAAS,GAAG,KAAK+C,MAAL,CAAY7K,IAAZ,CAAiB,8IAAjB,EAAuC;AACvDmE,kBAAI,EAAE;AAAEyD,yBAAS,EAAE;AAAb;AADiD,aAAvC,CAAlB;AAIAE,qBAAS,CAACiE,WAAV,GAAwB7X,SAAxB,CAAkC,UAAAyY,MAAM,EAAI;AAC1C,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,uBAAI,CAAC3S,OAAL;AACD;AACF,aAJD;AAKD;;;mCAEQ4O,C,EAAWnY,E,EAAY2lB,c,EAAwB;AAAA;;AACtD,iBAAK3lB,EAAL,GAAUA,EAAV;AACA,gBAAMqX,SAAS,GAAG,KAAK+C,MAAL,CAAY7K,IAAZ,CAAiB,iJAAjB,EAAwC;AACxDmE,kBAAI,EAAE;AAAE1T,kBAAE,EAAEA,EAAN;AAAU2lB,8BAAc,EAAEA;AAA1B;AADkD,aAAxC,CAAlB;AAIAtO,qBAAS,CAACiE,WAAV,GAAwB7X,SAAxB,CAAkC,UAAAyY,MAAM,EAAI;AAC1C,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,uBAAI,CAAC3S,OAAL;AACD;AACF,aAJD;AAKD;;;qCAEU4O,C,EAAWnY,E,EAAY2lB,c,EAAwB;AAAA;;AACxD,iBAAK3lB,EAAL,GAAUA,EAAV;AACA,gBAAMqX,SAAS,GAAG,KAAK+C,MAAL,CAAY7K,IAAZ,CAAiB,uJAAjB,EAA0C;AAC1DmE,kBAAI,EAAE;AAAE1T,kBAAE,EAAEA,EAAN;AAAU2lB,8BAAc,EAAEA;AAA1B;AADoD,aAA1C,CAAlB;AAIAtO,qBAAS,CAACiE,WAAV,GAAwB7X,SAAxB,CAAkC,UAAAyY,MAAM,EAAI;AAC1C,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB,uBAAI,CAAC3S,OAAL;AACD;AACF,aAJD;AAKD;;;qCAEiB;AAAA;;AAChB,iBAAK4T,UAAL,GAAkB,IAAIC,iBAAJ,CAChB,KAAKgI,gBADW,EAEhB,KAAK/H,SAFW,EAGhB,KAAKC,IAHW,CAAlB;AAKA,mEAAU,KAAK3L,MAAL,CAAYgG,aAAtB,EAAqC,OAArC,EACG/S,IADH,CACQ,oEAAa,GAAb,CADR,EAC2B,6EAD3B,EAEGnB,SAFH,CAEa,YAAM;AACf,kBAAI,CAAC,OAAI,CAAC0Z,UAAV,EAAsB;AACpB;AACD;;AACD,qBAAI,CAACA,UAAL,CAAgBxL,MAAhB,GAAyB,OAAI,CAACA,MAAL,CAAYgG,aAAZ,CAA0BzS,KAAnD;AACD,aAPH;AAQD;;;;;;;yBAjFUwgB,sB,EAAsB,gI,EAAA,mI,EAAA,+J;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA;AAAA;4EAiBtB,wE,EAAc,I;;4EACd,8D,EAAS,I;;;;;;;;;;;;;;;;;;ACtCtB;;AACE;;AAGF;;AAEA;;AACE;;AAAyC;AAAA,qBAAS,IAAAlI,OAAA,EAAT;AAAkB,aAAlB;;AACvC;;AAA0C;;AAAG;;AAAY;;AAC3D;;AACA;;AAAyC;AAAA,qBAAS,IAAAjU,OAAA,EAAT;AAAkB,aAAlB;;AACvC;;AAA+B;;AAAO;;AAAY;;AACpD;;AACF;;AAGA;;AAEE;;AACE;;AACE;;AACF;;AACF;;AAEA;;AAEE;;AACE;;AACA;;AACF;;AAEA;;AACE;;AACA;;AAMF;;AAEA;;AACE;;AACA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAEA;;AACE;;AAEA;;AACF;;AAIA;;AACE;;AAEA;;AAeF;;AAEA;;AACA;;AACF;;AAGA;;AACE;;AACF;;AAEA;;AAGF;;;;AApEoB;;AAAA;;AAwDA;;AAAA;;AACP;;AAAA;;AAIa;;AAAA;;AAIE;;AAAA,mHAAyC,WAAzC,EAAyC,CAAzC,EAAyC,UAAzC,EAAyC,EAAzC,EAAyC,iBAAzC,EAAyC,qEAAzC;;;;;;;;;;wEDrEfmc,sB,EAAsB;gBALlC,uDAKkC;iBALxB;AACTrgB,oBAAQ,EAAE,oBADD;AAETC,uBAAW,EAAE,iCAFJ;AAGTC,qBAAS,EAAE,CAAC,iCAAD;AAHF,W;AAKwB,U;;;;;;;;;;kBAiBhC,uD;mBAAU,wE,EAAc;AAAE,wBAAQ;AAAV,a;;;kBACxB,uD;mBAAU,8D,EAAS;AAAE,wBAAQ;AAAV,a;;;kBACnB,uD;mBAAU,Q,EAAU;AAAE,wBAAQ;AAAV,a;;;;;UAiEV6X,iB;;;;;AAcX,mCACSM,gBADT,EAESC,UAFT,EAGSC,KAHT,EAGuB;AAAA;;AAAA;;AAErB;AAJO,kBAAAF,gBAAA,GAAAA,gBAAA;AACA,kBAAAC,UAAA,GAAAA,UAAA;AACA,kBAAAC,KAAA,GAAAA,KAAA;AAhBT,kBAAAC,aAAA,GAAgB,IAAI,oDAAJ,CAAoB,EAApB,CAAhB;AAUA,kBAAAC,YAAA,GAA4B,EAA5B;AACA,kBAAAC,YAAA,GAA4B,EAA5B,CAKuB,CAGrB;;AACA,kBAAKF,aAAL,CAAmBpa,SAAnB,CAA6B;AAAA,mBAAO,QAAKka,UAAL,CAAgBrH,SAAhB,GAA4B,CAAnC;AAAA,WAA7B;;AAJqB;AAKtB;;;;;AAED;oCACO;AAAA;;AACL;AACA,gBAAM0H,kBAAkB,GAAG,CACzB,KAAKN,gBAAL,CAAsBO,UADG,EAEzB,KAAKL,KAAL,CAAWM,UAFc,EAGzB,KAAKL,aAHoB,EAIzB,KAAKF,UAAL,CAAgBQ,IAJS,CAA3B;;AAOA,iBAAKT,gBAAL,CAAsBkI,gBAAtB;;AAEA,mBAAO,iEAAS5H,kBAAT,EAA6BpZ,IAA7B,CACL,2DAAI,YAAM;AACR;AACA,qBAAI,CAACkZ,YAAL,GAAoB,OAAI,CAACJ,gBAAL,CAAsBhK,IAAtB,CACjBxF,KADiB,GAEjByD,MAFiB,CAEV,UAACwF,SAAD,EAA0B;AAChC,oBAAMkH,SAAS,GAAG,CAChBlH,SAAS,CAACnX,EAAV,GAAemX,SAAS,CAACwO,cADT,EAEhB/X,WAFgB,EAAlB;AAGA,uBAAOyQ,SAAS,CAACpS,OAAV,CAAkB,OAAI,CAAC0F,MAAL,CAAY/D,WAAZ,EAAlB,MAAiD,CAAC,CAAzD;AACD,eAPiB,CAApB,CAFQ,CAWR;;AACA,kBAAM0Q,UAAU,GAAG,OAAI,CAACC,QAAL,CAAc,OAAI,CAACT,YAAL,CAAkB5P,KAAlB,EAAd,CAAnB,CAZQ,CAcR;;;AACA,kBAAMsQ,UAAU,GAAG,OAAI,CAACb,UAAL,CAAgBrH,SAAhB,GAA4B,OAAI,CAACqH,UAAL,CAAgBpH,QAA/D;AACA,qBAAI,CAACwH,YAAL,GAAoBO,UAAU,CAACG,MAAX,CAClBD,UADkB,EAElB,OAAI,CAACb,UAAL,CAAgBpH,QAFE,CAApB;AAIA,qBAAO,OAAI,CAACwH,YAAZ;AACD,aArBD,CADK,CAAP;AAwBD;;;uCAEY,CAAE;AAEf;;;;mCACSrK,I,EAAiB;AAAA;;AACxB,gBAAI,CAAC,KAAKkK,KAAL,CAAWc,MAAZ,IAAsB,KAAKd,KAAL,CAAWe,SAAX,KAAyB,EAAnD,EAAuD;AACrD,qBAAOjL,IAAP;AACD;;AAED,mBAAOA,IAAI,CAAC4J,IAAL,CAAU,UAACsB,CAAD,EAAIC,CAAJ,EAAU;AACzB,kBAAIC,SAAS,GAA2B,EAAxC;AACA,kBAAIC,SAAS,GAA2B,EAAxC;;AAEA,sBAAQ,OAAI,CAACnB,KAAL,CAAWc,MAAnB;AACE,qBAAK,IAAL;AAAA,+BAC2B,CAACE,CAAC,CAAC5e,EAAH,EAAO6e,CAAC,CAAC7e,EAAT,CAD3B;AACG8e,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,gBAAL;AAAA,+BAC2B,CAACH,CAAC,CAAC+G,cAAH,EAAmB9G,CAAC,CAAC8G,cAArB,CAD3B;AACG7G,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,KAAL;AAAA,+BAC2B,CAACH,CAAC,CAACxX,GAAH,EAAQyX,CAAC,CAACzX,GAAV,CAD3B;AACG0X,2BADH;AACcC,2BADd;AAEE;;AACF,qBAAK,SAAL;AAAA,+BAC2B,CAACH,CAAC,CAACI,OAAH,EAAYH,CAAC,CAACG,OAAd,CAD3B;AACGF,2BADH;AACcC,2BADd;AAEE;AAZJ;;AAeA,kBAAME,MAAM,GAAGC,KAAK,CAAC,CAACJ,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AACA,kBAAMK,MAAM,GAAGD,KAAK,CAAC,CAACH,SAAF,CAAL,GAAoBA,SAApB,GAAgC,CAACA,SAAhD;AAEA,qBACE,CAACE,MAAM,GAAGE,MAAT,GAAkB,CAAC,CAAnB,GAAuB,CAAxB,KAA8B,OAAI,CAACvB,KAAL,CAAWe,SAAX,KAAyB,KAAzB,GAAiC,CAAjC,GAAqC,CAAC,CAApE,CADF;AAGD,aAzBM,CAAP;AA0BD;;;8BA7FS;AACR,mBAAO,KAAKd,aAAL,CAAmB3Y,KAA1B;AACD,W;4BAEUyM,M,EAAgB;AACzB,iBAAKkM,aAAL,CAAmBrU,IAAnB,CAAwBmI,MAAxB;AACD;;;;QAToC,mE;;;;;;;;;;;;;;;;;AExGvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAEakU,S,GACX,mBACS7lB,EADT,EAES2lB,cAFT,EAGS3G,OAHT,EAIS5X,GAJT,EAIoB;AAAA;;AAHX,aAAApH,EAAA,GAAAA,EAAA;AACA,aAAA2lB,cAAA,GAAAA,cAAA;AACA,aAAA3G,OAAA,GAAAA,OAAA;AACA,aAAA5X,GAAA,GAAAA,GAAA;AACL,O;;UAMO0e,gB;;;;;;;gCACLlU,I,EAAS;AACb,gBAAMmU,EAAE,GAAG,OAAX;AACA,gBAAMC,iBAAiB,GAAGpU,IAAI,CAACoN,OAAL,CAAarR,OAAb,CAAqBoY,EAArB,EAAyB,EAAzB,CAA1B;AACA,mBAAO,IAAIF,SAAJ,CACLjU,IAAI,CAAC5R,EADA,EAEL4R,IAAI,CAAC+T,cAFA,EAGL,IAAI5iB,IAAJ,CAASijB,iBAAT,CAHK,EAILpU,IAAI,CAACxK,GAJA,CAAP;AAMD;;;;;;;yBAVU0e,gB;AAAgB,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;wEAEDA,gB,EAAgB;gBAH5B,wDAG4B;iBAHjB;AACVhgB,sBAAU,EAAE;AADF,W;AAGiB,U;;;;;;;;;;;;;;;;;;ACd7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUamgB,gB;AAUX,kCACU3Q,UADV,EAEUqK,OAFV,EAEmC;AAAA;;AADzB,eAAArK,UAAA,GAAAA,UAAA;AACA,eAAAqK,OAAA,GAAAA,OAAA;AAXO,eAAAtX,OAAA,GAAU,sEAAYC,MAAZ,GAAqB,aAA/B;AAEjB,eAAA2V,UAAA,GAA2C,IAAI,oDAAJ,CACzC,EADyC,CAA3C;AAUI;;;;0CAMY;AACd,mBAAO,KAAK+B,UAAZ;AACD;;;6CAEe;AAAA;;AACd,iBAAK1K,UAAL,CACG1B,GADH,WACuB,KAAKvL,OAD5B,QAEGzD,IAFH,CAEQ,2DAAI,UAAC8O,IAAD;AAAA,qBAAiBA,IAAI,CAAC5F,GAAL,CAAS,UAAA8D,IAAI;AAAA,uBAAI,OAAI,CAAC+N,OAAL,CAAavK,KAAb,CAAmBxD,IAAnB,CAAJ;AAAA,eAAb,CAAjB;AAAA,aAAJ,CAFR,EAGGnO,SAHH,CAGa,UAAAiQ,IAAI,EAAI;AACjB,qBAAI,CAACuK,UAAL,CAAgBzU,IAAhB,CAAqBkK,IAArB;AACD,aALH;AAMD,W,CAED;;;;uCACayD,S,EAAoB;AAAA;;AAC/B,iBAAK7B,UAAL,CAAgBtM,IAAhB,WAAwB,KAAKX,OAA7B,QAAyC8O,SAAzC,EAAoD1T,SAApD,CAA8D,UAAAiQ,IAAI,EAAI;AACpE,qBAAI,CAACsM,UAAL,GAAkB7I,SAAlB;AACD,aAFD;AAGD,W,CAED;;;;0CACgBA,S,EAAoB;AAAA;;AAClC,iBAAK7B,UAAL,CACGvB,GADH,WACU,KAAK1L,OADf,cAC0B8O,SAAS,CAACnX,EADpC,QAC2CmX,SAD3C,EAEG1T,SAFH,CAEa,UAAAiQ,IAAI,EAAI;AACjB,qBAAI,CAACsM,UAAL,GAAkB7I,SAAlB;AACD,aAJH;AAKD,W,CAED;;;;0CACgBnX,E,EAAU;AACxB,iBAAKsV,UAAL,qBAA0B,KAAKjN,OAA/B,cAA0CrI,EAA1C,QAAiDyD,SAAjD;AACD;;;8BApCO;AACN,mBAAO,KAAKwa,UAAL,CAAgB/Y,KAAvB;AACD;;;;;;;yBAjBU+gB,gB,EAAgB,uH,EAAA,0H;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;wEAEDA,gB,EAAgB;gBAH5B,wDAG4B;iBAHjB;AACVngB,sBAAU,EAAE;AADF,W;AAGiB,U;;;;;;;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,UAAM7F,MAAM,GAAW,EAAvB;;UAMaimB,6B;;;;;cAAAA;;;;2BAAAA,6B;AAA6B,S;AAAA,kBAH/B,CAAC,6DAAa1G,QAAb,CAAsBvf,MAAtB,CAAD,CAG+B,EAF9B,4DAE8B;;;;4HAA7BimB,6B,EAA6B;AAAA;AAAA,oBAF9B,4DAE8B;AAAA,S;AAFlB,O;;;;;wEAEXA,6B,EAA6B;gBAJzC,sDAIyC;iBAJhC;AACR/kB,mBAAO,EAAE,CAAC,6DAAaqe,QAAb,CAAsBvf,MAAtB,CAAD,CADD;AAERF,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAIgC,U;;;;;;;;;;;;;;;;;;ACT1C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoBaomB,sB;;;;;cAAAA;;;;2BAAAA,sB;AAAsB,S;AAAA,kBAFxB,CAAC,4DAAD,EAAe,+FAAf,EAA8C,sEAA9C,CAEwB;;;;4HAAtBA,sB,EAAsB;AAAA,yBAR/B,0GAQ+B,EAP/B,8GAO+B,EAN/B,uHAM+B,EAL/B,iHAK+B;AALV,oBAGb,4DAHa,EAGC,+FAHD,EAGgC,sEAHhC,CAKU;AAFkC,oBADzD,0GACyD;AAElC,S;AAHD,O;;;;;wEAGrBA,sB,EAAsB;gBAVlC,sDAUkC;iBAVzB;AACRnkB,wBAAY,EAAE,CACZ,0GADY,EAEZ,8GAFY,EAGZ,uHAHY,EAIZ,iHAJY,CADN;AAORjC,mBAAO,EAAE,CAAC,0GAAD,CAPD;AAQRoB,mBAAO,EAAE,CAAC,4DAAD,EAAe,+FAAf,EAA8C,sEAA9C;AARD,W;AAUyB,U;;;;;;;;;;;;;;;;;;AClBnC;AAAA;;;AAAA;AAAA;AAAA;;AAAO,eAASilB,iBAAT,CAA2B3Z,WAA3B,EAA+D;AACpE,eAAO;AACL4Z,qBAAW,EAAE,uBAAM;AACjB,mBAAO5Z,WAAW,CAAC7C,WAAZ,EAAP;AACD,WAHI;AAIL0c,4BAAkB,EAAE,CAAC,cAAD,EAAiB,WAAjB,CAJf;AAKLC,2BAAiB,EAAE,CACjB,gCADiB,EAEjB,kCAFiB;AALd,SAAP;AAUD;;;;;;;;;;;;;;;;;ACbD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,2DAAY;AACVC,WAAG,EAAE,6DADK;AAEV;AACA;AACA;AACAC,oBAAY,EAAE,CACZ,IAAI,6DAAoBC,QAAxB,CAAiC;AAC/BC,wBAAc,EAAE;AADe,SAAjC,CADY;AALJ,OAAZ;;UAaaC,kB;AACX,sCAAc;AAAA;AAAE;;;;uCAEH9a,K,EAAO;AAClB;AACA;AACA,gBAAIA,KAAK,IAAIA,KAAK,CAAC+a,eAAnB,EAAoC;AAClC/a,mBAAK,GAAGA,KAAK,CAAC+a,eAAd;AACD,aALiB,CAOlB;;;AACA,gBAAI,OAAO/a,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,YAAYnM,KAAlD,EAAyD;AACvD,qBAAOmM,KAAP;AACD,aAViB,CAYlB;;;AACA,gBAAIA,KAAK,YAAY,sEAArB,EAAwC;AACtC;AACA,kBAAIA,KAAK,CAACA,KAAN,YAAuBnM,KAA3B,EAAkC;AAChC,uBAAOmM,KAAK,CAACA,KAAb;AACD,eAJqC,CAMtC;;;AACA,kBAAIA,KAAK,CAACA,KAAN,YAAuBI,UAA3B,EAAuC;AACrC,uBAAOJ,KAAK,CAACA,KAAN,CAAYK,OAAnB;AACD,eATqC,CAWtC;;;AACA,kBAAI,OAAOL,KAAK,CAACA,KAAb,KAAuB,QAA3B,EAAqC;AACnC,sDAA+BA,KAAK,CAACE,MAArC,0BAA0DF,KAAK,CAACA,KAAhE;AACD,eAdqC,CAgBtC;;;AACA,qBAAOA,KAAK,CAACK,OAAb;AACD,aA/BiB,CAiClB;;;AACA,mBAAO,IAAP;AACD;;;sCAEWL,K,EAAO;AACjB,gBAAMgb,cAAc,GAAG,KAAKC,YAAL,CAAkBjb,KAAlB,KAA4B,uBAAnD,CADiB,CAGjB;;AACA,gBAAMkb,OAAO,GAAG,iEAAwBF,cAAxB,CAAhB,CAJiB,CAMjB;;;AACA,gBAAI,CAAC,sEAAYrkB,UAAjB,EAA6B;AAC3B+L,qBAAO,CAAC1C,KAAR,CAAcgb,cAAd;AACD,aATgB,CAWjB;;;AACA,6EAAwB;AAAEE,qBAAO,EAAPA;AAAF,aAAxB;AACD;;;;;;;yBArDUJ,kB;AAAkB,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB;;;;;wEAAlBA,kB,EAAkB;gBAD9B;AAC8B,U;;;;;;;;;;;;;;;;;;;;AClB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;;;UAWaK,uB;AACX,2CAAc;AAAA;AAAE;;;;qCAER,CAAW;;;;;;;yBAHRA,uB;AAAuB,O;;;cAAvBA,uB;AAAuB,4C;AAAA,gB;AAAA,e;AAAA,sF;AAAA;AAAA;ACbpC;;AACI;;AACE;;AACF;;AACJ;;;;;;;;;;wEDSaA,uB,EAAuB;gBANnC,uDAMmC;iBANzB;AACT5hB,oBAAQ,EAAE,qBADD;AAETC,uBAAW,EAAE,kCAFJ;AAGTC,qBAAS,EAAE,CAAC,kCAAD,CAHF;AAIT0U,2BAAe,EAAE,sEAAwBC;AAJhC,W;AAMyB,U;;;;;;;;;;;;;;;;;;;;AEbpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOagN,mB;AAEX,qCAAoBC,EAApB,EAA2CxT,SAA3C,EAAwE;AAAA;;AAApD,eAAAwT,EAAA,GAAAA,EAAA;AAAuB,eAAAxT,SAAA,GAAAA,SAAA;AACzCwT,YAAE,CAACxP,aAAH,CAAiByP,KAAjB,CAAuBC,SAAvB,GACE1T,SAAS,CAAC2T,WAAV,KAA0B,IAA1B,GAAiC,OAAjC,GAA2C,MAD7C;AAEAH,YAAE,CAACxP,aAAH,CAAiByP,KAAjB,CAAuBzI,SAAvB,GACEhL,SAAS,CAAC2T,WAAV,KAA0B,IAA1B,GAAiC,KAAjC,GAAyC,KAD3C;AAED;;;;qCACU;AAAA;;AACT,iBAAKC,YAAL,GAAoB,KAAK5T,SAAL,CAAe6T,YAAf,CAA4B/jB,SAA5B,CAClB,UAAC6H,KAAD,EAA4B;AAC1B,qBAAI,CAAC6b,EAAL,CAAQxP,aAAR,CAAsByP,KAAtB,CAA4BC,SAA5B,GACE/b,KAAK,CAACmc,IAAN,KAAe,IAAf,GAAsB,OAAtB,GAAgC,MADlC;AAEA,qBAAI,CAACN,EAAL,CAAQxP,aAAR,CAAsByP,KAAtB,CAA4BzI,SAA5B,GACErT,KAAK,CAACmc,IAAN,KAAe,IAAf,GAAsB,KAAtB,GAA8B,KADhC;AAED,aANiB,CAApB;AAQD;;;wCAEa;AACZ,gBAAI,KAAKF,YAAT,EAAuB;AACrB,mBAAKA,YAAL,CAAkBviB,WAAlB;AACD;AACF;;;;;;;yBAvBUkiB,mB,EAAmB,yH,EAAA,qI;AAAA,O;;;cAAnBA,mB;AAAmB;;;;;wEAAnBA,mB,EAAmB;gBAH/B,uDAG+B;iBAHrB;AACT7hB,oBAAQ,EAAE,OADD,CACS;;AADT,W;AAGqB,U;;;;;;;;;;;;;;;;;;;;;;;;ACPhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;UAMaqiB,Q,GAKX,oBAKQ;AAAA,YAJNnT,OAIM,uEAAF,EAAE;;AAAA;;AAEN,aAAK8E,iBAAL,GAAyB9E,OAAO,CAAC8E,iBAAjC;AACA,aAAKC,mBAAL,GAA2B/E,OAAO,CAAC+E,mBAAnC;AACA,aAAKC,yBAAL,GAAiChF,OAAO,CAACgF,yBAAzC;AACD,O;;;;;;;;;;;;;;;;;ACrBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;UASaoO,I,GACX,cACS3nB,EADT,EAESoH,GAFT,EAGShC,IAHT,EAIS4R,aAJT,EAIgC;AACvBkG,4BALT,EAMS0K,WANT,EAOSC,SAPT,EAQSC,SART,EASS9b,MATT,EAUSiL,UAVT,EAWS+H,OAXT,EAYS5G,IAZT,EAYqB;AAAA;;AAXZ,aAAApY,EAAA,GAAAA,EAAA;AACA,aAAAoH,GAAA,GAAAA,GAAA;AACA,aAAAhC,IAAA,GAAAA,IAAA;AACA,aAAA4R,aAAA,GAAAA,aAAA;AACA,aAAAkG,sBAAA,GAAAA,sBAAA;AACA,aAAA0K,WAAA,GAAAA,WAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAA9b,MAAA,GAAAA,MAAA;AACA,aAAAiL,UAAA,GAAAA,UAAA;AACA,aAAA+H,OAAA,GAAAA,OAAA;AACA,aAAA5G,IAAA,GAAAA,IAAA;AACL,O;;UAMO2P,W;;;;;;;gCACLnW,I,EAAS;AACb,gBAAMmU,EAAE,GAAG,OAAX;AACA,gBAAMC,iBAAiB,GAAGpU,IAAI,CAACoN,OAAL,CAAarR,OAAb,CAAqBoY,EAArB,EAAyB,EAAzB,CAA1B;AAEA,gBAAMiC,eAAe,GAAGpW,IAAI,CAACqF,UAAL,CACrBnJ,GADqB,CACjB,UAAAma,EAAE;AAAA,qBAAIA,EAAE,CAACtC,cAAP;AAAA,aADe,EAErBxX,IAFqB,CAEhB,IAFgB,CAAxB;AAIA,mBAAO,IAAIwZ,IAAJ,CACL/V,IAAI,CAAC5R,EADA,EAEL4R,IAAI,CAACxK,GAFA,EAGLwK,IAAI,CAACxM,IAHA,EAILwM,IAAI,CAACoF,aAJA,EAKLpF,IAAI,CAACsL,sBALA,EAMLtL,IAAI,CAACgW,WANA,EAOLhW,IAAI,CAACiW,SAPA,EAQLjW,IAAI,CAACkW,SARA,EASLlW,IAAI,CAAC5F,MATA,EAULgc,eAVK,EAWL,IAAIjlB,IAAJ,CAASijB,iBAAT,CAXK,EAYLpU,IAAI,CAACwG,IAZA,CAAP;AAcD;;;;;;;yBAvBU2P,W;AAAW,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVjiB,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;AChCxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAEA;;;;;UAMaoiB,Y;;;;;;;oCACDC,K,EAAU;AAClB,gBAAIA,KAAK,KAAK,CAAd,EAAiB,OAAO,SAAP;AAEjB,gBAAMC,CAAC,GAAG,IAAV;AACA,gBAAMC,QAAQ,GAAG,CAAjB;AACA,gBAAMC,EAAE,GAAGD,QAAQ,GAAG,CAAX,GAAe,CAAf,GAAmBA,QAA9B;AACA,gBAAME,KAAK,GAAG,CAAC,OAAD,EAAU,IAAV,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C,EAAoD,IAApD,CAAd;AAEA,gBAAMpQ,CAAC,GAAGqE,IAAI,CAACgM,KAAL,CAAWhM,IAAI,CAAC/N,GAAL,CAAS0Z,KAAT,IAAkB3L,IAAI,CAAC/N,GAAL,CAAS2Z,CAAT,CAA7B,CAAV;AAEA,mBAAOK,UAAU,CAAC,CAACN,KAAK,GAAG3L,IAAI,CAACkM,GAAL,CAASN,CAAT,EAAYjQ,CAAZ,CAAT,EAAyBwQ,OAAzB,CAAiCL,EAAjC,CAAD,CAAV,GAAmD,GAAnD,GAAyDC,KAAK,CAACpQ,CAAD,CAArE;AACD;;;;;;;yBAZU+P,Y;AAAY,O;;;;cAAZA,Y;AAAY;;;;;wEAAZA,Y,EAAY;gBAHxB,kDAGwB;iBAHnB;AACJ9iB,gBAAI,EAAE;AADF,W;AAGmB,U;;;;;;;;;;;;;;;;;;ACRzgEA,UAAMwjB,UAAU,GAAG,CACjB,wEADiB,EAEjB,wEAFiB,EAGjB,oEAHiB,EAIjB,sEAJiB,EAKjB,2FALiB,EAMjB,uEANiB,EAOjB,qEAPiB,EAQjB,6EARiB,EASjB,8EATiB,EAUjB,qEAViB,EAWjB,oEAXiB,EAYjB,qEAZiB,EAajB,2EAbiB,EAcjB,+EAdiB,EAejB,8EAfiB,EAgBjB,oFAhBiB,EAiBjB,2EAjBiB,EAkBjB,oFAlBiB,EAmBjB,yEAnBiB,EAoBjB,uEApBiB,EAqBjB,qEArBiB,EAsBjB,+EAtBiB,EAuBjB,yEAvBiB,EAwBjB,iFAxBiB,EAyBjB,2EAzBiB,EA0BjB,uEA1BiB,EA2BjB,2EA3BiB,EA4BjB,sFA5BiB,EA6BjB,qEA7BiB,CAAnB;;UAuDaC,Y,GACX,sBAAYve,aAAZ,EAA0C;AAAA;;AACxCA,qBAAa,CAACC,QAAd,CACE,4EADF,EAEE,6EAFF,EAGE,yEAHF,EAIE,yEAJF,EAKE,0EALF,EAME,0EANF,EAOE,4EAPF,EAQE,8EARF,EASE,wFATF,EAUE,2EAVF,EAWE,0EAXF,EAYE,0EAZF,EAaE,2EAbF,EAcE,6EAdF,EAeE,+EAfF,EAgBE,8EAhBF,EAiBE,mFAjBF,EAkBE,2EAlBF,EAmBE,yEAnBF;AAqBD,O;;;cAvBUse;;;;2BAAAA,Y,EAAY,uI;AAAA,S;AAAA,mBArBrB,4DAqBqB,EApBrB,0DAoBqB,EAlBrB,mEAkBqB,SAjBlBD,UAiBkB,GAhBrB,mFAgBqB,IAZrB,4DAYqB,EAXrB,0DAWqB,EAVrB,kEAUqB,EARrB,mEAQqB,EAtDvB,wEAsDuB,EArDvB,wEAqDuB,EApDvB,oEAoDuB,EAnDvB,sEAmDuB,EAlDvB,2FAkDuB,EAjDvB,uEAiDuB,EAhDvB,qEAgDuB,EA/CvB,6EA+CuB,EA9CvB,8EA8CuB,EA7CvB,qEA6CuB,EA5CvB,oEA4CuB,EA3CvB,qEA2CuB,EA1CvB,2EA0CuB,EAzCvB,+EAyCuB,EAxCvB,8EAwCuB,EAvCvB,oFAuCuB,EAtCvB,2EAsCuB,EArCvB,oFAqCuB,EApCvB,yEAoCuB,EAnCvB,uEAmCuB,EAlCvB,qEAkCuB,EAjCvB,+EAiCuB,EAhCvB,yEAgCuB,EA/BvB,iFA+BuB,EA9BvB,2EA8BuB,EA7BvB,uEA6BuB,EA5BvB,2EA4BuB,EA3BvB,sFA2BuB,EA1BvB,qEA0BuB,EANrB,mFAMqB;;;;4HAAZC,Y,EAAY;AAAA,yBAdR,kGAcQ,EAda,8EAcb,EAd2B,8GAc3B;AAdkD,oBAPvE,4DAOuE,EANvE,0DAMuE,EAJvE,mEAIuE,EAxCzE,wEAwCyE,EAvCzE,wEAuCyE,EAtCzE,oEAsCyE,EArCzE,sEAqCyE,EApCzE,2FAoCyE,EAnCzE,uEAmCyE,EAlCzE,qEAkCyE,EAjCzE,6EAiCyE,EAhCzE,8EAgCyE,EA/BzE,qEA+ByE,EA9BzE,oEA8ByE,EA7BzE,qEA6ByE,EA5BzE,2EA4ByE,EA3BzE,+EA2ByE,EA1BzE,8EA0ByE,EAzBzE,oFAyByE,EAxBzE,2EAwByE,EAvBzE,oFAuByE,EAtBzE,yEAsByE,EArBzE,uEAqByE,EApBzE,qEAoByE,EAnBzE,+EAmByE,EAlBzE,yEAkByE,EAjBzE,iFAiByE,EAhBzE,2EAgByE,EAfzE,uEAeyE,EAdzE,2EAcyE,EAbzE,sFAayE,EAZzE,qEAYyE,EAFvE,mFAEuE,CAclD;AAhBJ,oBAIjB,4DAJiB,EAKjB,0DALiB,EAMjB,kEANiB,EAQjB,mEARiB,EAtCnB,wEAsCmB,EArCnB,wEAqCmB,EApCnB,oEAoCmB,EAnCnB,sEAmCmB,EAlCnB,2FAkCmB,EAjCnB,uEAiCmB,EAhCnB,qEAgCmB,EA/BnB,6EA+BmB,EA9BnB,8EA8BmB,EA7BnB,qEA6BmB,EA5BnB,oEA4BmB,EA3BnB,qEA2BmB,EA1BnB,2EA0BmB,EAzBnB,+EAyBmB,EAxBnB,8EAwBmB,EAvBnB,oFAuBmB,EAtBnB,2EAsBmB,EArBnB,oFAqBmB,EApBnB,yEAoBmB,EAnBnB,uEAmBmB,EAlBnB,qEAkBmB,EAjBnB,+EAiBmB,EAhBnB,yEAgBmB,EAfnB,iFAemB,EAdnB,2EAcmB,EAbnB,uEAamB,EAZnB,2EAYmB,EAXnB,sFAWmB,EAVnB,qEAUmB,EAUjB,mFAViB,EAWjB,kGAXiB,EAYjB,8EAZiB,EAajB,8GAbiB;AAgBI,S;AAHE,O;;;;;wEAGdA,Y,EAAY;gBAvBxB,sDAuBwB;iBAvBf;AACR1nB,mBAAO,GACL,4DADK,EAEL,0DAFK,EAIL,mEAJK,SAKFynB,UALE,GAML,mFANK,EADC;AASR5mB,wBAAY,EAAE,CAAC,kGAAD,EAAsB,8EAAtB,EAAoC,8GAApC,CATN;AAURjC,mBAAO,GACL,4DADK,EAEL,0DAFK,EAGL,kEAHK,EAKL,mEALK,SAMF6oB,UANE,GAOL,mFAPK,EAQL,kGARK,EASL,8EATK,EAUL,8GAVK;AAVC,W;AAuBe,U;;;;;;;;;;;;;;;;;;;;;;ACrHzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;AAKO,eAASE,uBAAT,CAAiCC,iBAAjC,EAA+D;AACpE,YAAMC,YAAY,GAAGD,iBAAiB,CAACxG,QAAlB,CAA2BxZ,QAA3B,CAAoC7D,KAAzD;AACA,YAAM+d,gBAAgB,GAAG8F,iBAAiB,CAACxG,QAAlB,CAA2BU,gBAA3B,CAA4C/d,KAArE;;AAEA,YAAI,CAAC+d,gBAAD,IAAqB,CAAC+F,YAA1B,EAAwC;AACtCD,2BAAiB,CAACxG,QAAlB,CAA2BU,gBAA3B,CAA4CgG,SAA5C,CAAsD,IAAtD;AACD;;AAED,YAAIhG,gBAAgB,KAAK+F,YAAzB,EAAuC;AACrCD,2BAAiB,CAACxG,QAAlB,CAA2BU,gBAA3B,CAA4CgG,SAA5C,CAAsD;AACpDC,sBAAU,EAAE;AADwC,WAAtD;AAGD,SAJD,MAIO;AACLH,2BAAiB,CAACxG,QAAlB,CAA2BU,gBAA3B,CAA4CgG,SAA5C,CAAsD,IAAtD;AACD;AACF;;;;;;;;;;;;;;;;;ACtBD;AAAe;;;AAAA,+DAA0B,UAA1B;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;AACA;;;AAEA,UAAME,WAAW,GAAG,mBAAO;AAAC;AAAA,0BAAD,CAA3B;;AAEO,UAAMC,WAAW,GAAG;AACzB5gB,eAAO,EAAE,SADgB;AAEzB9F,eAAO,EAAE,KAFgB;AAGzBD,kBAAU,EAAE,KAHa;AAIzBqI,YAAI,EAAE,KAJmB;AAKzBxC,cAAM,EAAE,yBALiB;AAMzB6B,kBAAU,EAAE,EANa;AAOzBvH,gBAAQ,EAAE;AACRC,aAAG,EAAEsmB,WAAW,CAACxmB,OADT;AAER0mB,iBAAO,EAAEF,WAAW,CAACG,YAAZ,CAAyB,eAAzB,CAFD;AAGRC,cAAI,EAAEJ,WAAW,CAACG,YAAZ,CAAyB,aAAzB,CAHE;AAIRE,kBAAQ,EAAEL,WAAW,CAACG,YAAZ,CAAyB,mBAAzB,CAJF;AAKRrnB,mBAAS,EAAEknB,WAAW,CAACG,YAAZ,CAAyBrnB,SAL5B;AAMRwnB,cAAI,EAAEN,WAAW,CAACG,YAAZ,CAAyBG,IANvB;AAORC,sBAAY,EAAEP,WAAW,CAACG,YAAZ,CAAyB,qBAAzB,CAPN;AAQRK,qBAAW,EAAER,WAAW,CAACG,YAAZ,CAAyB,+BAAzB,CARL;AASRM,oBAAU,EAAET,WAAW,CAACU,eAAZ,CAA4B,cAA5B,CATJ;AAURC,oBAAU,EAAEX,WAAW,CAACU,eAAZ,CAA4B,YAA5B,CAVJ;AAWRE,iBAAO,EAAEZ,WAAW,CAACU,eAAZ,CAA4B,SAA5B;AAXD;AAPe,OAApB;;;;;;;;;;;;;;;;ACPP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAYpnB,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAwB,eAAxB,CACmB,yDADnB,WAES,UAAAmf,GAAG;AAAA,eAAIpT,OAAO,CAAC1C,KAAR,CAAc8V,GAAd,CAAJ;AAAA,OAFZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { LoginComponent } from '@app/features/user/login/login.component';\nimport { RegisterComponent } from '@app/features/user/register/register.component';\nimport { RequestPasswordResetComponent } from '@app/features/user/request-password-reset/request-password-reset.component';\nimport { TutorialComponent } from '@features/tutorial/tutorial.component';\nimport { AuthGuardService } from '@core/auth/auth-guard.service';\nimport { WorkareaComponent } from '@features/workarea/workarea.component';\nimport { ResponsePasswordResetComponent } from './features/user/response-password-reset/response-password-reset.component';\nimport { PasswordChangeComponent } from './features/user/password-change/password-change.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'about',\n    pathMatch: 'full'\n  },\n  {\n    path: 'about',\n    loadChildren: () =>\n      import('./features/about/about.module').then(m => m.AboutModule)\n  },\n  {\n    path: 'tutorial',\n    component: TutorialComponent\n  },\n  {\n    path: 'workarea',\n    component: WorkareaComponent,\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'settings',\n    loadChildren: () =>\n      import('./features/settings/settings.module').then(m => m.SettingsModule)\n  },\n\n  {\n    path: 'workspace/:workspaceId',\n    loadChildren: () =>\n      import('./features/workspace-detail/workspace-detail.module').then(\n        m => m.WorkspaceDetailModule\n      ),\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'analyses',\n    loadChildren: () =>\n      import('./features/analysis/analysis.module').then(m => m.AnalysisModule),\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'analyses/:workspaceId',\n    loadChildren: () =>\n      import('./features/analysis/analysis.module').then(m => m.AnalysisModule),\n    canActivate: [AuthGuardService]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'activate/:uid/:token',\n    component: LoginComponent\n  },\n  {\n    path: 'reset',\n    component: RequestPasswordResetComponent\n  },\n  {\n    path: 'reset-password/:uid/:token',\n    component: ResponsePasswordResetComponent\n  },\n  {\n    path: 'change-password',\n    component: PasswordChangeComponent\n  },\n\n  {\n    path: '**',\n    redirectTo: 'feature-list'\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      scrollPositionRestoration: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n      enableTracing: true\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { BnNgIdleService } from 'bn-ng-idle';\nimport { NgModule, ErrorHandler } from '@angular/core';\n\nimport { CoreModule } from './core/core.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app/app.component';\nimport { JWT_OPTIONS, JwtModule } from '@auth0/angular-jwt';\nimport { AuthenticationService } from '@app/core/authentication/authentication.service';\nimport { LoginComponent } from './features/user/login/login.component';\nimport { RegisterComponent } from './features/user/register/register.component';\nimport { TutorialComponent } from './features/tutorial/tutorial.component';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\n\nimport { WorkareaComponent } from './features/workarea/workarea.component';\nimport { FileManagerModule } from './features/file-manager/file-manager.module';\nimport { WorkspaceManagerModule } from './features/workspace-manager/workspace-manager.module';\nimport { TokenInterceptor } from '@core/interceptors/token-interceptor.interceptor';\n\nimport { SharedModule } from '@app/shared/shared.module';\n\nimport {\n  SocialLoginModule,\n  GoogleLoginProvider,\n  SocialAuthServiceConfig\n} from 'angularx-social-login';\n\nimport { jwtOptionsFactory } from '@app/jwtConfig';\nimport { HttpErrorInterceptor } from '@core/interceptors/http-error.interceptor';\nimport { RequestPasswordResetComponent } from './features/user/request-password-reset/request-password-reset.component';\nimport { ResponsePasswordResetComponent } from './features/user/response-password-reset/response-password-reset.component';\nimport { PasswordChangeComponent } from './features/user/password-change/password-change.component';\nimport { SentryErrorHandler } from './sentry-error-handler';\n\n@NgModule({\n  imports: [\n    // angular\n    BrowserAnimationsModule,\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularMultiSelectModule,\n\n    // core\n    CoreModule,\n\n    YouTubePlayerModule,\n\n    SharedModule,\n\n    JwtModule.forRoot({\n      jwtOptionsProvider: {\n        provide: JWT_OPTIONS,\n        useFactory: jwtOptionsFactory,\n        deps: [AuthenticationService]\n      }\n    }),\n\n    // Google authorization\n    SocialLoginModule,\n\n    // app\n    FileManagerModule,\n    WorkspaceManagerModule,\n    AppRoutingModule\n  ],\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    TutorialComponent,\n    WorkareaComponent,\n    RequestPasswordResetComponent,\n    ResponsePasswordResetComponent,\n    PasswordChangeComponent\n  ],\n  providers: [\n    BnNgIdleService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpErrorInterceptor,\n      multi: true\n    },\n    {\n      provide: ErrorHandler,\n      useClass: SentryErrorHandler\n    },\n    {\n      provide: 'SocialAuthServiceConfig',\n      useValue: {\n        autoLogin: false,\n        providers: [\n          {\n            id: GoogleLoginProvider.PROVIDER_ID,\n            provider: new GoogleLoginProvider(\n              '963687796352-nrlmm9b4g5s5kcgv6fnlkhtutv5v34bh.apps.googleusercontent.com' // 'Google ClientId here'\n            )\n          }\n        ]\n      } as SocialAuthServiceConfig\n    }\n  ],\n  exports: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import browser from 'browser-detect';\nimport { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { BnNgIdleService } from 'bn-ng-idle';\nimport { AuthenticationService } from '@app/core/authentication/authentication.service';\nimport { User } from '@app/_models/user';\n\nimport { environment as env } from '../../environments/environment';\n\nimport {\n  routeAnimations,\n  LocalStorageService,\n  selectIsAuthenticated,\n  selectSettingsStickyHeader,\n  selectSettingsLanguage,\n  selectEffectiveTheme\n} from '../core/core.module';\nimport {\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeLanguage\n} from '../core/settings/settings.actions';\n\n@Component({\n  selector: 'mev-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [routeAnimations]\n})\nexport class AppComponent implements OnInit {\n  currentUser: User;\n  socialUser;\n  isAuthenticated: boolean;\n  isProd = env.production;\n  envName = env.envName;\n  version = env.versions.app;\n  year = new Date().getFullYear();\n  logo = require('../../assets/logo.png').default;\n  languages = ['en'];\n  sessionTimeout = 60 * 15; // 15 minutes\n  navigation = [\n    { link: 'about', label: 'mev.menu.main' },\n    { link: 'tutorial', label: 'mev.menu.tutorial' },\n    { link: 'workarea', label: 'Get Started' }\n  ];\n  navigationSideMenu = [\n    ...this.navigation,\n    { link: 'settings', label: 'mev.menu.settings' }\n  ];\n\n  isAuthenticated$: Observable<boolean>;\n  stickyHeader$: Observable<boolean>;\n  language$: Observable<string>;\n  theme$: Observable<string>;\n  private sessionSubscription$: Subscription;\n\n  constructor(\n    private store: Store,\n    private storageService: LocalStorageService,\n    private router: Router,\n    private bnIdle: BnNgIdleService,\n    private authenticationService: AuthenticationService\n  ) {\n    this.authenticationService.currentUser.subscribe(x => {\n      this.isAuthenticated = x !== null;\n      this.currentUser = x;\n    });\n  }\n\n  private static isIEorEdgeOrSafari() {\n    return ['ie', 'edge', 'safari'].includes(browser().name);\n  }\n\n  onLogoutClick() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n  ngOnInit(): void {\n    this.socialUser = JSON.parse(localStorage.getItem('socialUser'));\n\n    // listen for the user’s idleness\n    this.sessionSubscription$ = this.bnIdle\n      .startWatching(this.sessionTimeout)\n      .subscribe((isTimedOut: boolean) => {\n        if (isTimedOut) {\n          this.onLogoutClick();\n        }\n      });\n\n    this.storageService.testLocalStorage();\n    if (AppComponent.isIEorEdgeOrSafari()) {\n      this.store.dispatch(\n        actionSettingsChangeAnimationsPageDisabled({\n          pageAnimationsDisabled: true\n        })\n      );\n    }\n\n    this.isAuthenticated$ = this.store.pipe(select(selectIsAuthenticated));\n    this.stickyHeader$ = this.store.pipe(select(selectSettingsStickyHeader));\n    this.language$ = this.store.pipe(select(selectSettingsLanguage));\n    this.theme$ = this.store.pipe(select(selectEffectiveTheme));\n  }\n\n  ngOnDestroy(): void {\n    if (this.sessionSubscription$) {\n      this.sessionSubscription$.unsubscribe();\n    }\n  }\n\n  onLanguageSelect({ value: language }) {\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\n  }\n}\n","<div [class]=\"'theme-wrapper ' + (theme$ | async)\">\n\n  <mat-sidenav-container>\n\n    <mat-sidenav #sidenav mode=\"push\">\n      <div class=\"branding\"><img [src]=\"logo\" [alt]=\"logo\"/>\n        <span>{{ 'mev.title.short' | translate}}</span></div>\n      <mat-nav-list>\n        <a mat-list-item *ngFor=\"let item of navigationSideMenu\" (click)=\"sidenav.close()\" [routerLink]=\"[item.link]\"\n           routerLinkActive=\"active\">\n          {{item.label | translate}}\n        </a>\n        <a mat-list-item href=\"https://github.com/dfci-cccb/mev/issues\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Github\n        </a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <div class=\"wrapper\">\n\n      <div class=\"toolbar\" [style.position]=\"(stickyHeader$ | async) ? 'fixed' : 'inherit'\"\n           [class.mat-elevation-z4]=\"(stickyHeader$ | async)\">\n        <mat-toolbar color=\"primary\">\n          <button mat-icon-button class=\"d-md-none\" (click)=\"sidenav.open()\">\n            <fa-icon icon=\"bars\"></fa-icon>\n\n          </button>\n\n          <span routerLink=\"\" class=\"branding spacer center d-inline d-sm-none\">\n            <img [src]=\"logo\" [alt]=\"logo\"/></span>\n          <span routerLink=\"\" class=\"branding spacer center d-none d-sm-inline d-md-none\"><img [src]=\"logo\"\n                                                                                               [alt]=\"logo\"/> {{\n            'mev.title.short' | translate }}</span>\n          <span routerLink=\"\" class=\"branding spacer d-none d-md-inline\"><img [src]=\"logo\" [alt]=\"logo\"/>Web MeV</span>\n\n          <span class=\"d-none d-md-inline\">\n            <button mat-button class=\"nav-button\" *ngFor=\"let item of navigation\" [routerLink]=\"[item.link]\"\n                    routerLinkActive=\"active\">\n              {{item.label | translate}}\n            </button>\n          </span>\n\n          <!--button mat-button mat-stroked-button color=\"accent\" *ngIf=\"!(isAuthenticated$ | async)\" (click)=\"onLoginClick()\">\n            {{ 'mev.menu.login' | translate }}\n          </button-->\n\n          <!--button *ngIf=\"(isAuthenticated$ | async)\"\n                  mat-icon-button\n                  [matMenuTriggerFor]=\"toolbarUserMenu\">\n            <fa-icon icon=\"user-circle\"></fa-icon>\n          </button-->\n          <!--mat-menu #toolbarUserMenu=\"matMenu\">\n            <button mat-menu-item (click)=\"onLogoutClick()\">\n              <mat-icon><fa-icon icon=\"power-off\"></fa-icon></mat-icon>\n              <span>{{ 'mev.menu.logout' | translate }}</span>\n            </button>\n          </mat-menu-->\n\n          <button mat-button mat-stroked-button color=\"accent\" *ngIf=\"!isAuthenticated\" routerLink=\"/login\">\n            {{ 'mev.menu.login' | translate }}\n          </button>\n\n          <button *ngIf=\"isAuthenticated\"\n                  mat-icon-button\n                  [matMenuTriggerFor]=\"toolbarUserMenu\">\n            <fa-icon icon=\"user-circle\"></fa-icon>\n          </button>\n\n          <mat-menu #toolbarUserMenu=\"matMenu\">\n\n            <button mat-menu-item routerLink=\"/change-password\">\n              <span *ngIf=\"socialUser\" class=\"social-user-info\">\n                <span class=\"social-user-info__name\">\n                 {{ socialUser.name }}\n               </span>\n               <span class=\"social-user-info__email\">\n                 {{ socialUser.email }}\n               </span>\n               </span>\n\n              <mat-icon>\n                <fa-icon icon=\"lock\"></fa-icon>\n              </mat-icon>\n              <span>Account security</span>\n            </button>\n\n            <button mat-menu-item (click)=\"onLogoutClick()\">           \n              <mat-icon>\n                <fa-icon icon=\"power-off\"></fa-icon>\n              </mat-icon>\n              <span>{{ 'mev.menu.logout' | translate }}</span>\n            </button>\n\n          </mat-menu>\n          <!-- <button mat-icon-button routerLink=\"settings\" class=\"d-none d-sm-inline\">\n            <fa-icon icon=\"cog\"></fa-icon>\n          </button> -->\n\n          <a [matTooltip]=\"'mev.header.github' | translate\"\n             matTooltipPosition=\"before\"\n             mat-icon-button\n             class=\"link d-none d-sm-inline\"\n             href=\"https://github.com/dfci-cccb/mev\"\n             target=\"_blank\" rel=\"noopener noreferrer\">\n            <fa-icon [icon]=\"['fab','github']\"></fa-icon>\n          </a>\n\n          <span *ngIf=\"language$ | async as language\">\n            <mat-select [ngModel]=\"language\" (selectionChange)=\"onLanguageSelect($event)\">\n              <mat-option *ngFor=\"let l of languages\" [value]=\"l\">\n                {{ l.toUpperCase() }}\n              </mat-option>\n            </mat-select>\n          </span>\n        </mat-toolbar>\n      </div>\n\n      <div class=\"content\"\n           [@routeAnimations]=\"o.isActivated && o.activatedRoute.routeConfig.data && o.activatedRoute.routeConfig.data.title\">\n        <router-outlet #o=\"outlet\"></router-outlet>\n        <router-outlet></router-outlet>\n      </div>\n\n      <div class=\"footer\">\n        <div class=\"row\">\n          <div class=\"col-sm-12 links\">\n            <a href=\"https://github.com/dfci-cccb/mev\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <fa-icon [icon]=\"['fab','github']\"></fa-icon>\n              <span>Github</span>\n            </a>\n            <a href=\"https://twitter.com/webmev\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <fa-icon [icon]=\"['fab','twitter']\"></fa-icon>\n              <span>Twitter</span>\n            </a>\n            <a href=\"https://www.youtube.com/channel/UCFrvYZDDiJ-Z-ZVKCH2pY9A\"\n               target=\"_blank\" rel=\"noopener noreferrer\">\n              <fa-icon [icon]=\"['fab','youtube']\"></fa-icon>\n              <span>Youtube</span>\n            </a>\n\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n  </mat-sidenav-container>\n\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnimationsService {\n  constructor() {\n    AnimationsService.routeAnimationType = 'NONE';\n  }\n\n  private static routeAnimationType: RouteAnimationType = 'NONE';\n\n  static isRouteAnimationsType(type: RouteAnimationType) {\n    return AnimationsService.routeAnimationType === type;\n  }\n\n  updateRouteAnimationType(\n    pageAnimations: boolean,\n    elementsAnimations: boolean\n  ) {\n    AnimationsService.routeAnimationType =\n      pageAnimations && elementsAnimations\n        ? 'ALL'\n        : pageAnimations\n        ? 'PAGE'\n        : elementsAnimations\n        ? 'ELEMENTS'\n        : 'NONE';\n  }\n}\n\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\n","import {\r\n  animate,\r\n  query,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  stagger,\r\n  sequence\r\n} from '@angular/animations';\r\nimport { AnimationsService } from './animations.service';\r\n\r\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\r\n\r\nconst STEPS_ALL: any[] = [\r\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\r\n    optional: true\r\n  }),\r\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\r\n    optional: true\r\n  }),\r\n  sequence([\r\n    query(\r\n      ':leave > *',\r\n      [\r\n        style({ transform: 'translateY(0%)', opacity: 1 }),\r\n        animate(\r\n          '0.2s ease-in-out',\r\n          style({ transform: 'translateY(-3%)', opacity: 0 })\r\n        ),\r\n        style({ position: 'fixed' })\r\n      ],\r\n      { optional: true }\r\n    ),\r\n    query(\r\n      ':enter > *',\r\n      [\r\n        style({\r\n          transform: 'translateY(-3%)',\r\n          opacity: 0,\r\n          position: 'static'\r\n        }),\r\n        animate(\r\n          '0.5s ease-in-out',\r\n          style({ transform: 'translateY(0%)', opacity: 1 })\r\n        )\r\n      ],\r\n      { optional: true }\r\n    )\r\n  ]),\r\n  query(\r\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\r\n    stagger(75, [\r\n      style({ transform: 'translateY(10%)', opacity: 0 }),\r\n      animate(\r\n        '0.5s ease-in-out',\r\n        style({ transform: 'translateY(0%)', opacity: 1 })\r\n      )\r\n    ]),\r\n    { optional: true }\r\n  )\r\n];\r\nconst STEPS_NONE = [];\r\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\r\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\r\n\r\nexport const routeAnimations = trigger('routeAnimations', [\r\n  transition(isRouteAnimationsAll, STEPS_ALL),\r\n  transition(isRouteAnimationsNone, STEPS_NONE),\r\n  transition(isRouteAnimationsPage, STEPS_PAGE),\r\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS)\r\n]);\r\n\r\nexport function isRouteAnimationsAll() {\r\n  return AnimationsService.isRouteAnimationsType('ALL');\r\n}\r\n\r\nexport function isRouteAnimationsNone() {\r\n  return AnimationsService.isRouteAnimationsType('NONE');\r\n}\r\n\r\nexport function isRouteAnimationsPage() {\r\n  return AnimationsService.isRouteAnimationsType('PAGE');\r\n}\r\n\r\nexport function isRouteAnimationsElements() {\r\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from '@angular/router';\nimport { AuthenticationService } from '@app/core/authentication/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n    return false;\n  }\n}\n","import { createAction } from '@ngrx/store';\n\nexport const authLogin = createAction('[Auth] Login');\nexport const authLogout = createAction('[Auth] Logout');\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\nimport { tap } from 'rxjs/operators';\n\nimport { LocalStorageService } from '../local-storage/local-storage.service';\n\nimport { authLogin, authLogout } from './auth.actions';\n\nexport const AUTH_KEY = 'AUTH';\n\n@Injectable()\nexport class AuthEffects {\n  constructor(\n    private actions$: Actions,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {}\n\n  login = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(authLogin),\n        tap(() =>\n          this.localStorageService.setItem(AUTH_KEY, { isAuthenticated: true })\n        )\n      ),\n    { dispatch: false }\n  );\n\n  logout = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(authLogout),\n        tap(() => {\n          this.router.navigate(['']);\n          this.localStorageService.setItem(AUTH_KEY, {\n            isAuthenticated: false\n          });\n        })\n      ),\n    { dispatch: false }\n  );\n}\n","import { AuthState } from './auth.models';\nimport { authLogin, authLogout } from './auth.actions';\nimport { createReducer, on, Action } from '@ngrx/store';\n\nexport const initialState: AuthState = {\n  isAuthenticated: false\n};\n\nconst reducer = createReducer(\n  initialState,\n  on(authLogin, state => ({ ...state, isAuthenticated: true })),\n  on(authLogout, state => ({ ...state, isAuthenticated: false }))\n);\n\nexport function authReducer(\n  state: AuthState | undefined,\n  action: Action\n): AuthState {\n  return reducer(state, action);\n}\n","import { createSelector } from '@ngrx/store';\r\n\r\nimport { selectAuthState } from '../core.state';\r\nimport { AuthState } from './auth.models';\r\n\r\nexport const selectAuth = createSelector(\r\n  selectAuthState,\r\n  (state: AuthState) => state\r\n);\r\n\r\nexport const selectIsAuthenticated = createSelector(\r\n  selectAuthState,\r\n  (state: AuthState) => state.isAuthenticated\r\n);\r\n","import { Injectable } from '@angular/core';\nimport { environment } from '@environments/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { User } from '@app/_models/user';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * Authentication service\n *\n * Used for user registration and authentication\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private currentUserSubject: BehaviorSubject<User>;\n  public currentUser: Observable<User>;\n  private readonly API_URL = environment.apiUrl;\n  private readonly API_NAME = environment.appName;\n\n  private readonly JWT_TOKEN = this.API_NAME + 'JWT_TOKEN';\n  private readonly REFRESH_TOKEN = this.API_NAME + 'REFRESH_TOKEN';\n\n  constructor(private http: HttpClient) {\n    this.currentUserSubject = new BehaviorSubject<User>(\n      JSON.parse(sessionStorage.getItem(this.JWT_TOKEN))\n    );\n    this.currentUser = this.currentUserSubject.asObservable();\n  }\n\n  public get currentUserValue(): User {\n    return this.currentUserSubject.value;\n  }\n\n  /**\n   * User login\n   *\n   */\n  login(username: string, password: string) {\n    return this.http\n      .post<any>(`${this.API_URL}/token/`, {\n        email: username,\n        password: password\n      })\n      .pipe(\n        map(user => {\n          // login successful if there's a token in the response: {'refresh': '<REFRESH TOKEN>', 'access': '<ACCESS_TOKEN>'}\n          if (user && user.access) {\n            this.storeJwtToken(JSON.stringify(user.access));\n            this.storeRefreshToken(JSON.stringify(user.refresh));\n            this.currentUserSubject.next(user);\n          }\n          return user;\n        })\n      );\n  }\n\n  // store user details and token in local storage to keep user logged in between page refreshes\n  private storeJwtToken(jwt: string) {\n    sessionStorage.setItem(this.JWT_TOKEN, jwt);\n  }\n\n  /**\n   * Update refresh token in storage\n   *\n   */\n  private storeRefreshToken(token: string) {\n    sessionStorage.setItem(this.REFRESH_TOKEN, token);\n  }\n\n  /**\n   * User logout\n   *\n   */\n  logout() {\n    // remove user from local storage to log user out\n    sessionStorage.removeItem(this.JWT_TOKEN);\n    this.currentUserSubject.next(null);\n  }\n\n  /**\n   * Get user token from storage\n   *\n   */\n  getJwtToken(): string {\n    return JSON.parse(sessionStorage.getItem(this.JWT_TOKEN));\n  }\n\n  /**\n   * Get user refresh token from storage\n   *\n   */\n  private getRefreshToken() {\n    return JSON.parse(sessionStorage.getItem(this.REFRESH_TOKEN));\n  }\n\n  /**\n   * Check if user is logged in\n   *\n   */\n  isLoggedIn() {\n    return this.getJwtToken() !== null;\n  }\n\n  /**\n   * Refresh token\n   *\n   */\n\n  refreshToken() {\n    return this.http\n      .post<any>(`${this.API_URL}/token/refresh/`, {\n        refresh: this.getRefreshToken()\n      })\n      .pipe(\n        tap(tokens => {\n          this.storeJwtToken(JSON.stringify(tokens.access));\n        })\n      );\n  }\n\n  /**\n   * Google Login\n   *\n   */\n\n  googleSignInExternal(googleTokenId: string): Observable<any> {\n    return this.http\n      .post<any>(`${this.API_URL}/users/social/google/`, {\n        provider_token: googleTokenId\n      })\n      .pipe(\n        map(token => {\n          // login successful if there's a token in the response: {'refresh': '<REFRESH TOKEN>', 'access': '<ACCESS_TOKEN>'}\n          if (token && token.access) {\n            this.storeJwtToken(JSON.stringify(token.access));\n            this.storeRefreshToken(JSON.stringify(token.refresh));\n            this.currentUserSubject.next(token);\n          }\n          return token;\n        })\n      );\n  }\n\n  /**\n   * Request password reset\n   *\n   */\n\n  requestPasswordReset(body): Observable<any> {\n    return this.http.post<any>(`${this.API_URL}/users/reset-password/`, body);\n  }\n\n  /**\n   * Confirm password reset\n   *\n   */\n  confirmPasswordReset(body): Observable<any> {\n    // user has clicked on a reset link and is sending a UID (encoded), a token, a new password, and a re-typed confirmation of that password\n    return this.http.post<any>(\n      `${this.API_URL}/users/reset-password/confirm/`,\n      body\n    );\n  }\n\n  /**\n   * Update password\n   *\n   */\n  newPassword(body): Observable<any> {\n    return this.http.post<any>(`${this.API_URL}/users/change-password/`, body);\n  }\n\n  /**\n   * Verify token after password reset\n   *\n   */\n  ValidPasswordToken(body): Observable<any> {\n    return this.http.post<any>(`${this.API_URL}/users/activate/`, body);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Optional, SkipSelf, ErrorHandler } from '@angular/core';\nimport {\n  HttpClientModule,\n  HttpClient,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport {\n  StoreRouterConnectingModule,\n  RouterStateSerializer\n} from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {\n  FaIconLibrary,\n  FontAwesomeModule\n} from '@fortawesome/angular-fontawesome';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { environment } from '../../environments/environment';\n\nimport {\n  AppState,\n  reducers,\n  metaReducers,\n  selectRouterState\n} from './core.state';\nimport { AuthEffects } from './auth/auth.effects';\nimport { selectIsAuthenticated, selectAuth } from './auth/auth.selectors';\nimport { authLogin, authLogout } from './auth/auth.actions';\nimport { AuthGuardService } from './auth/auth-guard.service';\nimport { TitleService } from './title/title.service';\nimport {\n  ROUTE_ANIMATIONS_ELEMENTS,\n  routeAnimations\n} from './animations/route.animations';\nimport { AnimationsService } from './animations/animations.service';\nimport { CustomSerializer } from './router/custom-serializer';\nimport { LocalStorageService } from './local-storage/local-storage.service';\nimport { HttpErrorInterceptor } from '@core/interceptors/http-error.interceptor';\nimport { GoogleAnalyticsEffects } from './google-analytics/google-analytics.effects';\nimport { NotificationService } from './notifications/notification.service';\nimport { SettingsEffects } from './settings/settings.effects';\nimport {\n  selectSettingsLanguage,\n  selectEffectiveTheme,\n  selectSettingsStickyHeader\n} from './settings/settings.selectors';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  faCog,\n  faCogs,\n  faInfo,\n  faBars,\n  faRocket,\n  faPowerOff,\n  faLock,\n  faUserCircle,\n  faPlayCircle\n} from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  faGithub,\n  faMediumM,\n  faTwitter,\n  faInstagram,\n  faYoutube\n} from '@fortawesome/free-brands-svg-icons';\n\nexport {\n  TitleService,\n  selectAuth,\n  authLogin,\n  authLogout,\n  routeAnimations,\n  AppState,\n  LocalStorageService,\n  selectIsAuthenticated,\n  ROUTE_ANIMATIONS_ELEMENTS,\n  AnimationsService,\n  AuthGuardService,\n  selectRouterState,\n  NotificationService,\n  selectEffectiveTheme,\n  selectSettingsLanguage,\n  selectSettingsStickyHeader\n};\n\nexport function HttpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(\n    http,\n    `${environment.i18nPrefix}/assets/i18n/`,\n    '.json'\n  );\n}\n\n@NgModule({\n  imports: [\n    // angular\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n\n    // material\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatButtonModule,\n\n    // ngrx\n    StoreModule.forRoot(reducers, { metaReducers }),\n    StoreRouterConnectingModule.forRoot(),\n    EffectsModule.forRoot([\n      AuthEffects,\n      SettingsEffects,\n      GoogleAnalyticsEffects\n    ]),\n    environment.production\n      ? []\n      : StoreDevtoolsModule.instrument({\n          name: 'Angular NgRx Material Starter'\n        }),\n\n    // 3rd party\n    FontAwesomeModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n    { provide: RouterStateSerializer, useClass: CustomSerializer }\n  ],\n  exports: [\n    // angular\n    FormsModule,\n\n    // material\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatButtonModule,\n\n    // 3rd party\n    FontAwesomeModule,\n    TranslateModule\n  ]\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: CoreModule,\n    faIconLibrary: FaIconLibrary\n  ) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\n    }\n    faIconLibrary.addIcons(\n      faCog,\n      faCogs,\n      faInfo,\n      faBars,\n      faRocket,\n      faPowerOff,\n      faLock,\n      faUserCircle,\n      faPlayCircle,\n      faGithub,\n      faMediumM,\n      faTwitter,\n      faInstagram,\n      faYoutube\n    );\n  }\n}\n","import {\n  ActionReducerMap,\n  MetaReducer,\n  createFeatureSelector\n} from '@ngrx/store';\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\n\nimport { environment } from '../../environments/environment';\n\nimport { initStateFromLocalStorage } from './meta-reducers/init-state-from-local-storage.reducer';\nimport { debug } from './meta-reducers/debug.reducer';\nimport { AuthState } from './auth/auth.models';\nimport { authReducer } from './auth/auth.reducer';\nimport { RouterStateUrl } from './router/router.state';\nimport { settingsReducer } from './settings/settings.reducer';\nimport { SettingsState } from './settings/settings.model';\n\nexport const reducers: ActionReducerMap<AppState> = {\n  auth: authReducer,\n  settings: settingsReducer,\n  router: routerReducer\n};\n\nexport const metaReducers: MetaReducer<AppState>[] = [\n  initStateFromLocalStorage\n];\n\nif (!environment.production) {\n  if (!environment.test) {\n    metaReducers.unshift(debug);\n  }\n}\n\nexport const selectAuthState = createFeatureSelector<AppState, AuthState>(\n  'auth'\n);\n\nexport const selectSettingsState = createFeatureSelector<\n  AppState,\n  SettingsState\n>('settings');\n\nexport const selectRouterState = createFeatureSelector<\n  AppState,\n  RouterReducerState<RouterStateUrl>\n>('router');\n\nexport interface AppState {\n  auth: AuthState;\n  settings: SettingsState;\n  router: RouterReducerState<RouterStateUrl>;\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { createEffect } from '@ngrx/effects';\r\nimport { tap, filter } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class GoogleAnalyticsEffects {\r\n  constructor(private router: Router) {}\r\n\r\n  pageView = createEffect(\r\n    () => () =>\r\n      this.router.events.pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        tap((event: NavigationEnd) => {\r\n          (<any>window).ga('set', 'page', event.urlAfterRedirects);\r\n          (<any>window).ga('send', 'pageview');\r\n        })\r\n      ),\r\n    { dispatch: false }\r\n  );\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { NotificationService } from '@core/notifications/notification.service';\n\n/**\n * Passes HttpErrorResponse to application-wide error handler\n * */\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private readonly notificationService: NotificationService) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = '';\n\n        if (typeof error === 'string') {\n          return throwError(error);\n        }\n\n        // If Unauthorized (401) and it is not user sign-in, we perform refresh process to get refresh token and don't show notification error for the user\n        if (\n          error instanceof HttpErrorResponse &&\n          error.status === 401 &&\n          request.url.indexOf('api/token') === -1\n        ) {\n          return next.handle(request);\n        }\n        if (error.error instanceof ErrorEvent) {\n          errorMessage = `Error: ${error.error.message}`;\n        } else {\n          let detail = 'See console for detail';\n          if (error.error) {\n            detail = '';\n            Object.keys(error.error).forEach(error_field => {\n              detail += error.error[error_field] + ' \\n';\n            });\n          }\n          errorMessage = `Error: ${detail}`; // Message: ${error.message}\n        }\n        this.notificationService.error(errorMessage);\n        return throwError(errorMessage);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError, BehaviorSubject } from 'rxjs';\nimport { catchError, filter, take, switchMap } from 'rxjs/operators';\nimport { AuthenticationService } from '@app/core/authentication/authentication.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  private isRefreshing = false;\n  private refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(\n    null\n  );\n\n  constructor(public authService: AuthenticationService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<any> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error instanceof HttpErrorResponse && error.status === 401) {\n          return this.handle401Error(request, next);\n        } else {\n          return throwError(error);\n        }\n      })\n    );\n  }\n\n  private handle401Error(request: HttpRequest<any>, next: HttpHandler) {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      this.refreshTokenSubject.next(null);\n      return this.authService.refreshToken().pipe(\n        switchMap((token: any) => {\n          this.isRefreshing = false;\n          this.refreshTokenSubject.next(token.access);\n          return next.handle(this.addToken(request, token.access));\n        })\n      );\n    } else {\n      return this.refreshTokenSubject.pipe(\n        filter(token => token != null),\n        take(1),\n        switchMap(jwt => {\n          return next.handle(this.addToken(request, jwt));\n        })\n      );\n    }\n  }\n\n  private addToken(request: HttpRequest<any>, token: string) {\n    return request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst APP_PREFIX = 'ANMS-';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  constructor() {}\n\n  static loadInitialState() {\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\n      if (storageKey.includes(APP_PREFIX)) {\n        const stateKeys = storageKey\n          .replace(APP_PREFIX, '')\n          .toLowerCase()\n          .split('.')\n          .map(key =>\n            key\n              .split('-')\n              .map((token, index) =>\n                index === 0\n                  ? token\n                  : token.charAt(0).toUpperCase() + token.slice(1)\n              )\n              .join('')\n          );\n        let currentStateRef = state;\n        stateKeys.forEach((key, index) => {\n          if (index === stateKeys.length - 1) {\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey));\n            return;\n          }\n          currentStateRef[key] = currentStateRef[key] || {};\n          currentStateRef = currentStateRef[key];\n        });\n      }\n      return state;\n    }, {});\n  }\n\n  setItem(key: string, value: any) {\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\n  }\n\n  getItem(key: string) {\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\n  }\n\n  removeItem(key: string) {\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\n  }\n\n  /** Tests that localStorage exists, can be written to, and read from. */\n  testLocalStorage() {\n    const testValue = 'testValue';\n    const testKey = 'testKey';\n    let retrievedValue: string;\n    const errorMessage = 'localStorage did not return expected value';\n\n    this.setItem(testKey, testValue);\n    retrievedValue = this.getItem(testKey);\n    this.removeItem(testKey);\n\n    if (retrievedValue !== testValue) {\n      throw new Error(errorMessage);\n    }\n  }\n}\n","import { ActionReducer } from '@ngrx/store';\n\nimport { AppState } from '../core.state';\n\nexport function debug(\n  reducer: ActionReducer<AppState>\n): ActionReducer<AppState> {\n  return function(state, action) {\n    const newState = reducer(state, action);\n    console.log(`[DEBUG] action: ${action.type}`, {\n      payload: (<any>action).payload,\n      oldState: state,\n      newState\n    });\n    return newState;\n  };\n}\n","import { ActionReducer, INIT, UPDATE } from '@ngrx/store';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { AppState } from '../core.state';\n\nexport function initStateFromLocalStorage(\n  reducer: ActionReducer<AppState>\n): ActionReducer<AppState> {\n  return function(state, action) {\n    const newState = reducer(state, action);\n    if ([INIT.toString(), UPDATE.toString()].includes(action.type)) {\n      return { ...newState, ...LocalStorageService.loadInitialState() };\n    }\n    return newState;\n  };\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n/**\n * Notification service\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  constructor(\n    private readonly snackBar: MatSnackBar,\n    private readonly zone: NgZone\n  ) {}\n\n  default(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'default-notification-overlay'\n    });\n  }\n\n  info(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'info-notification-overlay'\n    });\n  }\n\n  success(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'success-notification-overlay'\n    });\n  }\n\n  warn(message: string) {\n    this.show(message, {\n      duration: 2500,\n      panelClass: 'warning-notification-overlay'\n    });\n  }\n\n  error(message: string) {\n    this.show(message, {\n      duration: 10000,\n      panelClass: 'error-notification-overlay'\n    });\n  }\n\n  private show(message: string, configuration: MatSnackBarConfig) {\n    // Need to open snackBar from Angular zone to prevent issues with its position per\n    // https://stackoverflow.com/questions/50101912/snackbar-position-wrong-when-use-errorhandler-in-angular-5-and-material\n    this.zone.run(() => this.snackBar.open(message, null, configuration));\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { RouterStateSerializer } from '@ngrx/router-store';\r\nimport { RouterStateUrl } from './router.state';\r\n\r\n@Injectable()\r\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const {\r\n      url,\r\n      root: { queryParams }\r\n    } = routerState;\r\n    const { params } = route;\r\n\r\n    return { url, params, queryParams };\r\n  }\r\n}\r\n","import { createAction, props } from '@ngrx/store';\n\nimport { Language } from './settings.model';\n\nexport const actionSettingsChangeLanguage = createAction(\n  '[Settings] Change Language',\n  props<{ language: Language }>()\n);\n\nexport const actionSettingsChangeTheme = createAction(\n  '[Settings] Change Theme',\n  props<{ theme: string }>()\n);\nexport const actionSettingsChangeAutoNightMode = createAction(\n  '[Settings] Change Auto Night Mode',\n  props<{ autoNightMode: boolean }>()\n);\n\nexport const actionSettingsChangeStickyHeader = createAction(\n  '[Settings] Change Sticky Header',\n  props<{ stickyHeader: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsPage = createAction(\n  '[Settings] Change Animations Page',\n  props<{ pageAnimations: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsPageDisabled = createAction(\n  '[Settings] Change Animations Page Disabled',\n  props<{ pageAnimationsDisabled: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsElements = createAction(\n  '[Settings] Change Animations Elements',\n  props<{ elementsAnimations: boolean }>()\n);\nexport const actionSettingsChangeHour = createAction(\n  '[Settings] Change Hours',\n  props<{ hour: number }>()\n);\n","import { ActivationEnd, Router } from '@angular/router';\nimport { Injectable, NgZone } from '@angular/core';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { select, Store } from '@ngrx/store';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { TranslateService } from '@ngx-translate/core';\nimport { combineLatest, merge, of } from 'rxjs';\nimport {\n  tap,\n  withLatestFrom,\n  distinctUntilChanged,\n  filter\n} from 'rxjs/operators';\n\nimport { selectSettingsState } from '../core.state';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { AnimationsService } from '../animations/animations.service';\nimport { TitleService } from '../title/title.service';\n\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeTheme,\n  actionSettingsChangeStickyHeader,\n  actionSettingsChangeHour\n} from './settings.actions';\nimport {\n  selectEffectiveTheme,\n  selectSettingsLanguage,\n  selectPageAnimations,\n  selectElementsAnimations\n} from './settings.selectors';\nimport { State } from './settings.model';\n\nexport const SETTINGS_KEY = 'SETTINGS';\n\nconst INIT = of('mev-init-effect-trigger');\n\n@Injectable()\nexport class SettingsEffects {\n  constructor(\n    private actions$: Actions,\n    private store: Store<State>,\n    private router: Router,\n    private overlayContainer: OverlayContainer,\n    private localStorageService: LocalStorageService,\n    private titleService: TitleService,\n    private animationsService: AnimationsService,\n    private translateService: TranslateService,\n    private ngZone: NgZone\n  ) {}\n\n  hour = 0;\n  changeHour = this.ngZone.runOutsideAngular(() =>\n    setInterval(() => {\n      const hour = new Date().getHours();\n      if (hour !== this.hour) {\n        this.hour = hour;\n        this.ngZone.run(() =>\n          this.store.dispatch(actionSettingsChangeHour({ hour }))\n        );\n      }\n    }, 60_000)\n  );\n\n  persistSettings = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          actionSettingsChangeAnimationsElements,\n          actionSettingsChangeAnimationsPage,\n          actionSettingsChangeAnimationsPageDisabled,\n          actionSettingsChangeAutoNightMode,\n          actionSettingsChangeLanguage,\n          actionSettingsChangeStickyHeader,\n          actionSettingsChangeTheme\n        ),\n        withLatestFrom(this.store.pipe(select(selectSettingsState))),\n        tap(([action, settings]) =>\n          this.localStorageService.setItem(SETTINGS_KEY, settings)\n        )\n      ),\n    { dispatch: false }\n  );\n\n  updateRouteAnimationType = createEffect(\n    () =>\n      merge(\n        INIT,\n        this.actions$.pipe(\n          ofType(\n            actionSettingsChangeAnimationsElements,\n            actionSettingsChangeAnimationsPage\n          )\n        )\n      ).pipe(\n        withLatestFrom(\n          combineLatest([\n            this.store.pipe(select(selectPageAnimations)),\n            this.store.pipe(select(selectElementsAnimations))\n          ])\n        ),\n        tap(([action, [pageAnimations, elementsAnimations]]) =>\n          this.animationsService.updateRouteAnimationType(\n            pageAnimations,\n            elementsAnimations\n          )\n        )\n      ),\n    { dispatch: false }\n  );\n\n  updateTheme = createEffect(\n    () =>\n      merge(INIT, this.actions$.pipe(ofType(actionSettingsChangeTheme))).pipe(\n        withLatestFrom(this.store.pipe(select(selectEffectiveTheme))),\n        tap(([action, effectiveTheme]) => {\n          const classList = this.overlayContainer.getContainerElement()\n            .classList;\n          const toRemove = Array.from(classList).filter((item: string) =>\n            item.includes('-theme')\n          );\n          if (toRemove.length) {\n            classList.remove(...toRemove);\n          }\n          classList.add(effectiveTheme);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  setTranslateServiceLanguage = createEffect(\n    () =>\n      this.store.pipe(\n        select(selectSettingsLanguage),\n        distinctUntilChanged(),\n        tap(language => this.translateService.use(language))\n      ),\n    { dispatch: false }\n  );\n\n  setTitle = createEffect(\n    () =>\n      merge(\n        this.actions$.pipe(ofType(actionSettingsChangeLanguage)),\n        this.router.events.pipe(filter(event => event instanceof ActivationEnd))\n      ).pipe(\n        tap(() => {\n          this.titleService.setTitle(\n            this.router.routerState.snapshot.root,\n            this.translateService\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n}\n","import { AppState } from '../core.module';\n\nexport const NIGHT_MODE_THEME = 'BLACK-THEME';\n\nexport type Language = 'en' | 'sk' | 'de' | 'fr' | 'es' | 'pt-br' | 'he';\n\nexport interface SettingsState {\n  language: string;\n  theme: string;\n  autoNightMode: boolean;\n  nightTheme: string;\n  stickyHeader: boolean;\n  pageAnimations: boolean;\n  pageAnimationsDisabled: boolean;\n  elementsAnimations: boolean;\n  hour: number;\n}\n\nexport interface State extends AppState {\n  settings: SettingsState;\n}\n","import { SettingsState, NIGHT_MODE_THEME } from './settings.model';\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeHour,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeStickyHeader,\n  actionSettingsChangeTheme\n} from './settings.actions';\nimport { Action, createReducer, on } from '@ngrx/store';\n\nexport const initialState: SettingsState = {\n  language: 'en',\n  theme: 'DEFAULT-THEME',\n  autoNightMode: false,\n  nightTheme: NIGHT_MODE_THEME,\n  stickyHeader: true,\n  pageAnimations: true,\n  pageAnimationsDisabled: false,\n  elementsAnimations: true,\n  hour: 0\n};\n\nconst reducer = createReducer(\n  initialState,\n  on(\n    actionSettingsChangeLanguage,\n    actionSettingsChangeTheme,\n    actionSettingsChangeAutoNightMode,\n    actionSettingsChangeStickyHeader,\n    actionSettingsChangeAnimationsPage,\n    actionSettingsChangeAnimationsElements,\n    actionSettingsChangeHour,\n    (state, action) => ({ ...state, ...action })\n  ),\n  on(\n    actionSettingsChangeAnimationsPageDisabled,\n    (state, { pageAnimationsDisabled }) => ({\n      ...state,\n      pageAnimationsDisabled,\n      pageAnimations: false\n    })\n  )\n);\n\nexport function settingsReducer(\n  state: SettingsState | undefined,\n  action: Action\n) {\n  return reducer(state, action);\n}\n","import { createSelector } from '@ngrx/store';\n\nimport { SettingsState } from './settings.model';\nimport { selectSettingsState } from '../core.state';\n\nexport const selectSettings = createSelector(\n  selectSettingsState,\n  (state: SettingsState) => state\n);\n\nexport const selectSettingsStickyHeader = createSelector(\n  selectSettings,\n  (state: SettingsState) => state.stickyHeader\n);\n\nexport const selectSettingsLanguage = createSelector(\n  selectSettings,\n  (state: SettingsState) => state.language\n);\n\nexport const selectTheme = createSelector(\n  selectSettings,\n  settings => settings.theme\n);\n\nexport const selectPageAnimations = createSelector(\n  selectSettings,\n  settings => settings.pageAnimations\n);\n\nexport const selectElementsAnimations = createSelector(\n  selectSettings,\n  settings => settings.elementsAnimations\n);\n\nexport const selectAutoNightMode = createSelector(\n  selectSettings,\n  settings => settings.autoNightMode\n);\n\nexport const selectNightTheme = createSelector(\n  selectSettings,\n  settings => settings.nightTheme\n);\n\nexport const selectHour = createSelector(\n  selectSettings,\n  settings => settings.hour\n);\n\nexport const selectIsNightHour = createSelector(\n  selectAutoNightMode,\n  selectHour,\n  (autoNightMode, hour) => autoNightMode && (hour >= 21 || hour <= 7)\n);\n\nexport const selectEffectiveTheme = createSelector(\n  selectTheme,\n  selectNightTheme,\n  selectIsNightHour,\n  (theme, nightTheme, isNightHour) =>\n    (isNightHour ? nightTheme : theme).toLowerCase()\n);\n","import { Title } from '@angular/platform-browser';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter } from 'rxjs/operators';\n\nimport { environment as env } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  constructor(\n    private translateService: TranslateService,\n    private title: Title\n  ) {}\n\n  setTitle(\n    snapshot: ActivatedRouteSnapshot,\n    lazyTranslateService?: TranslateService\n  ) {\n    let lastChild = snapshot;\n    while (lastChild.children.length) {\n      lastChild = lastChild.children[0];\n    }\n    const { title } = lastChild.data;\n    const translate = lazyTranslateService || this.translateService;\n    if (title) {\n      translate\n        .get(title)\n        .pipe(filter(translatedTitle => translatedTitle !== title))\n        .subscribe(translatedTitle =>\n          this.title.setTitle(`${translatedTitle} - ${env.appName}`)\n        );\n    } else {\n      this.title.setTitle(env.appName);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '@environments/environment';\nimport { User } from '@app/_models/user';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * User service\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private readonly API_URL = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  get(id: number): Observable<User> {\n    return this.http.get<any>(`${this.API_URL}/users/${id}/`);\n  }\n\n  getAll(): Observable<User[]> {\n    return this.http.get<any[]>(`${this.API_URL}/users/`);\n  }\n\n  register(body): Observable<any> {\n    return this.http.post<any>(`${this.API_URL}/users/register/`, body);\n  }\n\n  activate(body): Observable<any> {\n    return this.http.post<any>(`${this.API_URL}/users/activate/`, body);\n  }\n\n  changePassword(body): Observable<any> {\n    return this.http.post<any>(`${this.API_URL}/users/change-password/`, body);\n  }\n\n  update(user: User, id: number) {\n    return this.http.put<any>(\n      `${this.API_URL}/users/${id}/`,\n      JSON.stringify(user)\n    );\n  }\n\n  delete(id: number) {\n    return this.http.delete<any>(`${this.API_URL}/users/${id}/`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * Operation Input Specification\n *\n * Contains properties for dfferent types of operations\n *       \"spec\": {\n *           \"attribute_type\": \"DataResource\",\n *           \"resource_types\": [\"RNASEQ_COUNT_MTX\", \"I_MTX\"],\n *           \"many\": false\n *       }\n *    }\n */\nexport class InputSpec {\n  constructor(\n    public attribute_type: string,\n    public resource_types?: string[],\n    public many?: boolean,\n    public min?: number,\n    public max?: number,\n    public default_value?: number | string,\n    public options?: string[]\n  ) {}\n}\n\n/**\n * Operation Input.\n *\n * The inputs to the analysis (a JSON document), e.g.:\n *\n *    {\n *       \"description\": \"The count matrix of expressions\",\n *       \"name\": \"Count matrix:\",\n *       \"required\": true,\n *       \"spec\": {\n *           \"attribute_type\": \"DataResource\",\n *           \"resource_types\": [\"RNASEQ_COUNT_MTX\", \"I_MTX\"],\n *           \"many\": false\n *       }\n *    }\n */\n\nexport class OperationInput {\n  constructor(\n    public description: string,\n    public name: string,\n    public required: boolean,\n    public spec: InputSpec\n  ) {}\n}\n\n/**\n * Operation Input Adapter\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperationInputAdapter {\n  adapt(item: any): OperationInput {\n    const spec = new InputSpec(\n      item.spec.attribute_type,\n      item.spec.resource_types,\n      item.spec.many,\n      item.spec.min,\n      item.spec.max,\n      item.spec.default,\n      item.spec.options\n    );\n\n    return new OperationInput(item.description, item.name, item.required, spec);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OperationInput, OperationInputAdapter } from './operation-input';\nimport { OperationOutput } from './operation-output';\n\n/**\n * Operation\n *\n * An Operation is any manipulation of some data that produces some output;\n * it defines the type of analysis that is run, its inputs and outputs,\n * and other relevant information. An Operation can be as simple as selecting a subset\n * of the columns/rows of a matrix or running a large-scale processing job\n * that spans many machines and significant time.\n */\n\nexport class Operation {\n  constructor(\n    public id: string,\n    public name: string,\n    public description: string,\n    public inputs: Record<string, OperationInput>,\n    public outputs: Record<string, OperationOutput>,\n    public mode: string,\n    public repository: string,\n    public git_hash: string\n  ) {}\n}\n\n/**\n * Operation Adapter\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class OperationAdapter {\n  adapt(item: any): Operation {\n    const inputs = item.inputs;\n    Object.keys(inputs).map(function(key, index) {\n      inputs[key] = new OperationInputAdapter().adapt(inputs[key]);\n    });\n\n    return new Operation(\n      item.id,\n      item.name,\n      item.description,\n      inputs,\n      item.outputs,\n      item.mode,\n      item.repository,\n      item.git_hash\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '@environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map, switchMap, takeWhile } from 'rxjs/operators';\nimport { Observable, interval } from 'rxjs';\nimport { File, FileAdapter } from '@app/shared/models/file';\nimport { Workspace } from '@app/features/workspace-manager/models/workspace';\nimport { Operation, OperationAdapter } from '../models/operation';\n\n/**\n * Analyses service\n *\n * Used for running operations and getting operation results in user's workspace\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalysesService {\n  private readonly API_URL = environment.apiUrl;\n\n  constructor(\n    private httpClient: HttpClient,\n    private opAdapter: OperationAdapter,\n    private fileAdapter: FileAdapter\n  ) {}\n\n  /**\n   * Get the list of all available workspace operations.\n   *\n   */\n  getOperations(): Observable<Operation[]> {\n    return this.httpClient.get(`${this.API_URL}/operations/`).pipe(\n      map((operations: Operation[]) => {\n        operations = operations.filter(\n          operation => operation['workspace_operation'] === true // to exclude Dropbox operations and other operatins not related to workspace analysis\n        );\n        return operations.map(operation => this.opAdapter.adapt(operation));\n      })\n    );\n  }\n\n  /**\n   * Get the list of all available operation categories\n   *\n   */\n  getOperationCategories(): Observable<any> {\n    return this.httpClient.get(`${this.API_URL}/operation-categories/`);\n  }\n\n  /**\n   * Get the properties for a specific operation\n   *\n   */\n  getOperation(id: string): Observable<Operation> {\n    return this.httpClient\n      .get(`${this.API_URL}/operations/${id}/`)\n      .pipe(\n        map((operationData: Operation) => this.opAdapter.adapt(operationData))\n      );\n  }\n\n  /**\n   * Run an operation\n   *\n   */\n  executeOperation(operationId, workspaceId, inputs): Observable<any> {\n    const body = {\n      operation_id: operationId,\n      workspace_id: workspaceId,\n      job_name: inputs.job_name,\n      inputs: inputs\n    };\n\n    return this.httpClient.post(`${this.API_URL}/operations/run/`, body);\n  }\n\n  /**\n   * Get operation results\n   * Send http-request every 2 seconds if the previous request returns and the status is 202, 204 or 208\n   */\n  getExecutedOperationResult(executedOperationId: string): Observable<any> {\n    // check the status of the operation execution until the job is fully completed (i.e. status = 200)\n    const codesInProcess = [204, 202, 208]; // 204 - job is still running; 202 - job has completed and acknowledges that the 'finalization' steps have started; 208 - job has completed and the finalization has started, but has not completed\n    return interval(2000).pipe(\n      switchMap(() =>\n        this.httpClient.get(\n          `${this.API_URL}/executed-operations/${executedOperationId}/`,\n          { observe: 'response' }\n        )\n      ),\n      takeWhile(response => codesInProcess.includes(response.status), true)\n    );\n  }\n\n  /**\n   * Get the content of a workspace resource by resource id\n   */\n  getResourceContent(\n    resourceId: string,\n    pageIndex = 0,\n    pageSize = 0,\n    filters = {},\n    sorting = {}\n  ): Observable<any> {\n    let params = new HttpParams();\n\n    if (pageIndex) {\n      params = params.append('page', pageIndex.toString());\n    }\n\n    if (pageSize) {\n      params = params.append('page_size', pageSize.toString());\n    }\n\n    for (const field in filters) {\n      if (filters.hasOwnProperty(field)) {\n        // TSLint rule\n        const expression = filters[field];\n        params = params.append(field, expression.toString());\n      }\n    }\n\n    if (sorting.hasOwnProperty('sortField')) {\n      const sortDirection = sorting['sortDirection'] || 'asc';\n      params = params.append(\n        'sort_vals',\n        '[' + sortDirection + ']:' + sorting['sortField']\n      ); // query param for sorting should have the format: ?sort_vals=[asc]:pvalue,[desc]:log2FoldChange\n    }\n\n    return this.httpClient.get(\n      `${this.API_URL}/resources/${resourceId}/contents/`,\n      { params: params }\n    );\n  }\n\n  /**\n   * Get the list of executed operations of a workspace\n   */\n  getExecOperations(workspaceId: string): Observable<any> {\n    return this.httpClient.get(\n      `${this.API_URL}/executed-operations/workspace/${workspaceId}/`\n    );\n  }\n\n  /**\n   * Get the list of executed operations of a workspace in the tree format\n   */\n  getExecOperationDAG(workspaceId: string): Observable<any> {\n    return this.httpClient.get(\n      `${this.API_URL}/executed-operations/workspace/${workspaceId}/tree/`\n    );\n  }\n\n  /**\n   * Get the properies of a workspace\n   */\n  getWorkspaceDetail(id: number | string): Observable<Workspace> {\n    return <Observable<Workspace>>(\n      this.httpClient.get(`${this.API_URL}/workspaces/${id}/`)\n    );\n  }\n\n  /**\n   * Get the resources/files of a workspace that can be used for analyses\n   */\n  getAvailableResourcesByParam(\n    types: string[],\n    workspaceId: string\n  ): Observable<File[]> {\n    return <Observable<File[]>>(\n      this.httpClient.get<File[]>(`${this.API_URL}/resources/`).pipe(\n        map(data =>\n          data.filter(\n            item =>\n              types.includes(item.resource_type) &&\n              item.workspaces.some(workspace => workspace.id === workspaceId)\n          )\n        ),\n        map((data: any[]) => data.map(item => this.fileAdapter.adapt(item)))\n      )\n    );\n  }\n}\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, ElementRef, Inject, ViewChild } from '@angular/core';\nimport { FileService } from '@file-manager/services/file-manager.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { FileType } from '@app/shared/models/file-type';\n\n/**\n * Add File Dialog Component\n *\n * Modal dialog component which is used to add files to the file list\n */\n@Component({\n  selector: 'mev-add-file-dialog',\n  templateUrl: './add-file-dialog.component.html',\n  styleUrls: ['./add-file-dialog.component.scss']\n})\nexport class AddFileDialogComponent {\n  private filesToUpload: any[] = [];\n  public resourceTypes = Object.keys(FileType);\n  @ViewChild('fileUpload', { static: false }) fileUpload: ElementRef;\n  public fileNames: string[];\n  public isLargeFile: boolean;\n  public fileSelected: boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddFileDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fileService: FileService\n  ) {}\n\n  formControl = new FormControl('', [Validators.required]);\n\n  /**\n   * Function is triggered when user clicks the Select files button.\n   * Simulates clicking the hidden input element\n   *\n   */\n  onUploadBtnClick() {\n    const fileUpload = this.fileUpload.nativeElement;\n    fileUpload.click();\n  }\n\n  /**\n   * Function is triggered when user selects 1 or more files in the input element\n   *\n   * For large files a warning message is displayed\n   */\n  setFile(event) {\n    const fileSizeTreshold = 524288000;\n\n    this.filesToUpload = event.target.files;\n    if (!this.filesToUpload) {\n      return;\n    }\n    this.fileSelected = this.filesToUpload.length > 0;\n\n    // clean previous selection if exists\n    this.fileNames = [];\n    this.isLargeFile = false;\n\n    for (let i = 0; i < this.filesToUpload.length; i++) {\n      if (this.filesToUpload[i].size >= fileSizeTreshold) {\n        this.isLargeFile = true;\n      }\n      this.fileNames.push(this.filesToUpload[i].name);\n    }\n  }\n\n  /**\n   * Function is triggered when user clicks the Upload button\n   *\n   */\n  public confirmAdd(): void {\n    this.fileService.addFile(this.filesToUpload);\n  }\n\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' : '';\n  }\n\n  submit() {\n    // empty\n  }\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Locate and select one or more files on your computer.\n    <br> Then click the Upload button.</h3>\n\n  <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n\n     <div class=\"form\">\n      <button mat-raised-button color=\"accent\" (click)=\"onUploadBtnClick()\" class=\"upload-button\">\n        <mat-icon>file_upload</mat-icon>\n        Select files\n      </button>\n      <!--span *ngIf=\"file_name\" id=\"file-label\"> {{ file_name }} </span-->\n      <div *ngIf=\"fileNames\" class=\"upload-info\">\n        You selected the following file(s):\n        <ul>\n          <li *ngFor=\"let fileName of fileNames\">\n            <span id=\"file-label\"> {{ fileName }}\n            </span>\n          </li>\n        </ul>\n        <span *ngIf=\"isLargeFile\" class=\"upload-warning\"> \n          The file specified is larger than what MeV is configured to support. \n          Please use Dropbox to upload large files (>500Mb). \n        </span> \n      </div>\n      \n      <input type=\"file\" #fileUpload (change)=\"setFile($event)\" id=\"fileUpload\" name=\"upload_file\" multiple=\"multiple\" required style=\"display:none;\"/>\n      <mat-error *ngIf=\"!fileSelected\">\n        <span class=\"help-block error\" [hidden]=\"!fileSelected\">\n          File is Required\n        </span>\n      </mat-error>\n\n    </div>\n\n    <!--div class=\"form\">\n\n      <mat-form-field color=\"accent\">\n        <mat-label>Select a resource type</mat-label>\n        <mat-select [(ngModel)]=data.resource_type name=\"resource_type\" required>\n          <mat-option *ngFor=\"let type of resourceTypes\" [value]=\"type\">\n            {{ type }}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n      </mat-form-field>\n\n    </div-->\n\n    <div mat-dialog-actions>\n      <button mat-button mat-raised-button color=\"accent\" [type]=\"submit\" [disabled]=\"!(formControl.valid && fileSelected)\" [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Upload</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n    <p></p>\n  </form>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FileService } from '@file-manager/services/file-manager.service';\nimport { File } from '@app/shared/models/file';\n\n/**\n * Delete File Dialog Component\n *\n * Modal dialog component which is used to delete a file from the file list\n */\n@Component({\n  selector: 'mev-delete-file-dialog',\n  templateUrl: './delete-file-dialog.component.html',\n  styleUrls: ['./delete-file-dialog.component.scss']\n})\nexport class DeleteFileDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteFileDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: File,\n    public fileService: FileService\n  ) {}\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Function is triggered when user clicks the Delete button\n   *\n   */\n  confirmDelete(): void {\n    this.fileService.deleteFile(this.data.id);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>This file will be deleted. Are you sure?</h3>\n  <div mat-dialog-content>\n    File name: {{data.name}}\n    <p></p>\n    File type: {{ data.readable_resource_type || 'N/A' }}\n    <p></p>\n  </div>\n\n  <div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">Delete</button>\n    <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { FileService } from '@file-manager/services/file-manager.service';\nimport { FileType } from '@app/shared/models/file-type';\n\n/**\n * Edit File Dialog Component\n *\n * Modal dialog component which is used to edit a file name or file(resource) type\n */\n@Component({\n  selector: 'mev-edit-file-dialog',\n  templateUrl: './edit-file-dialog.component.html',\n  styleUrls: ['./edit-file-dialog.component.scss']\n})\nexport class EditFileDialogComponent implements OnInit {\n  public resourceTypes = {};\n\n  formControl = new FormControl('', [Validators.required]);\n\n  constructor(\n    public dialogRef: MatDialogRef<EditFileDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fileService: FileService\n  ) {}\n\n  ngOnInit() {\n    this.loadResourceTypes();\n  }\n\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Function is triggered when user clicks the Save button\n   *\n   */\n  stopEdit(): void {\n    this.fileService.updateFile(this.data);\n  }\n\n  loadResourceTypes() {\n    this.fileService.getFileTypes().subscribe((fileTypes: FileType[]) => {\n      fileTypes.forEach(\n        type =>\n          (this.resourceTypes[type.resource_type_key] = {\n            title: type.resource_type_title,\n            description: type.resource_type_description\n          })\n      );\n    });\n  }\n\n  submit() {\n    // empty stuff\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Edit File</h3>\n\n  <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n\n    <!--div class=\"form\">\n      <mat-form-field color=\"accent\">\n        <input matInput #input class=\"form-control\" placeholder=\"Id\" [(ngModel)]=\"data.id\" name=\"id\" required >\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n      </mat-form-field>\n    </div-->\n\n    <div class=\"form\">\n      <mat-form-field color=\"accent\">\n        <input matInput #input class=\"form-control\" placeholder=\"File name\" [(ngModel)]=\"data.name\" name=\"name\"\n          required>\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"form\">\n\n      <mat-form-field color=\"accent\">\n        <mat-label>Select a resource type</mat-label>\n        <mat-select [(ngModel)]=data.resource_type name=\"resource_type\" required>\n          <mat-option *ngFor=\"let type of resourceTypes | keyvalue\" [value]=\"type.key\">\n            {{ type.value.title }}\n          </mat-option>\n        </mat-select>\n        <mat-hint *ngIf=resourceTypes[data.resource_type] align=\"start\">\n          {{ resourceTypes[data.resource_type].description }}</mat-hint>\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n      </mat-form-field>\n\n    </div>\n\n    <div mat-dialog-actions>\n      <button mat-button [type]=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\"\n        (click)=\"stopEdit()\" mat-raised-button color=\"accent\">Save</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n/**\n * View File Types Dialog Component\n *\n * Modal dialog component which is used to view detailed information about file types\n */\n@Component({\n  selector: 'mev-view-file-types-dialog',\n  templateUrl: './view-file-types-dialog.component.html',\n  styleUrls: ['./view-file-types-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewFileTypesDialogComponent implements OnInit {\n  isTableShown = {\n    numeric: false,\n    integer: false,\n    feature: false,\n    expression: false,\n    count: false,\n    annotation: false\n  };\n  constructor(public dialogRef: MatDialogRef<ViewFileTypesDialogComponent>) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Function is triggered when user clicks the Show/hide example button\n   *\n   * Controls the visibility of example tables\n   */\n  toggleShow(type) {\n    this.isTableShown[type] = !this.isTableShown[type];\n  }\n}\n","<div class=\"dialog\">\n    <header>File types</header>\n    <main class=\"container\">\n        <h3>Table-based formats</h3>\n        <div>\n            <mat-icon>check</mat-icon><b>Numeric Table</b> is a table of where all the entries are numbers except the first\n            column (which names the rows) and the first line (which gives the column names). The cell at the first row and column may be left blank.\n            <a class=\"show-more-link\" (click)=\"toggleShow('numeric')\">\n                {{ isTableShown['numeric'] ? 'Hide example' : 'Show example' }}\n            </a>\n    \n            <table class=\"example-table\" *ngIf=\"isTableShown['numeric']\">\n                <tr>\n                    <th></th>\n                    <th>Sample A</th>\n                    <th>Sample B</th>\n                    <th>Sample C</th>\n                  </tr>\n                  <tr>\n                    <td>gene1</td>\n                    <td>1.1</td>\n                    <td>2.2</td>\n                    <td>3.3</td>\n                  </tr>\n                  <tr>\n                    <td>gene2</td>\n                    <td>11.1</td>\n                    <td>22.2</td>\n                    <td>33.3</td>\n                  </tr>\n                  <tr>\n                    <td>gene3</td>\n                    <td>111.1</td>\n                    <td>222.2</td>\n                    <td>333.3</td>\n                  </tr>\n            </table>\n            <br>\n            <mat-icon>check</mat-icon><b>An Integer Table</b> is a table of where all the entries are integers except the\n            first\n            column (which names the rows) and\n            the first line (which gives the column names). The cell at the first row and column may be left blank.\n            <a class=\"show-more-link\" (click)=\"toggleShow('integer')\">\n                {{ isTableShown['integer'] ? 'Hide example' : 'Show example' }}\n            </a>\n    \n            <table class=\"example-table\" *ngIf=\"isTableShown['integer']\">\n                <tr>\n                    <th></th>\n                    <th>Sample A</th>\n                    <th>Sample B</th>\n                    <th>Sample C</th>\n                  </tr>\n                  <tr>\n                    <td>gene1</td>\n                    <td>1</td>\n                    <td>2</td>\n                    <td>3</td>\n                  </tr>\n                  <tr>\n                    <td>gene2</td>\n                    <td>11</td>\n                    <td>22</td>\n                    <td>33</td>\n                  </tr>\n                  <tr>\n                    <td>gene3</td>\n                    <td>111</td>\n                    <td>222</td>\n                    <td>333</td>\n                  </tr>\n            </table>\n            <br>\n            <mat-icon>check</mat-icon><b>RNA-seq count matrix</b> is a table of where all the entries are integers except\n            the first\n            column (which names the rows)\n            and the first line (which gives the column names). The cell at the first row and column may be left blank.\n            <a class=\"show-more-link\" (click)=\"toggleShow('count')\">\n                {{ isTableShown['count'] ? 'Hide example' : 'Show example' }}\n            </a>\n    \n            <table class=\"example-table\" *ngIf=\"isTableShown['count']\">\n                <tr>\n                    <th></th>\n                    <th>Sample A</th>\n                    <th>Sample B</th>\n                    <th>Sample C</th>\n                  </tr>\n                  <tr>\n                    <td>gene1</td>\n                    <td>1</td>\n                    <td>2</td>\n                    <td>3</td>\n                  </tr>\n                  <tr>\n                    <td>gene2</td>\n                    <td>11</td>\n                    <td>22</td>\n                    <td>33</td>\n                  </tr>\n                  <tr>\n                    <td>gene3</td>\n                    <td>111</td>\n                    <td>222</td>\n                    <td>333</td>\n                  </tr>\n            </table>\n            \n            <br>\n\n            <mat-icon>check</mat-icon><b>Expression matrix</b> is a table of where all the entries are numbers except the\n            first\n            column (which names the rows) and\n            the first line (which gives the column names). The cell at the first row and column may be left blank.\n            <a class=\"show-more-link\" (click)=\"toggleShow('expression')\">\n                {{ isTableShown['expression'] ? 'Hide example' : 'Show example' }}\n            </a>\n    \n            <table class=\"example-table\" *ngIf=\"isTableShown['expression']\">\n                <tr>\n                    <th></th>\n                    <th>Sample A</th>\n                    <th>Sample B</th>\n                    <th>Sample C</th>\n                  </tr>\n                  <tr>\n                    <td>gene1</td>\n                    <td>1.1</td>\n                    <td>2.2</td>\n                    <td>3.3</td>\n                  </tr>\n                  <tr>\n                    <td>gene2</td>\n                    <td>11.1</td>\n                    <td>22.2</td>\n                    <td>33.3</td>\n                  </tr>\n                  <tr>\n                    <td>gene3</td>\n                    <td>111.1</td>\n                    <td>222.2</td>\n                    <td>333.3</td>\n                  </tr>\n            </table>\n            \n            <br>\n            <mat-icon>check</mat-icon><b>Feature table.</b> This type of file describes the \"features\" of your data. In the\n            genomics context, one example of a\n            feature is a gene. Therefore, you could use this table to give additional information about each gene, such as\n            alternative symbols, oncogene status, or similar. Each row contains information about a single gene. Note,\n            however,\n            that this concept is completely general and not restricted to information about genes or transcripts.\n            \n            <a class=\"show-more-link\" (click)=\"toggleShow('feature')\">\n                {{ isTableShown['feature'] ? 'Hide example' : 'Show example' }}\n            </a>\n    \n            <table class=\"example-table\" *ngIf=\"isTableShown['feature']\">\n                <tr>\n                    <th></th>\n                    <th>logFoldChange</th>\n                    <th>pvalue</th>\n                    <th>FDR</th>\n                  </tr>\n                  <tr>\n                    <td>gene1</td>\n                    <td>1.1</td>\n                    <td>0.03</td>\n                    <td>0.2</td>\n                  </tr>\n                  <tr>\n                    <td>gene2</td>\n                    <td>2.2</td>\n                    <td>0.01</td>\n                    <td>0.03</td>\n                  </tr>\n                  <tr>\n                    <td>gene3</td>\n                    <td>3.3</td>\n                    <td>3e-06</td>\n                    <td>0.001</td>\n                  </tr>\n            </table>\n\n            <br>\n            <mat-icon>check</mat-icon><b>Annotation table.</b> This type of file is used to add metadata to your samples.\n            The first\n            column has the sample name\n            and the remaining columns contain metadata about each sample (for instance, experimental group, treatment, or\n            similar.\n            \n            <a class=\"show-more-link\" (click)=\"toggleShow('annotation')\">\n                {{ isTableShown['annotation'] ? 'Hide example' : 'Show example' }}\n            </a>\n    \n            <table class=\"example-table\" *ngIf=\"isTableShown['annotation']\">\n                <tr>\n                    <th></th>\n                    <th>cell_type</th>\n                    <th>treatment</th>\n                  </tr>\n                  <tr>\n                    <td>Sample A</td>\n                    <td>CD4</td>\n                    <td>Y</td>\n                  </tr>\n                  <tr>\n                    <td>Sample B</td>\n                    <td>CD8</td>\n                    <td>Y</td>\n                  </tr>\n                  <tr>\n                    <td>Sample C</td>\n                    <td>Monocyte</td>\n                    <td>N</td>\n                  </tr>\n            </table>\n            <br>\n            <mat-icon>check</mat-icon><b>BED-format file</b> is a three-column BED-format file\n        </div>\n    \n        <h3>Sequence-based formats:</h3>\n        <div>\n            <mat-icon>check</mat-icon><b>Fasta</b> is FASTA-format sequence files.\n            <br>\n            <mat-icon>check</mat-icon><b>Fastq</b> is FASTQ-format sequence files. The most common format used for\n            sequencing experiments.\n            <br>\n            <mat-icon>check</mat-icon><b>Alignment (SAM/BAM)</b> is BAM or SAM-format aligned sequence files. Typically the\n            output of an alignment process.\n        </div>\n        <h3>JSON format:</h3>\n        <p>\n            <mat-icon>check</mat-icon><b>JSON-format file</b> is used for data that is not easily represented in a\n            table-based format\n        </p>\n        <h3>General Format:</h3>\n        <div>\n            <mat-icon>check</mat-icon><b>A general file</b> is typically used to denote an unspecified type.\n        </div>\n    </main>\n    <footer mat-dialog-actions class=\"btn-group\">\n        <button mat-button (click)=\"onNoClick()\" mat-raised-button color=\"accent\">Close</button>\n    </footer>\n</div>\n","import {\n  Component,\n  ElementRef,\n  OnInit,\n  ViewChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataSource } from '@angular/cdk/collections';\nimport {\n  BehaviorSubject,\n  fromEvent,\n  merge,\n  Observable,\n  Subscription\n} from 'rxjs';\nimport { map, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\nimport { NotificationService } from '@core/core.module';\nimport { FileService } from '@file-manager/services/file-manager.service';\nimport { File } from '@app/shared/models/file';\nimport { AddFileDialogComponent } from '@app/features/file-manager/components/dialogs/add-file-dialog/add-file-dialog.component';\nimport { EditFileDialogComponent } from '@app/features/file-manager/components/dialogs/edit-file-dialog/edit-file-dialog.component';\nimport { DeleteFileDialogComponent } from '@app/features/file-manager/components/dialogs/delete-file-dialog/delete-file-dialog.component';\nimport { Dropbox, DropboxChooseOptions } from '@file-manager/models/dropbox';\nimport { PreviewDialogComponent } from '@app/features/workspace-detail/components/dialogs/preview-dialog/preview-dialog.component';\nimport { ViewFileTypesDialogComponent } from '../dialogs/view-file-types-dialog/view-file-types-dialog.component';\n\ndeclare var Dropbox: Dropbox;\n\n/**\n * View File List Component\n *\n * Used to display the list of uploaded files\n */\n@Component({\n  selector: 'mev-file-list',\n  templateUrl: './file-list.component.html',\n  styleUrls: ['./file-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListComponent implements OnInit {\n  dropboxUploadInProgressMsg = '';\n  dropboxUploadCompleteMsg =\n    'File(s) uploaded successfully. Please assign the specific type for the file(s) uploaded.';\n  uploadInProgressMsg = '';\n\n  displayedColumns = [\n    'name',\n    'resource_type',\n    'status',\n    'size',\n    'created',\n    'workspace',\n    'is_active',\n    'is_public',\n    'actions'\n  ];\n  dataSource: ExampleDataSource | null;\n  id: string;\n  uploadProgressData: Map<string, object>;\n  isWait = false;\n  Object = Object;\n  private fileUploadProgressSubscription: Subscription = new Subscription();\n\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public fileService: FileService,\n    private readonly notificationService: NotificationService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n\n  ngOnInit() {\n    this.loadData();\n\n    this.fileUploadProgressSubscription = this.fileService.fileUploadsProgress.subscribe(\n      uploadProgressData => {\n        this.uploadProgressData = uploadProgressData;\n\n        // show % of upload\n        let txt = '';\n        for (const key of Object.keys(uploadProgressData)) {\n          txt += `File ${key} is ${uploadProgressData[key].percent}% uploaded. \\n`;\n        }\n        this.uploadInProgressMsg = txt;\n        this.ref.markForCheck();\n\n        // refresh table if all files are uploaded\n        const allFilesUploaded = Object.keys(uploadProgressData).every(\n          key => uploadProgressData[key].isUploaded\n        );\n        if (allFilesUploaded) {\n          this.refresh();\n          this.uploadInProgressMsg = '';\n          this.ref.markForCheck();\n        }\n      }\n    );\n  }\n\n  public ngOnDestroy(): void {\n    this.fileUploadProgressSubscription.unsubscribe();\n  }\n\n  refresh() {\n    this.loadData();\n  }\n\n  /**\n   * Open a modal dialog to upload files\n   *\n   */\n  addItem() {\n    const dialogRef = this.dialog.open(AddFileDialogComponent, {\n      data: { file: File }\n    });\n\n    dialogRef.afterClosed().subscribe(() => {});\n  }\n\n  /**\n   * Open Dropbox pop-up window to add files from Dropbox\n   *\n   */\n  addDropBoxItem() {\n    const options: DropboxChooseOptions = {\n      success: files => {\n        const fileNames = files.map(file => file.name).join(\"' ,'\");\n        this.dropboxUploadInProgressMsg = `Uploading file(s) '${fileNames}' from Dropbox...`;\n        this.ref.markForCheck();\n        const filesToUpload = files.map(file => ({\n          download_link: file.link,\n          filename: file.name\n        }));\n        this.fileService.addDropboxFile(filesToUpload).subscribe(data => {\n          this.notificationService.success(this.dropboxUploadCompleteMsg);\n          this.dropboxUploadInProgressMsg = '';\n          this.ref.markForCheck();\n          this.refresh();\n        });\n      },\n      cancel: () => {},\n      linkType: 'direct',\n      multiselect: true,\n      folderselect: false\n    };\n    Dropbox.choose(options);\n  }\n\n  /**\n   * Open a modal dialog to edit file properties\n   *\n   */\n  editItem(i: number, id: string, file_name: string, resource_type: string) {\n    this.id = id;\n    const dialogRef = this.dialog.open(EditFileDialogComponent, {\n      data: { id: id, name: file_name, resource_type: resource_type }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.refresh();\n      }\n    });\n  }\n\n  /**\n   * Open a modal dialog to view detailed information about the available file types and their formats\n   *\n   */\n  viewFileTypes() {\n    this.dialog.open(ViewFileTypesDialogComponent);\n  }\n\n  /**\n   * Open a modal dialog to preview file\n   *\n   */\n  previewItem(fileId: string) {\n    this.isWait = true;\n    this.fileService.getFilePreview(fileId).subscribe(data => {\n      const previewData = {};\n      if (data?.results?.length && 'rowname' in data.results[0]) {\n        const minN = Math.min(data.results.length, 10);\n        let slicedData = data.results.slice(0, minN);\n        const columns = Object.keys(slicedData[0].values);\n        const rows = slicedData.map(elem => elem.rowname);\n        const values = slicedData.map(elem => {\n          let rowValues = [];\n          const elemValues = elem.values;\n          columns.forEach(col => rowValues.push(elemValues[col]));\n          return rowValues;\n        });\n        previewData['columns'] = columns;\n        previewData['rows'] = rows;\n        previewData['values'] = values;\n      }\n      this.isWait = false;\n      this.ref.markForCheck();\n      this.dialog.open(PreviewDialogComponent, {\n        data: {\n          previewData: previewData\n        }\n      });\n    });\n  }\n\n  /**\n   * Open a modal dialog to delete a file\n   *\n   */\n  deleteItem(\n    i: number,\n    id: string,\n    file_name: string,\n    readable_resource_type: string\n  ) {\n    this.id = id;\n    const dialogRef = this.dialog.open(DeleteFileDialogComponent, {\n      data: {\n        id: id,\n        name: file_name,\n        readable_resource_type: readable_resource_type\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.refresh();\n      }\n    });\n  }\n\n  public loadData() {\n    this.dataSource = new ExampleDataSource(\n      this.fileService,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup')\n      .pipe(debounceTime(150), distinctUntilChanged())\n      .subscribe(() => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      });\n  }\n}\n\nexport class ExampleDataSource extends DataSource<File> {\n  _filterChange = new BehaviorSubject('');\n\n  get filter(): string {\n    return this._filterChange.value;\n  }\n\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n\n  filteredData: File[] = [];\n  renderedData: File[] = [];\n\n  constructor(\n    public _exampleDatabase: FileService,\n    public _paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\n  }\n\n  /**\n   * Connect function called by the table to retrieve one stream containing the data to render.\n   */\n  connect(): Observable<File[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page\n    ];\n    this._exampleDatabase.getAllFiles();\n\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n\n        this.filteredData = this._exampleDatabase.data\n          .slice()\n          .filter((file: File) => {\n            const searchStr = (file.name + file.workspaces).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this._paginator.pageSize\n        );\n\n        return this.renderedData;\n      })\n    );\n  }\n\n  disconnect() {}\n\n  /**\n   * Returns a sorted copy of the database data.\n   *\n   */\n  sortData(data: File[]): File[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      let propertyA: any = '';\n      let propertyB: any = '';\n\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'name':\n          [propertyA, propertyB] = [a.name, b.name];\n          break;\n        case 'resource_type':\n          [propertyA, propertyB] = [a.resource_type, b.resource_type];\n          break;\n        case 'status':\n          [propertyA, propertyB] = [a.status, b.status];\n          break;\n        case 'workspace':\n          [propertyA, propertyB] = [a.workspaces, b.workspaces];\n          break;\n        case 'url':\n          [propertyA, propertyB] = [a.url, b.url];\n          break;\n        case 'created':\n          [propertyA, propertyB] = [new Date(a.created), new Date(b.created)];\n          break;\n        case 'size':\n          [propertyA, propertyB] = [a.size, b.size];\n          break;\n      }\n\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n","<mev-spinner-overlay *ngIf=\"isWait\"></mev-spinner-overlay>\n\n<div class=\"instruction\">\n  Upload and manage your files here. The table below shows all files associated with your\n  account. After your files have been uploaded and validated, you can add them to\n  workspaces to conduct your analysis.\n  Note that we need to know what type of file we are working with. Hence, after upload, we\n  ask that you specify a file type. To learn more about the available file types and their\n  formats, <a (click)=\"viewFileTypes()\">click here</a>. If applicable, you can preview the file to check that we have parsed it correctly. If\n  something does not appear to be correct, you may have to edit your file offline and\n  upload again.\n</div>\n<div class=\"file-btn-group\">\n  <div>\n    <button mat-raised-button color=\"accent\" (click)=\"addItem()\">\n      <mat-icon aria-label=\"Upload a file from computer\">add</mat-icon>\n      Upload a file from computer\n    </button>\n    <button mat-raised-button color=\"accent\" (click)=\"addDropBoxItem()\">\n      <mat-icon fontSet=\"material-icons-outlined\" aria-label=\"Upload from Dropbox\">backup</mat-icon>\n      Upload from Dropbox\n    </button>\n  </div>\n  <button mat-raised-button color=\"accent\" (click)=\"refresh()\">\n    <mat-icon aria-label=\"Refresh\">refresh</mat-icon>\n    Refresh\n  </button>\n</div>\n\n\n<div class=\"file-list-container\">\n\n  <div class=\"form\">\n    <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n      <input matInput #filter placeholder=\"Filter files\">\n    </mat-form-field>\n  </div>\n  <div *ngIf=\"uploadInProgressMsg\" class=\"process-status\">{{ uploadInProgressMsg }}</div>\n  <div *ngIf=\"dropboxUploadInProgressMsg\" class=\"process-status\">{{ dropboxUploadInProgressMsg }}</div>\n\n  <mat-table #table [dataSource]=\"dataSource\" matSort matSortActive=\"created\" matSortDirection=\"desc\" class=\"mat-cell\">\n\n    <ng-container matColumnDef=\"id\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"file-table-header\">File name</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\" [class.warning-cell]=\"!row.resource_type\"> {{row.name}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"resource_type\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"file-table-header\">File type</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"\n        [ngClass]=\"{'warning-cell': !row.resource_type, 'warning-cell--asterisk ': !row.resource_type}\">\n        {{ row.readable_resource_type || 'Please specify file type' }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"file-table-header\">Status</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.status}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"size\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"file-table-header\">File size</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.size | byteName }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"created\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"file-table-header\">Creation date</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.created | date :'medium' }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"is_active\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"file-table-header\">Active</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.is_active ? 'Active' : 'Not active' }} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"is_public\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"file-table-header\">Public</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.is_public ? 'Public' : 'Private'}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"workspace\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"file-table-header\">Workspace(s)</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{row.workspaces}}</mat-cell>\n    </ng-container>\n\n\n    <!-- actions -->\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef class=\"file-table-header\">Actions</mat-header-cell>\n\n      <mat-cell *matCellDef=\"let row; let i=index;\">\n        <button mat-icon-button color=\"accent\" title=\"Preview\"\n          (click)=\"previewItem(row.id)\">\n          <mat-icon aria-label=\"Preview\">visibility</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"accent\" title=\"Edit\" [disabled]=\"!row.is_active\"\n          (click)=\"editItem(i, row.id, row.name, row.resource_type)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"accent\" title=\"Delete file\" [disabled]=\"!row.is_active\"\n          (click)=\"deleteItem(i, row.id, row.name, row.readable_resource_type)\">\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"accent\" title=\"Download\" disabled>\n          <mat-icon aria-label=\"Download\">get_app</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"accent\" title=\"Download to DropBox\" disabled>\n          <mat-icon aria-label=\"Download\">cloud_download</mat-icon>\n        </button>\n\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n\n  <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n    No results are available\n  </div>\n\n  <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n    [pageSizeOptions]=\"[10, 25, 100]\">\n  </mat-paginator>\n\n  <div class=\"warning-note\" [style.display]=\"dataSource.renderedData.length >= 0 ? '' : 'none'\">\n    * Please assign file types by clicking the Edit button in the table row\n  </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\nimport { FileService } from '@file-manager/services/file-manager.service';\n\n/**\n * View Progress Snackbar Component\n *\n * Used to display the progress of file uploads\n */\n@Component({\n  selector: 'mev-progress-snackbar',\n  templateUrl: './progress-snackbar.component.html',\n  styleUrls: ['./progress-snackbar.component.scss']\n})\nexport class ProgressSnackbarComponent implements OnInit {\n  uploadProgressStatus = '';\n\n  constructor(\n    public snackBarRef: MatSnackBarRef<ProgressSnackbarComponent>,\n    public fileService: FileService\n  ) {}\n\n  ngOnInit(): void {\n    this.fileService.fileUploadsProgress.subscribe(data => {\n      let txt = '';\n      for (const key of Object.keys(data)) {\n        txt += `File ${key} is ${data[key].percent}% uploaded. <br>`;\n      }\n      this.uploadProgressStatus = txt;\n    });\n  }\n}\n","<div class='progress-snackbar-wrapper'>\n    <b> Upload status:</b>\n    <button mat-icon-button class=\"close-button\"(click)=\"snackBarRef.dismiss()\">\n        <mat-icon class=\"close-icon\" color=\"accent\">close</mat-icon>\n      </button>\n    <div [innerHTML]=\"uploadProgressStatus\"></div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FileManagerRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FileManagerRoutingModule } from './file-manager-routing.module';\nimport { FileListComponent } from '@app/features/file-manager/components/file-list/file-list.component';\nimport { AddFileDialogComponent } from '@app/features/file-manager/components/dialogs/add-file-dialog/add-file-dialog.component';\nimport { EditFileDialogComponent } from '@app/features/file-manager/components/dialogs/edit-file-dialog/edit-file-dialog.component';\nimport { DeleteFileDialogComponent } from '@app/features/file-manager/components/dialogs/delete-file-dialog/delete-file-dialog.component';\nimport { ProgressSnackbarComponent } from '@file-manager/components/progress-snackbar/progress-snackbar.component';\n\nimport { SharedModule } from '@app/shared/shared.module';\nimport { ViewFileTypesDialogComponent } from './components/dialogs/view-file-types-dialog/view-file-types-dialog.component';\n\n@NgModule({\n  declarations: [\n    FileListComponent,\n    AddFileDialogComponent,\n    EditFileDialogComponent,\n    DeleteFileDialogComponent,\n    ProgressSnackbarComponent,\n    ViewFileTypesDialogComponent\n  ],\n  exports: [FileListComponent],\n  imports: [CommonModule, FileManagerRoutingModule, SharedModule]\n})\nexport class FileManagerModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, timer, forkJoin } from 'rxjs';\nimport { HttpClient, HttpEventType, HttpParams } from '@angular/common/http';\nimport {\n  map,\n  switchMap,\n  takeWhile,\n  concatMap,\n  takeUntil\n} from 'rxjs/operators';\nimport { File, FileAdapter } from '@app/shared/models/file';\nimport { environment } from '@environments/environment';\nimport { FileType } from '@app/shared/models/file-type';\nimport { AnalysesService } from '@app/features/analysis/services/analysis.service';\n\n/**\n * File service\n *\n * Used for operations with file in the File Manager\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileService {\n  private readonly API_URL = environment.apiUrl;\n  private readonly FILE_VALIDATION_PROGRESS_STATUSES = [\n    'Validating...',\n    'Processing...'\n  ];\n  private maxTime = 20000; //  check the file validation status only for the first 20 secs\n\n  dataChange: BehaviorSubject<File[]> = new BehaviorSubject<File[]>([]);\n\n  public fileUploadsProgress: BehaviorSubject<\n    Map<string, object>\n  > = new BehaviorSubject<Map<string, object>>(new Map<string, object>());\n\n  // Temporarily stores data from dialogs\n  dialogData: any;\n\n  constructor(\n    private httpClient: HttpClient,\n    private adapter: FileAdapter,\n    private analysesService: AnalysesService\n  ) {}\n\n  get data(): File[] {\n    return this.dataChange.getValue();\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  /**\n   * Get file resource list\n   *\n   */\n  getFileTypes(): Observable<FileType[]> {\n    return this.httpClient.get<FileType[]>(`${this.API_URL}/resource-types/`);\n  }\n\n  /**\n   * Get file list\n   *\n   */\n  public getAllFiles(): void {\n    // refresh the status of the resource validation process every 2 seconds\n    const maxTimer$ = timer(this.maxTime);\n    timer(0, 2000)\n      .pipe(\n        concatMap(() => this.httpClient.get(`${this.API_URL}/resources/`)),\n        map((files: File[]) => files.map(file => this.adapter.adapt(file))),\n        takeWhile(\n          files =>\n            files.some(file =>\n              this.FILE_VALIDATION_PROGRESS_STATUSES.includes(file.status)\n            ),\n          true\n        ),\n        takeUntil(maxTimer$)\n      )\n      .subscribe(data => {\n        this.dataChange.next(data);\n      });\n  }\n\n  /**\n   * Add file, post method\n   *\n   * Execute the uploads sequentially, because uploading multiple files could potentially tie-up\n   * the server since a bunch of threads would be busy ingesting the data for a long time\n   */\n  addFile(files: any[]): void {\n    const fileUploadsProgressMap = new Map<string, object>();\n\n    for (let i = 0; i < files.length; i++) {\n      fileUploadsProgressMap[files[i].name] = { percent: 0, isUploaded: false };\n    }\n    this.fileUploadsProgress.next(fileUploadsProgressMap);\n\n    for (let i = 0; i < files.length; i++) {\n      const formData = new FormData();\n      formData.set('upload_file', files[i], files[i].name);\n\n      this.httpClient\n        .post(`${this.API_URL}/resources/upload/`, formData, {\n          reportProgress: true,\n          observe: 'events'\n        })\n        .subscribe(event => {\n          switch (event.type) {\n            case HttpEventType.UploadProgress:\n              const percentDone = Math.round(\n                (event.loaded * 100) / event.total\n              );\n              fileUploadsProgressMap[files[i].name] = {\n                percent: percentDone,\n                isUploaded: false\n              };\n              this.fileUploadsProgress.next(fileUploadsProgressMap);\n              break;\n            case HttpEventType.Response:\n              fileUploadsProgressMap[files[i].name] = {\n                percent: 100,\n                isUploaded: true\n              };\n              this.fileUploadsProgress.next(fileUploadsProgressMap);\n          }\n        });\n    }\n  }\n\n  /**\n   * Add file, post method for Dropbox upload\n   *\n   */\n  addDropboxFile(files): Observable<any> {\n    return this.httpClient\n      .post(`${this.API_URL}/resources/dropbox-upload/`, files)\n      .pipe(\n        switchMap(response => {\n          return forkJoin(\n            response['upload_ids'].map(execOperationId =>\n              this.analysesService.getExecutedOperationResult(execOperationId)\n            )\n          );\n        })\n      );\n  }\n\n  /**\n   * Update file properties, put method\n   *\n   */\n  updateFile(file: File): void {\n    this.httpClient\n      .put(`${this.API_URL}/resources/${file.id}/`, file)\n      .subscribe(data => {});\n  }\n\n  /**\n   * Delete file\n   *\n   */\n  deleteFile(id: number | string): void {\n    this.httpClient.delete(`${this.API_URL}/resources/${id}/`).subscribe();\n  }\n\n  /**\n   * Preview file content\n   *\n   * Display only the first 5 rows of file\n   */\n  getFilePreview(fileId: number | string): Observable<any> {\n    const params = {\n      params: new HttpParams().set('page', '1').set('page_size', '5')\n    };\n    return <Observable<any>>(\n      this.httpClient.get(\n        `${this.API_URL}/resources/${fileId}/contents/`,\n        params\n      )\n    );\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Tutorial Component\n *\n * Display youtube player with tutorials (the Tutorial page)\n */\n@Component({\n  selector: 'mev-tutorial',\n  templateUrl: './tutorial.component.html',\n  styleUrls: ['./tutorial.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TutorialComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"container\" rtl>\n  <div class=\"row justify-content-center\">\n    <div class=\"col-md-8 form-group\">\n      <mat-card>\n        <mat-card-subtitle>Please see the\n          <a href=\"https://www.youtube.com/watch?list=PLSUXpXpbiLkJFbC3LOMgBacvNSdNpw0nv&amp;v=VqGpdotr-A4\"\n             target=\"_blank\">\n            WebMev Tutorials\n          </a>\n          playlist for more tutorials\n        </mat-card-subtitle>\n        <mat-card-content>\n          <youtube-player\n            videoId=\"VqGpdotr-A4\"\n            suggestedQuality=\"default\"\n            [height]=\"250\"\n            [width]=\"500\">\n          </youtube-player>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"offset-md-2 col-md-8\">\n\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '@app/core/authentication/authentication.service';\nimport { UserService } from '@app/core/user/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '@core/core.module';\nimport { GoogleLoginProvider, SocialAuthService } from 'angularx-social-login';\n\n/**\n * Login Component\n *\n * Support sign-in with email/password and Google sign-in\n */\n\n@Component({\n  selector: 'mev-login-form',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n\n  isUserActivated = null;\n  token: string;\n  uid: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private userService: UserService,\n    private socialAuthService: SocialAuthService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/workarea']);\n    }\n\n    // if uid and token exist, activate a new account\n    this.route.params.subscribe(params => {\n      if (params.token && params.uid) {\n        this.token = params.token;\n        this.uid = params.uid;\n        this.activateUser();\n      }\n    });\n  }\n\n  activateUser() {\n    this.isUserActivated = true;\n    this.userService.activate({ token: this.token, uid: this.uid }).subscribe(\n      data => {\n        this.isUserActivated = true;\n      },\n      err => {\n        this.isUserActivated = false;\n      }\n    );\n  }\n\n  /**\n   * Initialize login form\n   */\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  /**\n   * Convenience getter for easy access to form fields\n   */\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService\n      .login(this.f.email.value, this.f.password.value)\n      .subscribe(\n        data => {\n          this.router.navigate([this.returnUrl]);\n        },\n        error => {\n          this.loading = false;\n        }\n      );\n  }\n\n  /**\n   * Method to sign out with Google\n   */\n  signInWithGoogle(): void {\n    const socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n    this.loading = true;\n    this.socialAuthService.signIn(socialPlatformProvider).then(userData => {\n      // Google returns user data. Send user token to the server\n      localStorage.setItem('socialUser', JSON.stringify(userData));\n      this.authenticationService\n        .googleSignInExternal(userData.authToken)\n        .pipe(finalize(() => (this.loading = false)))\n        .subscribe(result => {\n          this.router.navigate(['/workarea']);\n        });\n    });\n  }\n\n  /**\n   * Generic method to sign out, regardless of Auth provider\n   */\n  signOut(): void {\n    this.socialAuthService.signOut().then(data => {\n      // debugger;\n      this.router.navigate([`/login`]);\n    });\n  }\n}\n","<div class=\"container\" rtl>\n\n\n  <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 form-group\">\n        <mat-card>\n          <div class=\"login-note-text\">\n            Sign In with Google:\n          </div>\n          <div class=\"row justify-content-center\">\n            <button type=\"button\" mat-raised-button class=\"google-button\" (click)=\"signInWithGoogle()\">\n            <span class=\"google-button__icon\">\n              <svg viewBox=\"0 0 366 372\" xmlns=\"http://www.w3.org/2000/svg\"><path\n                d=\"M125.9 10.2c40.2-13.9 85.3-13.6 125.3 1.1 22.2 8.2 42.5 21 59.9 37.1-5.8 6.3-12.1 12.2-18.1 18.3l-34.2 34.2c-11.3-10.8-25.1-19-40.1-23.6-17.6-5.3-36.6-6.1-54.6-2.2-21 4.5-40.5 15.5-55.6 30.9-12.2 12.3-21.4 27.5-27 43.9-20.3-15.8-40.6-31.5-61-47.3 21.5-43 60.1-76.9 105.4-92.4z\"\n                id=\"Shape\" fill=\"#EA4335\"/><path\n                d=\"M20.6 102.4c20.3 15.8 40.6 31.5 61 47.3-8 23.3-8 49.2 0 72.4-20.3 15.8-40.6 31.6-60.9 47.3C1.9 232.7-3.8 189.6 4.4 149.2c3.3-16.2 8.7-32 16.2-46.8z\"\n                id=\"Shape\" fill=\"#FBBC05\"/><path\n                d=\"M361.7 151.1c5.8 32.7 4.5 66.8-4.7 98.8-8.5 29.3-24.6 56.5-47.1 77.2l-59.1-45.9c19.5-13.1 33.3-34.3 37.2-57.5H186.6c.1-24.2.1-48.4.1-72.6h175z\"\n                id=\"Shape\" fill=\"#4285F4\"/><path\n                d=\"M81.4 222.2c7.8 22.9 22.8 43.2 42.6 57.1 12.4 8.7 26.6 14.9 41.4 17.9 14.6 3 29.7 2.6 44.4.1 14.6-2.6 28.7-7.9 41-16.2l59.1 45.9c-21.3 19.7-48 33.1-76.2 39.6-31.2 7.1-64.2 7.3-95.2-1-24.6-6.5-47.7-18.2-67.6-34.1-20.9-16.6-38.3-38-50.4-62 20.3-15.7 40.6-31.5 60.9-47.3z\"\n                fill=\"#34A853\"/></svg>\n            </span>\n              <span class=\"google-button__text\">Sign in with Google</span>\n            </button>\n          </div>\n          <br>\n          <mat-divider></mat-divider>\n          <div class=\"login-note-text login-note-text--centered \">\n            or with email:\n          </div>\n          <!--span class=\"d-flex justify-content-between align-items-baseline\">\n            <h2>{{ 'mev.menu.login' | translate }}</h2>\n          </span-->\n\n\n          <div class=\"msg msg--success\" *ngIf=\"isUserActivated\">\n            <span>Your account has been activated. Please use your email and password to log in</span>\n          </div>\n\n          <div class=\"msg msg--error\" *ngIf=\"isUserActivated === false\">\n            <span>Something went wrong. Your account has not been activated.</span>\n          </div>\n\n          <div class=\"row\">\n            <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n              <input matInput placeholder=\"E-mail\"\n                     formControlName=\"email\" type=\"email\">\n              <mat-error *ngIf=\"submitted && f.email.errors\">\n                E-mail is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n          <div class=\"row direction-col\">\n            <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n              <input matInput type=\"password\" placeholder=\"Password\"\n                     formControlName=\"password\">\n              <mat-error *ngIf=\"submitted && f.password.errors\">\n                Password is required\n              </mat-error>\n            </mat-form-field>  \n            <div class=\"forget-password-container\">\n              <a class=\"forget-password-link help-text\" [routerLink]=\"['/reset']\">Forgot password?</a>        \n            </div>                      \n          </div>\n          \n        \n\n          <div class=\"row buttons d-flex justify-content-center pad\">\n            <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading\"\n                    [ngClass]=\"routeAnimationsElements\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Sign in\n            </button>          \n          </div>\n\n          <div class=\"row buttons d-flex justify-content-center pad direction-col\">\n            <div class=\"help-text\">Don't have a MeV account?</div>\n            <button type=\"button\" mat-raised-button color=\"primary\" [ngClass]=\"routeAnimationsElements\"\n                    routerLink=\"/register\">\n              Register\n            </button>            \n          </div>\n\n          <!-- <div class=\"row justify-content-center\">\n            <a class=\"footer-link\" [routerLink]=\"['/reset']\">Forgot password?</a>        \n          </div> -->\n\n\n\n        </mat-card>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '@app/core/core.module';\nimport { RepeatPasswordValidator } from '@app/shared/validators/validators';\nimport { UserService } from '@app/core/user/user.service';\n\n/**\n * Password Change Component\n *\n * Display form to update user password\n */\n\n@Component({\n  selector: 'mev-password-change',\n  templateUrl: './password-change.component.html',\n  styleUrls: ['./password-change.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PasswordChangeComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n  changePasswordForm: FormGroup;\n  errorMessage: string;\n  successMessage: string;\n  loading = false;\n  submitted = false;\n  isFormValid = true;\n\n  constructor(private userService: UserService, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.changePasswordForm = this.fb.group(\n      {\n        current_password: ['', [Validators.required]],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.pattern(\n              '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-_]).{8,}$'\n            )\n          ]\n        ],\n        confirm_password: ['', [Validators.required]]\n      },\n      { validator: RepeatPasswordValidator }\n    );\n  }\n\n  /**\n   * Convenience getter for easy access to form fields\n   */\n\n  get f() {\n    return this.changePasswordForm.controls;\n  }\n\n  /**\n   * Method for the form submission\n   */\n\n  changePassword() {\n    this.submitted = true;\n    if (this.changePasswordForm.valid) {\n      this.loading = true;\n      this.submitted = false;\n      this.userService.changePassword(this.changePasswordForm.value).subscribe(\n        data => {\n          this.changePasswordForm.reset();\n          this.isFormValid = true;\n          this.errorMessage = null;\n          this.successMessage = 'Your password has been successfully updated.';\n          this.loading = false;\n        },\n        err => {\n          this.successMessage = null;\n          this.errorMessage = 'Server Side Error';\n          this.loading = false;\n        }\n      );\n    } else {\n      this.isFormValid = false;\n    }\n  }\n}\n","<div class=\"container\" rtl>\n    <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"changePassword()\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-8 form-group\">\n                <mat-card>\n                    <span class=\"d-flex justify-content-between align-items-baseline\">\n                        <h2>Change password</h2>\n                    </span>\n                    \n                    <div class=\"row\">\n                        <div class=\"msg msg--error\" *ngIf=\"errorMessage\">\n                            <span>{{ errorMessage }}</span>\n                        </div>\n                        <div class=\"msg msg--success\" *ngIf=\"successMessage\">\n                            <span>{{ successMessage }}</span>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n                            <input matInput type=\"password\" placeholder=\"Old password\" formControlName=\"current_password\"\n                                [ngClass]=\"{ 'is-invalid': submitted && f.current_password.errors }\" />\n                                <div *ngIf=\"submitted && f.current_password.errors\">\n                                <mat-error *ngIf=\"f.current_password.errors.required\">\n                                    Password is required\n                                </mat-error>\n                            </div>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"row\">\n                        <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n                            <input matInput type=\"password\" placeholder=\"New password\" formControlName=\"password\"\n                                [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                            <div *ngIf=\"submitted && f.password.errors\">\n                                <mat-error *ngIf=\"f.password.errors.required\">\n                                    Password is required\n                                </mat-error>\n                                <mat-error *ngIf=\"f.password.errors.minlength\">\n                                    New password must be at least 8 characters\n                                </mat-error>\n                                <mat-error *ngIf=\"f.password.errors.pattern\">\n                                    New password must have at least one uppercase letter, one lowercase letter, one\n                                    number\n                                    and one special character.\n                                </mat-error>\n\n                            </div>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"row\">\n                        <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n                            <input matInput type=\"password\" placeholder=\"Confirm password\"\n                                formControlName=\"confirm_password\"\n                                [ngClass]=\"{ 'is-invalid': submitted && f.confirm_password.errors }\" />\n                            <div *ngIf=\"submitted && f.confirm_password.errors\">\n                                <mat-error *ngIf=\"f.confirm_password.errors.required\">\n                                    Please confirm your password\n                                </mat-error>\n                                <mat-error *ngIf=\"f.confirm_password.errors.notMatched\">\n                                    Confirm Password does not match with password.\n                                </mat-error>\n                            </div>\n                        </mat-form-field>\n\n                    </div>\n\n                    <div class=\"row buttons d-flex justify-content-center pad\">\n                        <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading\"\n                            [ngClass]=\"routeAnimationsElements\">\n                            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                            Update password\n                        </button>\n                    </div>                    \n                </mat-card>\n            </div>\n        </div>\n    </form>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { UserService } from '@app/core/user/user.service';\nimport { NotificationService } from '@core/core.module';\nimport { AuthenticationService } from '@app/core/authentication/authentication.service';\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '@core/core.module';\nimport { RepeatPasswordValidator } from '@app/shared/validators/validators';\n\n/**\n * User Register Component\n *\n * Display user registration form\n */\n\n@Component({\n  selector: 'mev-register-form',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private userService: UserService,\n    private readonly notificationService: NotificationService\n  ) {\n    // redirect to workarea if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/workarea']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group(\n      {\n        email: ['', Validators.required],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.pattern(\n              '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-_]).{8,}$'\n            )\n          ]\n        ],\n        confirm_password: ['', [Validators.required]]\n      },\n      { validator: RepeatPasswordValidator }\n    );\n  }\n\n  /**\n   * Convenience getter for easy access to form fields\n   */\n  get f() {\n    return this.registerForm.controls;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    if (this.registerForm.valid) {\n      this.loading = true;\n      this.userService\n        .register(this.registerForm.value)\n        .pipe(first())\n        .subscribe(\n          data => {\n            this.notificationService.success(\n              'Registration is successful. Please check your email to activate your account.'\n            );\n            this.router.navigate(['/login']);\n          },\n          error => {\n            this.notificationService.error(error);\n            this.loading = false;\n          }\n        );\n    }\n  }\n}\n","<div class=\"container\" rtl>\n  <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8 form-group\">\n        <mat-card>\n          <span class=\"d-flex justify-content-between align-items-baseline\">\n            <h2>{{ 'mev.menu.register' | translate }}</h2>\n          </span>\n          <div class=\"row\">\n            <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n              <input matInput placeholder=\"E-mail\"\n                     formControlName=\"email\" type=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n              <mat-error *ngIf=\"submitted && f.email.errors\">\n                E-mail is required\n              </mat-error>\n            </mat-form-field>\n          </div>\n\n          <div class=\"row\">\n            <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n              <input matInput type=\"password\" placeholder=\"Password\"\n                     formControlName=\"password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n              <div *ngIf=\"submitted && f.password.errors\">\n                <mat-error *ngIf=\"f.password.errors.required\">\n                  Password is required\n                </mat-error>\n                <mat-error *ngIf=\"f.password.errors.minlength\">\n                  Password must be at least 8 characters\n                </mat-error>\n                <mat-error *ngIf=\"f.password.errors.pattern\">\n                  Password must have at least one uppercase letter, one lowercase letter, one number and one special character.\n                </mat-error>\n                \n              </div>\n              </mat-form-field>\n          </div>\n\n          <div class=\"row\">\n            <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n              <input matInput type=\"password\" placeholder=\"Confirm password\"\n                     formControlName=\"confirm_password\" [ngClass]=\"{ 'is-invalid': submitted && f.confirm_password.errors }\" />\n              <div *ngIf=\"submitted && f.confirm_password.errors\">\n                <mat-error *ngIf=\"f.confirm_password.errors.required\">\n                  Please confirm your password\n                </mat-error>\n                <mat-error *ngIf=\"f.confirm_password.errors.notMatched\">\n                  Confirm Password does not match with password.\n              </mat-error>\n              </div>\n              </mat-form-field>\n          </div>\n\n          <div class=\"row buttons d-flex justify-content-center pad\">\n            <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading\"\n                    [ngClass]=\"routeAnimationsElements\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Register\n            </button>\n            <button type=\"button\" mat-raised-button color=\"primary\" \n              [ngClass]=\"routeAnimationsElements\" routerLink=\"/about\">\n              Cancel\n            </button>\n          </div>\n        </mat-card>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { AuthenticationService } from '@app/core/authentication/authentication.service';\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '@core/core.module';\n\n/**\n * Request Password Reset Component\n *\n * Display form with email to allow user to reset password\n */\n\n@Component({\n  selector: 'mev-request-password-reset',\n  templateUrl: './request-password-reset.component.html',\n  styleUrls: ['./request-password-reset.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class RequestPasswordResetComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n  RequestResetForm: FormGroup;\n  forbiddenEmails: any;\n  errorMessage: string;\n  successMessage: string;\n  IsValidForm = true;\n  loading = false;\n\n  constructor(private authService: AuthenticationService) {}\n\n  ngOnInit(): void {\n    this.RequestResetForm = new FormGroup({\n      email: new FormControl(\n        null,\n        [Validators.required, Validators.email],\n        this.forbiddenEmails\n      )\n    });\n  }\n\n  RequestResetUser(form) {\n    if (form.valid) {\n      this.IsValidForm = true;\n      this.loading = true;\n      this.authService\n        .requestPasswordReset(this.RequestResetForm.value)\n        .subscribe(\n          data => {\n            this.RequestResetForm.reset();\n            this.errorMessage = null;\n            this.successMessage =\n              'We have sent you a password reset link to your e-mail. Please check your inbox.';\n            this.loading = false;\n            setTimeout(() => {\n              this.loading = false;\n            }, 2000);\n          },\n          err => {\n            this.successMessage = null;\n            this.errorMessage = 'Server Side Error';\n            this.loading = false;\n          }\n        );\n    } else {\n      this.IsValidForm = false;\n    }\n  }\n}\n","<div class=\"container\" rtl>\n      <div class=\"row justify-content-center\">\n        <div class=\"col-md-8 form-group\">\n            <mat-card>\n                <span class=\"d-flex justify-content-between align-items-baseline\">\n                  <h2>Forgot Password</h2>\n                  \n                </span>\n                <div class=\"row\">\n                    <div class=\"msg msg--info\">\n                        If you forgot your password, we can send you a link to create a new password and get back into your account.<br>\n                        Enter your email and click the Reset Password button to request a password reset.<br>\n                        Check the email address connected to your account for a password reset email.<br>\n                        From the email, click Reset password and enter a new password twice.\n                    </div>\n                    <div class=\"msg msg--error\" *ngIf=\"errorMessage\">\n                        <span>{{ errorMessage }}</span>\n                    </div>\n                    <div class=\"msg msg--success\" *ngIf=\"successMessage\">\n                        <span>{{ successMessage }}</span>\n                    </div>\n                    \n                    <form action=\"\" [formGroup]=\"RequestResetForm\" (ngSubmit)=\"RequestResetUser(RequestResetForm)\">\n\n                        <!--div class=\"form-group\">\n\n                            <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"email\"\n                                type=\"text\" id=\"email\" formControlName=\"email\" />\n                            <span *ngIf=\"!RequestResetForm.get('email').valid && !IsvalidForm\"\n                                class=\"help-block\">Please enter a valid email!</span>\n                        </div-->\n\n                        <div class=\"row\">\n                            <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n                              <input matInput placeholder=\"E-mail\"\n                                     formControlName=\"email\" type=\"email\" />\n                              <mat-error *ngIf=\"!RequestResetForm.get('email').valid && !IsValidForm\">\n                                Please enter a valid email!\n                              </mat-error>\n                            </mat-form-field>\n                          </div>\n\n                        <!--div class=\"form-group\">\n                            <div>\n                                <button type=\"submit\" class=\" btn btn-primary\">Reset\n                                    Password</button>\n                            </div>\n                        </div-->\n\n                        <div class=\"row buttons d-flex justify-content-center pad\">\n                            <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading\"\n                                    [ngClass]=\"routeAnimationsElements\">\n                              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                              Reset Password\n                            </button>                            \n                        </div>\n\n                    </form>\n                </div>\n            </mat-card>\n        </div>\n    </div>\n</div>\n\n\n\n<!--div class=\"container-fluid form\">\n    <div class=\"row form-row \">\n        <div class=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div class=\"card my-5\">\n                <div class=\"card-body\">\n                    <h5 class=\"card-title text-center\">Forgot Password</h5>\n                    <div>\n                        <div id=\"errorMsg\" *ngIf=\"errorMessage\">\n                            <span>{{errorMessage}}</span>\n                        </div>\n                        <div id=\"successMsg\" *ngIf=\"successMessage\">\n                            <span>{{successMessage}}</span>\n                        </div>\n                        <form action=\"\" [formGroup]=\"RequestResetForm\" (ngSubmit)=\"RequestResetUser(RequestResetForm)\">\n                            <div class=\"form-group\">\n                                <input _ngcontent-c0=\"\" class=\"form-control form-control-lg\" placeholder=\"email\"\n                                    type=\"text\" id=\"email\" formControlName=\"email\" />\n                                <span *ngIf=\"!RequestResetForm.get('email').valid && !IsvalidForm\"\n                                    class=\"help-block\">Please enter a valid email!</span>\n                            </div>\n                            <div class=\"form-group\">\n                                <div>\n                                    <button type=\"submit\" class=\" btn btn-primary\">Reset\n                                        Password</button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div-->","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { AuthenticationService } from '@app/core/authentication/authentication.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '@app/core/core.module';\nimport { RepeatPasswordValidator } from '@app/shared/validators/validators';\n\n/**\n * Response Password Reset Component\n *\n * Display the result of password reset operation. It is shown after the user clicks email link for reset password\n */\n\n@Component({\n  selector: 'mev-response-password-reset',\n  templateUrl: './response-password-reset.component.html',\n  styleUrls: ['./response-password-reset.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResponsePasswordResetComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n\n  responseResetForm: FormGroup;\n  errorMessage: string;\n  successMessage: string;\n  loading = false;\n  submitted = false;\n  resetToken: null;\n  uid: null;\n  CurrentState: any;\n  IsResetFormValid = true;\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) {\n    this.CurrentState = 'Wait';\n    this.route.params.subscribe(params => {\n      this.resetToken = params.token;\n      this.uid = params.uid;\n      this.VerifyToken();\n    });\n  }\n\n  ngOnInit(): void {\n    this.Init();\n  }\n\n  VerifyToken() {\n    this.CurrentState = 'Verified';\n    this.authService\n      .ValidPasswordToken({ token: this.resetToken, uid: this.uid })\n      .subscribe(\n        data => {\n          this.CurrentState = 'Verified';\n        },\n        err => {\n          this.CurrentState = 'NotVerified';\n        }\n      );\n  }\n\n  Init() {\n    this.responseResetForm = this.fb.group(\n      {\n        token: [this.resetToken],\n        uid: [this.uid],\n        password: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(8),\n            Validators.pattern(\n              '^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-_]).{8,}$'\n            )\n          ]\n        ],\n        confirm_password: ['', [Validators.required]]\n      },\n      { validator: RepeatPasswordValidator }\n    );\n  }\n\n  ResetPassword() {\n    this.submitted = true;\n    if (this.responseResetForm.valid) {\n      // this.IsResetFormValid = true;\n      this.loading = true;\n\n      this.authService\n        .confirmPasswordReset(this.responseResetForm.value)\n        .subscribe(\n          data => {\n            this.responseResetForm.reset();\n            this.IsResetFormValid = true;\n            this.errorMessage = null;\n            this.successMessage =\n              'Your password has been successfully updated. Redirecting to Sign-in page...';\n            setTimeout(() => {\n              this.successMessage = null;\n              this.router.navigate(['login']);\n            }, 5000);\n          },\n          err => {\n            this.successMessage = null;\n            this.errorMessage = 'Server Side Error';\n            this.loading = false;\n          }\n        );\n    } else {\n      this.IsResetFormValid = false;\n    }\n  }\n\n  /**\n   * Convenience getter for easy access to form fields\n   */\n  get f() {\n    return this.responseResetForm.controls;\n  }\n}\n","<div class=\"container\" rtl>\n    <form [formGroup]=\"responseResetForm\" (ngSubmit)=\"ResetPassword()\">\n        <div class=\"row justify-content-center\">\n            <div class=\"col-md-8 form-group\">\n                <mat-card>\n                    <span class=\"d-flex justify-content-between align-items-baseline\">\n                        <h2>Set New Password</h2>\n                    </span>\n\n                    <span *ngIf=\"CurrentState=='Wait'\">\n                        Please Wait...\n                    </span>\n\n                    <span *ngIf=\"CurrentState=='NotVerified'\">\n                        Invalid URL\n                    </span>\n\n                    <div *ngIf=\"CurrentState=='Verified'\">\n                        <div class=\"row\">\n                            <div class=\"msg msg--error\" *ngIf=\"errorMessage\">\n                                <span>{{ errorMessage }}</span>\n                            </div>\n                            <div class=\"msg msg--success\" *ngIf=\"successMessage\">\n                                <span>{{ successMessage }}</span>\n                            </div>\n                        </div>\n\n                        <div class=\"row\">\n                            <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n                                <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                                <div *ngIf=\"submitted && f.password.errors\">\n                                    <mat-error *ngIf=\"f.password.errors.required\">\n                                        Password is required\n                                    </mat-error>\n                                    <mat-error *ngIf=\"f.password.errors.minlength\">\n                                        Password must be at least 8 characters\n                                    </mat-error>\n                                    <mat-error *ngIf=\"f.password.errors.pattern\">\n                                        Password must have at least one uppercase letter, one lowercase letter, one\n                                        number\n                                        and one special character.\n                                    </mat-error>\n\n                                </div>\n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"row\">\n                            <mat-form-field class=\"col\" [ngClass]=\"routeAnimationsElements\">\n                                <input matInput type=\"password\" placeholder=\"Confirm password\"\n                                    formControlName=\"confirm_password\"\n                                    [ngClass]=\"{ 'is-invalid': submitted && f.confirm_password.errors }\" />\n                                <div *ngIf=\"submitted && f.confirm_password.errors\">\n                                    <mat-error *ngIf=\"f.confirm_password.errors.required\">\n                                        Please confirm your password\n                                    </mat-error>\n                                    <mat-error *ngIf=\"f.confirm_password.errors.notMatched\">\n                                        Confirm Password does not match with password.\n                                    </mat-error>\n                                </div>\n                            </mat-form-field>\n\n                        </div>\n\n                        <div class=\"row buttons d-flex justify-content-center pad\">\n                            <button type=\"submit\" mat-raised-button color=\"accent\" [disabled]=\"loading\"\n                                [ngClass]=\"routeAnimationsElements\">\n                                <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                                Update password\n                            </button>\n\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </form>\n</div>\n\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { environment } from '@environments/environment';\n\n/**\n * Workarea Component\n *\n * Container component. Used to display 2 tabs for File Manager and Workspace Manager\n */\n\n@Component({\n  selector: 'mev-workarea',\n  templateUrl: './workarea.component.html',\n  styleUrls: ['./workarea.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkareaComponent implements OnInit {\n  private readonly API_NAME = environment.appName;\n  selectedTabIndex = 0; // the first tab is default\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Gets the default tab from local storage\n   */\n\n  ngAfterViewInit() {\n    const index =\n      localStorage.getItem(`${this.API_NAME}selectedTab`) ||\n      this.selectedTabIndex;\n    this.selectedTabIndex = Number(index);\n  }\n\n  /**\n   * Method is triggered when the user clicks the Next button to show the next tab\n   */\n\n  goToNextTab() {\n    this.selectedTabIndex = 1; // update tab index\n  }\n\n  /**\n   * Method is triggered when the user switched between tab and saves the active tab to local storage\n   */\n\n  onTabChange(event: MatTabChangeEvent) {\n    localStorage.setItem(`${this.API_NAME}selectedTab`, String(event.index));\n  }\n}\n","<section class=\"workarea\">\n  <mat-tab-group animationDuration=\"0ms\" color=\"accent\" (selectedTabChange)=\"onTabChange($event)\" [(selectedIndex)]=\"selectedTabIndex\">\n    <mat-tab>\n      <ng-template mat-tab-label>\n        <mat-icon class=\"tab-icon\">file_copy</mat-icon>\n        Files\n      </ng-template>\n      <mev-file-list></mev-file-list>\n    </mat-tab>\n\n    <mat-tab>\n      <ng-template mat-tab-label>\n        <mat-icon class=\"tab-icon\">work</mat-icon>\n        Workspaces\n      </ng-template>\n      <mev-workspace-list></mev-workspace-list>\n    </mat-tab>\n\n  </mat-tab-group>\n</section>\n\n<div class=\"workarea-footer\" *ngIf=\"selectedTabIndex == 0\">\n  <button mat-raised-button color=\"accent\" (click)=\"goToNextTab()\">\n    Next\n    <mat-icon aria-label=\"Next step\">navigate_next</mat-icon>\n  </button>\n</div>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Inject\n} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n/**\n * Preview Workspace Resource Dialog Component\n *\n * Modal dialog component which is used to preview resource content\n */\n@Component({\n  selector: 'mev-preview-dialog',\n  templateUrl: './preview-dialog.component.html',\n  styleUrls: ['./preview-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PreviewDialogComponent implements OnInit {\n  previewData: any;\n\n  constructor(\n    public dialogRef: MatDialogRef<PreviewDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {\n    this.previewData = this.data.previewData;\n  }\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    // empty stuff\n  }\n}\n","<h3>Preview the data </h3>\n<p>\nPlease check that the parsing of the file worked correctly and is formatted properly. <br>\nAlso, please note that some Resource types do not support a preview.\n</p>\n\n<table *ngIf=\"(previewData | json) != '{}'\">\n    <thead>\n        <tr>\n            <th></th>\n            <th class=\"column-header\" *ngFor=\"let column of previewData.columns\">\n                {{column}}\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n\n        <tr *ngFor=\"let row of previewData.rows; index as i\">\n            <td class=\"row-header\"> {{ row }} </td>\n            <td *ngFor=\"let column of previewData.columns; index as j\">\n                {{ previewData.values[i][j] }}\n            </td>\n        </tr>\n\n    </tbody>\n</table>\n\n<div *ngIf=\"(previewData | json) == '{}'\" class=\"no-results\">\n    No preview is available\n</div>\n\n<div mat-dialog-actions class=\"btn-group\">\n    <button mat-button (click)=\"onNoClick()\" mat-raised-button color=\"accent\">Close</button>\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { WorkspaceService } from '@workspace-manager/services/workspace.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Workspace } from '@workspace-manager/models/workspace';\n\n@Component({\n  selector: 'mev-add-ws-dialog',\n  templateUrl: './add-ws-dialog.component.html',\n  styleUrls: ['./add-ws-dialog.component.scss']\n})\nexport class AddWSDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<AddWSDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Workspace,\n    public workspaceService: WorkspaceService\n  ) {}\n\n  formControl = new FormControl('', [\n    Validators.required\n    // Validators.email,\n  ]);\n\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n\n  submit() {\n    // empty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  public confirmAdd(): void {\n    this.workspaceService.addWorkspace(this.data);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Add new workspace</h3>\n\n  <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n\n    <!--div class=\"form\">\n      <mat-form-field color=\"accent\">\n        <input matInput #input class=\"form-control\" placeholder=\"Id\" [(ngModel)]=\"data.id\" name=\"id\" required >\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n      </mat-form-field>\n    </div-->\n\n    <div class=\"form\">\n      <mat-form-field color=\"accent\">\n        <input matInput #input class=\"form-control\" placeholder=\"Workspace name\" [(ngModel)]=\"data.workspace_name\" name=\"workspace_name\" required >\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div mat-dialog-actions>\n      <button mat-button mat-raised-button color=\"accent\" [type]=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n    <p></p>\n  </form>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { WorkspaceService } from '@workspace-manager/services/workspace.service';\n\n@Component({\n  selector: 'mev-delete-ws-dialog',\n  templateUrl: './delete-ws-dialog.component.html',\n  styleUrls: ['./delete-ws-dialog.component.scss']\n})\nexport class DeleteWSDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteWSDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public workspaceService: WorkspaceService\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmDelete(): void {\n    this.workspaceService.deleteWorkspace(this.data.id);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>This workspace will be deleted. Are you sure?\n    (Note that your files will NOT be deleted)\n  </h3>\n  <div mat-dialog-content>\n    Id: {{data.id}}\n    <p></p>\n    Workspace name: {{data.workspace_name}}\n    <p></p>\n  </div>\n\n  <div mat-dialog-actions>\n    <button mat-button [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">Delete</button>\n    <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n  </div>\n</div>\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Component, Inject } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { WorkspaceService } from '@workspace-manager/services/workspace.service';\n@Component({\n  selector: 'mev-edit-ws-dialog',\n  templateUrl: './edit-ws-dialog.component.html',\n  styleUrls: ['./edit-ws-dialog.component.scss']\n})\nexport class EditWSDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<EditWSDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public workspaceService: WorkspaceService\n  ) {}\n\n  formControl = new FormControl('', [\n    Validators.required\n    // Validators.email,\n  ]);\n\n  getErrorMessage() {\n    return this.formControl.hasError('required')\n      ? 'Required field'\n      : this.formControl.hasError('email')\n      ? 'Not a valid email'\n      : '';\n  }\n\n  submit() {\n    // empty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  stopEdit(): void {\n    this.workspaceService.updateWorkspace(this.data);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Edit Workspace</h3>\n\n  <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n\n    <!--div class=\"form\">\n      <mat-form-field color=\"accent\">\n        <input matInput #input class=\"form-control\" placeholder=\"Id\" [(ngModel)]=\"data.id\" name=\"id\" required >\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n      </mat-form-field>\n    </div-->\n\n    <div class=\"form\">\n      <mat-form-field color=\"accent\">\n        <input matInput #input class=\"form-control\" placeholder=\"Workspace name\" [(ngModel)]=\"data.workspace_name\" name=\"workspace_name\" required >\n        <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div mat-dialog-actions>\n      <button mat-button [type]=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\" (click)=\"stopEdit()\"\n      mat-raised-button color=\"accent\">Save</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n  </form>\n</div>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\nimport { map, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\nimport { WorkspaceService } from '@workspace-manager/services/workspace.service';\nimport { Workspace } from '@workspace-manager/models/workspace';\nimport { AddWSDialogComponent } from '@app/features/workspace-manager/components/dialogs/add-ws-dialog/add-ws-dialog.component';\nimport { EditWSDialogComponent } from '@app/features/workspace-manager/components/dialogs/edit-ws-dialog/edit-ws-dialog.component';\nimport { DeleteWSDialogComponent } from '@app/features/workspace-manager/components/dialogs/delete-ws-dialog/delete-ws-dialog.component';\n\n@Component({\n  selector: 'mev-workspace-list',\n  templateUrl: './workspace-list.component.html',\n  styleUrls: ['./workspace-list.component.scss']\n})\nexport class WorkspaceListComponent implements OnInit {\n  displayedColumns = [\n    'workspace_name',\n    'created',\n    'accessed',\n    'file_number',\n    'actions'\n  ];\n  dataSource: ExampleDataSource | null;\n  id: string;\n\n  constructor(\n    public httpClient: HttpClient,\n    public dialog: MatDialog,\n    public workspaceService: WorkspaceService\n  ) {}\n\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n  @ViewChild('filter', { static: true }) filter: ElementRef;\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  refresh() {\n    this.loadData();\n  }\n\n  addItem() {\n    const dialogRef = this.dialog.open(AddWSDialogComponent, {\n      data: { workspace: Workspace }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.refresh();\n      }\n    });\n  }\n\n  editItem(i: number, id: string, workspace_name: string) {\n    this.id = id;\n    const dialogRef = this.dialog.open(EditWSDialogComponent, {\n      data: { id: id, workspace_name: workspace_name }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.refresh();\n      }\n    });\n  }\n\n  deleteItem(i: number, id: string, workspace_name: string) {\n    this.id = id;\n    const dialogRef = this.dialog.open(DeleteWSDialogComponent, {\n      data: { id: id, workspace_name: workspace_name }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.refresh();\n      }\n    });\n  }\n\n  public loadData() {\n    this.dataSource = new ExampleDataSource(\n      this.workspaceService,\n      this.paginator,\n      this.sort\n    );\n    fromEvent(this.filter.nativeElement, 'keyup')\n      .pipe(debounceTime(150), distinctUntilChanged())\n      .subscribe(() => {\n        if (!this.dataSource) {\n          return;\n        }\n        this.dataSource.filter = this.filter.nativeElement.value;\n      });\n  }\n}\n\nexport class ExampleDataSource extends DataSource<Workspace> {\n  _filterChange = new BehaviorSubject('');\n\n  get filter(): string {\n    return this._filterChange.value;\n  }\n\n  set filter(filter: string) {\n    this._filterChange.next(filter);\n  }\n\n  filteredData: Workspace[] = [];\n  renderedData: Workspace[] = [];\n\n  constructor(\n    public _exampleDatabase: WorkspaceService,\n    public _paginator: MatPaginator,\n    public _sort: MatSort\n  ) {\n    super();\n    // Reset to the first page when the user changes the filter.\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\n  }\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Workspace[]> {\n    // Listen for any changes in the base data, sorting, filtering, or pagination\n    const displayDataChanges = [\n      this._exampleDatabase.dataChange,\n      this._sort.sortChange,\n      this._filterChange,\n      this._paginator.page\n    ];\n\n    this._exampleDatabase.getAllWorkspaces();\n\n    return merge(...displayDataChanges).pipe(\n      map(() => {\n        // Filter data\n        this.filteredData = this._exampleDatabase.data\n          .slice()\n          .filter((workspace: Workspace) => {\n            const searchStr = (\n              workspace.id + workspace.workspace_name\n            ).toLowerCase();\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\n          });\n\n        // Sort filtered data\n        const sortedData = this.sortData(this.filteredData.slice());\n\n        // Grab the page's slice of the filtered sorted data.\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\n        this.renderedData = sortedData.splice(\n          startIndex,\n          this._paginator.pageSize\n        );\n        return this.renderedData;\n      })\n    );\n  }\n\n  disconnect() {}\n\n  /** Returns a sorted copy of the database data. */\n  sortData(data: Workspace[]): Workspace[] {\n    if (!this._sort.active || this._sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      let propertyA: number | string | Date = '';\n      let propertyB: number | string | Date = '';\n\n      switch (this._sort.active) {\n        case 'id':\n          [propertyA, propertyB] = [a.id, b.id];\n          break;\n        case 'workspace_name':\n          [propertyA, propertyB] = [a.workspace_name, b.workspace_name];\n          break;\n        case 'url':\n          [propertyA, propertyB] = [a.url, b.url];\n          break;\n        case 'created':\n          [propertyA, propertyB] = [a.created, b.created];\n          break;\n      }\n\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\n\n      return (\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\n      );\n    });\n  }\n}\n","<div class=\"instruction\">\n  To keep your different projects separate, we require that all your analyses are run in the\n  context of a ‘workspace.’ Navigate to your workspaces below, or create a new one to get\n  started.\n</div>\n\n<div class=\"workspace-btn-group\">\n  <button mat-raised-button color=\"accent\" (click)=\"addItem()\">\n    <mat-icon aria-label=\"Create a workspace\">add</mat-icon> Create a workspace\n  </button>\n  <button mat-raised-button color=\"accent\" (click)=\"refresh()\">\n    <mat-icon aria-label=\"Refresh\">refresh</mat-icon> Refresh\n  </button>\n</div>\n\n\n<div class=\"workspace-list-container\">\n\n  <div class=\"form\">\n    <mat-form-field floatPlaceholder=\"never\" color=\"accent\">\n      <input matInput #filter placeholder=\"Filter workspaces\">\n    </mat-form-field>\n  </div>\n\n  <mat-table #table [dataSource]=\"dataSource\" matSort matSortActive=\"accessed\" matSortDirection=\"desc\" class=\"mat-cell\">\n\n    <ng-container matColumnDef=\"id\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">{{ row.id }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"workspace_name\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"workspace-table-header\">Workspace name</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\">\n        <a [routerLink]=\"['/workspace', row.id]\">\n          {{ row.workspace_name }}\n        </a>\n      </mat-cell>\n\n    </ng-container>\n\n    <ng-container matColumnDef=\"created\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"workspace-table-header\">Created date</mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.created | date :'medium' }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"accessed\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"workspace-table-header\">Last accessed date\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.accessed | date :'medium' }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"file_number\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header class=\"workspace-table-header\">Number of files\n      </mat-header-cell>\n      <mat-cell *matCellDef=\"let row\"> {{ row.file_number }}</mat-cell>\n    </ng-container>\n\n\n    <!-- actions -->\n    <ng-container matColumnDef=\"actions\">\n      <mat-header-cell *matHeaderCellDef class=\"workspace-table-header\">Actions</mat-header-cell>\n\n      <mat-cell *matCellDef=\"let row; let i=index;\">\n        <button mat-icon-button color=\"accent\" title=\"Edit workspace\" (click)=\"editItem(i, row.id, row.workspace_name)\">\n          <mat-icon aria-label=\"Edit\">edit</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"accent\" title=\"Delete workspace\"\n          (click)=\"deleteItem(i, row.id, row.workspace_name)\">\n          <mat-icon aria-label=\"Delete\">delete</mat-icon>\n        </button>\n\n        <button mat-icon-button color=\"accent\" title=\"Go to workspace\" [routerLink]=\"['/workspace', row.id]\">\n          <mat-icon aria-label=\"Go to workspace\">launch</mat-icon>\n        </button>\n\n      </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  </mat-table>\n\n\n  <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\n    No results are available\n  </div>\n\n  <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\n    [pageSizeOptions]=\"[10, 25, 100]\">\n  </mat-paginator>\n</div>","import { Injectable } from '@angular/core';\n\nexport class Workspace {\n  constructor(\n    public id: string,\n    public workspace_name: string,\n    public created: Date,\n    public url: string\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WorkspaceAdapter {\n  adapt(item: any): Workspace {\n    const re = /[()]/g;\n    const created_formatted = item.created.replace(re, '');\n    return new Workspace(\n      item.id, \n      item.workspace_name, \n      new Date(created_formatted), \n      item.url\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Workspace, WorkspaceAdapter } from '../models/workspace';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkspaceService {\n  private readonly API_URL = environment.apiUrl + '/workspaces';\n\n  dataChange: BehaviorSubject<Workspace[]> = new BehaviorSubject<Workspace[]>(\n    []\n  );\n\n  // Temporarily stores data from dialogs\n  dialogData: any;\n\n  constructor(\n    private httpClient: HttpClient,\n    private adapter: WorkspaceAdapter\n  ) {}\n\n  get data(): Workspace[] {\n    return this.dataChange.value;\n  }\n\n  getDialogData() {\n    return this.dialogData;\n  }\n\n  getAllWorkspaces(): void {\n    this.httpClient\n      .get<Workspace[]>(`${this.API_URL}/`)\n      .pipe(map((data: any[]) => data.map(item => this.adapter.adapt(item))))\n      .subscribe(data => {\n        this.dataChange.next(data);\n      });\n  }\n\n  // ADD, POST METHOD\n  addWorkspace(workspace: Workspace): void {\n    this.httpClient.post(`${this.API_URL}/`, workspace).subscribe(data => {\n      this.dialogData = workspace;\n    });\n  }\n\n  // UPDATE, PUT METHOD\n  updateWorkspace(workspace: Workspace): void {\n    this.httpClient\n      .put(`${this.API_URL}/${workspace.id}/`, workspace)\n      .subscribe(data => {\n        this.dialogData = workspace;\n      });\n  }\n\n  // DELETE METHOD\n  deleteWorkspace(id: number): void {\n    this.httpClient.delete(`${this.API_URL}/${id}/`).subscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WorkspaceManagerRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { WorkspaceManagerRoutingModule } from './workspace-manager-routing.module';\nimport { WorkspaceListComponent } from './components/workspace-list/workspace-list.component';\nimport { AddWSDialogComponent } from './components/dialogs/add-ws-dialog/add-ws-dialog.component';\nimport { DeleteWSDialogComponent } from './components/dialogs/delete-ws-dialog/delete-ws-dialog.component';\nimport { EditWSDialogComponent } from './components/dialogs/edit-ws-dialog/edit-ws-dialog.component';\nimport { SharedModule } from '@app/shared/shared.module';\n\n@NgModule({\n  declarations: [\n    WorkspaceListComponent,\n    AddWSDialogComponent,\n    DeleteWSDialogComponent,\n    EditWSDialogComponent\n  ],\n  exports: [WorkspaceListComponent],\n  imports: [CommonModule, WorkspaceManagerRoutingModule, SharedModule]\n})\nexport class WorkspaceManagerModule {}\n","import { AuthenticationService } from '@app/core/authentication/authentication.service';\n\nexport function jwtOptionsFactory(authService: AuthenticationService) {\n  return {\n    tokenGetter: () => {\n      return authService.getJwtToken();\n    },\n    whitelistedDomains: ['35.194.76.64', 'localhost'],\n    blacklistedRoutes: [\n      'http://35.194.76.64/api/token/',\n      'http://localhost:8000/api/token/'\n    ]\n  };\n}\n","import { ErrorHandler, Injectable } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport * as Sentry from '@sentry/browser';\n\nSentry.init({\n  dsn: 'http://073dd22ef4a5468b8d9b532111756e08@35.199.2.238:9000/2',\n  // TryCatch has to be configured to disable XMLHttpRequest wrapping, as we are going to handle\n  // http module exceptions manually in Angular's ErrorHandler and we don't want it to capture the same error twice.\n  // Please note that TryCatch configuration requires at least @sentry/browser v5.16.0.\n  integrations: [\n    new Sentry.Integrations.TryCatch({\n      XMLHttpRequest: false\n    })\n  ]\n});\n\n@Injectable()\nexport class SentryErrorHandler implements ErrorHandler {\n  constructor() {}\n\n  extractError(error) {\n    // Try to unwrap zone.js error.\n    // https://github.com/angular/angular/blob/master/packages/core/src/util/errors.ts\n    if (error && error.ngOriginalError) {\n      error = error.ngOriginalError;\n    }\n\n    // We can handle messages and Error objects directly.\n    if (typeof error === 'string' || error instanceof Error) {\n      return error;\n    }\n\n    // If it's http module error, extract as much information from it as we can.\n    if (error instanceof HttpErrorResponse) {\n      // The `error` property of http exception can be either an `Error` object, which we can use directly...\n      if (error.error instanceof Error) {\n        return error.error;\n      }\n\n      // ... or an`ErrorEvent`, which can provide us with the message but no stack...\n      if (error.error instanceof ErrorEvent) {\n        return error.error.message;\n      }\n\n      // ...or the request body itself, which we can use as a message instead.\n      if (typeof error.error === 'string') {\n        return `Server returned code ${error.status} with body \"${error.error}\"`;\n      }\n\n      // If we don't have any detailed information, fallback to the request message itself.\n      return error.message;\n    }\n\n    // Skip if there's no error, and let user decide what to do with it.\n    return null;\n  }\n\n  handleError(error) {\n    const extractedError = this.extractError(error) || 'Handled unknown error';\n\n    // Capture handled exception and send it to Sentry.\n    const eventId = Sentry.captureException(extractedError);\n\n    // When in development mode, log the error to console for immediate feedback.\n    if (!environment.production) {\n      console.error(extractedError);\n    }\n\n    // Optionally show user dialog to provide details on what happened.\n    Sentry.showReportDialog({ eventId });\n  }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Spinner Overlay Component\n *\n * Used as an indicator of progress\n */\n@Component({\n  selector: 'mev-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerOverlayComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"overlay\">\n    <div class=\"center\">\n      <mat-spinner color=\"accent\" diameter=\"40\"></mat-spinner>\n    </div>\n</div>","import { Directive, ElementRef, OnInit, OnDestroy } from '@angular/core';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: '[rtl]' // tslint:disable-line\r\n})\r\nexport class RtlSupportDirective implements OnInit, OnDestroy {\r\n  private subscription: Subscription;\r\n  constructor(private el: ElementRef, public translate: TranslateService) {\r\n    el.nativeElement.style.textAlign =\r\n      translate.currentLang === 'he' ? 'right' : 'left';\r\n    el.nativeElement.style.direction =\r\n      translate.currentLang === 'he' ? 'rtl' : 'ltr';\r\n  }\r\n  ngOnInit() {\r\n    this.subscription = this.translate.onLangChange.subscribe(\r\n      (event: LangChangeEvent) => {\r\n        this.el.nativeElement.style.textAlign =\r\n          event.lang === 'he' ? 'right' : 'left';\r\n        this.el.nativeElement.style.direction =\r\n          event.lang === 'he' ? 'rtl' : 'ltr';\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","/**\n * File types\n *\n * These types are restricted to a set of common file formats.\n */\n\nexport class FileType {\n  resource_type_key: string;\n  resource_type_title: string;\n  resource_type_description: string;\n\n  constructor(\n    options: {\n      resource_type_key?: string;\n      resource_type_title?: string;\n      resource_type_description?: string;\n    } = {}\n  ) {\n    this.resource_type_key = options.resource_type_key;\n    this.resource_type_title = options.resource_type_title;\n    this.resource_type_description = options.resource_type_description;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Workspace } from '@app/features/workspace-manager/models/workspace';\n\n/**\n * File or Resource\n *\n * Resource instance is created when MEV users upload files.\n * Resource instances are initially \"unattached\" meaning they are associated with their owner,\n * but have not been associated with any user workspaces.\n * Admins can, however, specify a Workspace in their request to create the Resource directly via the API.\n */\n\nexport class File {\n  constructor(\n    public id: string,\n    public url: string,\n    public name: string,\n    public resource_type: string, // FileType\n    public readable_resource_type: string,\n    public owner_email: string,\n    public is_active: boolean,\n    public is_public: boolean,\n    public status: string,\n    public workspaces: Workspace[],\n    public created: Date,\n    public size: number\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FileAdapter {\n  adapt(item: any): File {\n    const re = /[()]/g;\n    const created_formatted = item.created.replace(re, '');\n\n    const workspace_names = item.workspaces\n      .map(ws => ws.workspace_name)\n      .join(', ');\n\n    return new File(\n      item.id,\n      item.url,\n      item.name,\n      item.resource_type,\n      item.readable_resource_type,\n      item.owner_email,\n      item.is_active,\n      item.is_public,\n      item.status,\n      workspace_names,\n      new Date(created_formatted),\n      item.size\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe for converting file size from Bytes to KB, MB, GB, etc\n */\n@Pipe({\n  name: 'byteName'\n})\nexport class ByteNamePipe implements PipeTransform {\n  transform(bytes: any): string {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const decimals = 2;\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport {\n  FontAwesomeModule,\n  FaIconLibrary\n} from '@fortawesome/angular-fontawesome';\nimport {\n  faPlus,\n  faEdit,\n  faTrash,\n  faTimes,\n  faCaretUp,\n  faCaretDown,\n  faExclamationTriangle,\n  faFilter,\n  faTasks,\n  faCheck,\n  faSquare,\n  faLanguage,\n  faPaintBrush,\n  faLightbulb,\n  faWindowMaximize,\n  faStream,\n  faBook\n} from '@fortawesome/free-solid-svg-icons';\nimport { faMediumM, faGithub } from '@fortawesome/free-brands-svg-icons';\n\nimport { RtlSupportDirective } from './directives/rtl-support/rtl-support.directive';\nimport { MatSortModule } from '@angular/material/sort';\nimport { ByteNamePipe } from '@app/shared/pipes/byte-name.pipe';\nimport { SpinnerOverlayComponent } from './components/spinner-overlay/spinner-overlay.component';\n\nconst MatModules = [\n  MatButtonModule,\n  MatSelectModule,\n  MatTabsModule,\n  MatInputModule,\n  MatProgressSpinnerModule,\n  MatChipsModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatGridListModule,\n  MatListModule,\n  MatMenuModule,\n  MatIconModule,\n  MatTooltipModule,\n  MatExpansionModule,\n  MatSnackBarModule,\n  MatSlideToggleModule,\n  MatDividerModule,\n  MatProgressBarModule,\n  MatDialogModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule,\n  MatSliderModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatRippleModule,\n  MatToolbarModule,\n  MatButtonToggleModule,\n  MatTreeModule\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n\n    TranslateModule,\n    ...MatModules,\n    FontAwesomeModule\n  ],\n  declarations: [RtlSupportDirective, ByteNamePipe, SpinnerOverlayComponent],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    TranslateModule,\n    ...MatModules,\n    FontAwesomeModule,\n    RtlSupportDirective,\n    ByteNamePipe,\n    SpinnerOverlayComponent\n  ]\n})\nexport class SharedModule {\n  constructor(faIconLibrary: FaIconLibrary) {\n    faIconLibrary.addIcons(\n      faGithub,\n      faMediumM,\n      faPlus,\n      faEdit,\n      faTrash,\n      faTimes,\n      faCaretUp,\n      faCaretDown,\n      faExclamationTriangle,\n      faFilter,\n      faTasks,\n      faCheck,\n      faSquare,\n      faLanguage,\n      faPaintBrush,\n      faLightbulb,\n      faWindowMaximize,\n      faStream,\n      faBook\n    );\n  }\n}\n","import { FormGroup } from '@angular/forms';\n\n/**\n * Password validator\n *\n * Used to validate passwords for Registration, Password Change and Password Reset forms\n */\nexport function RepeatPasswordValidator(passwordFormGroup: FormGroup) {\n  const new_password = passwordFormGroup.controls.password.value;\n  const confirm_password = passwordFormGroup.controls.confirm_password.value;\n\n  if (!confirm_password || !new_password) {\n    passwordFormGroup.controls.confirm_password.setErrors(null);\n  }\n\n  if (confirm_password !== new_password) {\n    passwordFormGroup.controls.confirm_password.setErrors({\n      notMatched: true\n    });\n  } else {\n    passwordFormGroup.controls.confirm_password.setErrors(null);\n  }\n}\n","export default __webpack_public_path__ + \"logo.png\";","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nconst packageJson = require('../../../../package.json');\n\nexport const environment = {\n  appName: 'Web MeV',\n  envName: 'DEV',\n  production: false,\n  test: false,\n  apiUrl: 'http://35.194.76.64/api',\n  i18nPrefix: '',\n  versions: {\n    app: packageJson.version,\n    angular: packageJson.dependencies['@angular/core'],\n    ngrx: packageJson.dependencies['@ngrx/store'],\n    material: packageJson.dependencies['@angular/material'],\n    bootstrap: packageJson.dependencies.bootstrap,\n    rxjs: packageJson.dependencies.rxjs,\n    ngxtranslate: packageJson.dependencies['@ngx-translate/core'],\n    fontAwesome: packageJson.dependencies['@fortawesome/fontawesome-free'],\n    angularCli: packageJson.devDependencies['@angular/cli'],\n    typescript: packageJson.devDependencies['typescript'],\n    cypress: packageJson.devDependencies['cypress']\n  }\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}