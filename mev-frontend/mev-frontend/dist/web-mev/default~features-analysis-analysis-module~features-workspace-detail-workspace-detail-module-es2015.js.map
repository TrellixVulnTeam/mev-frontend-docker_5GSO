{"version":3,"sources":["/mev-frontend/node_modules/d3-array/src/array.js","/mev-frontend/node_modules/d3-array/src/ascending.js","/mev-frontend/node_modules/d3-array/src/bin.js","/mev-frontend/node_modules/d3-array/src/bisect.js","/mev-frontend/node_modules/d3-array/src/bisector.js","/mev-frontend/node_modules/d3-array/src/constant.js","/mev-frontend/node_modules/d3-array/src/count.js","/mev-frontend/node_modules/d3-array/src/cross.js","/mev-frontend/node_modules/d3-array/src/cumsum.js","/mev-frontend/node_modules/d3-array/src/descending.js","/mev-frontend/node_modules/d3-array/src/deviation.js","/mev-frontend/node_modules/d3-array/src/extent.js","/mev-frontend/node_modules/d3-array/src/fsum.js","/mev-frontend/node_modules/d3-array/src/greatest.js","/mev-frontend/node_modules/d3-array/src/greatestIndex.js","/mev-frontend/node_modules/d3-array/src/group.js","/mev-frontend/node_modules/d3-array/src/identity.js","/mev-frontend/node_modules/d3-array/src/index.js","/mev-frontend/node_modules/d3-array/src/least.js","/mev-frontend/node_modules/d3-array/src/leastIndex.js","/mev-frontend/node_modules/d3-array/src/max.js","/mev-frontend/node_modules/d3-array/src/maxIndex.js","/mev-frontend/node_modules/d3-array/src/mean.js","/mev-frontend/node_modules/d3-array/src/median.js","/mev-frontend/node_modules/d3-array/src/merge.js","/mev-frontend/node_modules/d3-array/src/min.js","/mev-frontend/node_modules/d3-array/src/minIndex.js","/mev-frontend/node_modules/d3-array/src/number.js","/mev-frontend/node_modules/d3-array/src/pairs.js","/mev-frontend/node_modules/d3-array/src/permute.js","/mev-frontend/node_modules/d3-array/src/quantile.js","/mev-frontend/node_modules/d3-array/src/quickselect.js","/mev-frontend/node_modules/d3-array/src/range.js","/mev-frontend/node_modules/d3-array/src/scan.js","/mev-frontend/node_modules/d3-array/src/shuffle.js","/mev-frontend/node_modules/d3-array/src/sum.js","/mev-frontend/node_modules/d3-array/src/threshold/freedmanDiaconis.js","/mev-frontend/node_modules/d3-array/src/threshold/scott.js","/mev-frontend/node_modules/d3-array/src/threshold/sturges.js","/mev-frontend/node_modules/d3-array/src/ticks.js","/mev-frontend/node_modules/d3-array/src/transpose.js","/mev-frontend/node_modules/d3-array/src/variance.js","/mev-frontend/node_modules/d3-array/src/zip.js","/mev-frontend/node_modules/d3-axis/src/array.js","/mev-frontend/node_modules/d3-axis/src/axis.js","/mev-frontend/node_modules/d3-axis/src/identity.js","/mev-frontend/node_modules/d3-axis/src/index.js","/mev-frontend/node_modules/d3-brush/src/brush.js","/mev-frontend/node_modules/d3-brush/src/constant.js","/mev-frontend/node_modules/d3-brush/src/event.js","/mev-frontend/node_modules/d3-brush/src/index.js","/mev-frontend/node_modules/d3-brush/src/noevent.js","/mev-frontend/node_modules/d3-chord/src/array.js","/mev-frontend/node_modules/d3-chord/src/chord.js","/mev-frontend/node_modules/d3-chord/src/constant.js","/mev-frontend/node_modules/d3-chord/src/index.js","/mev-frontend/node_modules/d3-chord/src/math.js","/mev-frontend/node_modules/d3-chord/src/ribbon.js","/mev-frontend/node_modules/d3-collection/src/entries.js","/mev-frontend/node_modules/d3-collection/src/index.js","/mev-frontend/node_modules/d3-collection/src/keys.js","/mev-frontend/node_modules/d3-collection/src/map.js","/mev-frontend/node_modules/d3-collection/src/nest.js","/mev-frontend/node_modules/d3-collection/src/set.js","/mev-frontend/node_modules/d3-collection/src/values.js","/mev-frontend/node_modules/d3-color/src/color.js","/mev-frontend/node_modules/d3-color/src/cubehelix.js","/mev-frontend/node_modules/d3-color/src/define.js","/mev-frontend/node_modules/d3-color/src/index.js","/mev-frontend/node_modules/d3-color/src/lab.js","/mev-frontend/node_modules/d3-color/src/math.js","/mev-frontend/node_modules/d3-contour/src/area.js","/mev-frontend/node_modules/d3-contour/src/array.js","/mev-frontend/node_modules/d3-contour/src/ascending.js","/mev-frontend/node_modules/d3-contour/src/blur.js","/mev-frontend/node_modules/d3-contour/src/constant.js","/mev-frontend/node_modules/d3-contour/src/contains.js","/mev-frontend/node_modules/d3-contour/src/contours.js","/mev-frontend/node_modules/d3-contour/src/density.js","/mev-frontend/node_modules/d3-contour/src/index.js","/mev-frontend/node_modules/d3-contour/src/noop.js","/mev-frontend/node_modules/d3-dag/dist/d3-dag.esm.js","/mev-frontend/node_modules/d3-delaunay/src/delaunay.js","/mev-frontend/node_modules/d3-delaunay/src/index.js","/mev-frontend/node_modules/d3-delaunay/src/path.js","/mev-frontend/node_modules/d3-delaunay/src/polygon.js","/mev-frontend/node_modules/d3-delaunay/src/voronoi.js","/mev-frontend/node_modules/d3-dispatch/src/dispatch.js","/mev-frontend/node_modules/d3-dispatch/src/index.js","/mev-frontend/node_modules/d3-drag/src/constant.js","/mev-frontend/node_modules/d3-drag/src/drag.js","/mev-frontend/node_modules/d3-drag/src/event.js","/mev-frontend/node_modules/d3-drag/src/index.js","/mev-frontend/node_modules/d3-drag/src/nodrag.js","/mev-frontend/node_modules/d3-drag/src/noevent.js","/mev-frontend/node_modules/d3-dsv/src/autoType.js","/mev-frontend/node_modules/d3-dsv/src/csv.js","/mev-frontend/node_modules/d3-dsv/src/dsv.js","/mev-frontend/node_modules/d3-dsv/src/index.js","/mev-frontend/node_modules/d3-dsv/src/tsv.js","/mev-frontend/node_modules/d3-ease/src/back.js","/mev-frontend/node_modules/d3-ease/src/bounce.js","/mev-frontend/node_modules/d3-ease/src/circle.js","/mev-frontend/node_modules/d3-ease/src/cubic.js","/mev-frontend/node_modules/d3-ease/src/elastic.js","/mev-frontend/node_modules/d3-ease/src/exp.js","/mev-frontend/node_modules/d3-ease/src/index.js","/mev-frontend/node_modules/d3-ease/src/linear.js","/mev-frontend/node_modules/d3-ease/src/math.js","/mev-frontend/node_modules/d3-ease/src/poly.js","/mev-frontend/node_modules/d3-ease/src/quad.js","/mev-frontend/node_modules/d3-ease/src/sin.js","/mev-frontend/node_modules/d3-fetch/src/blob.js","/mev-frontend/node_modules/d3-fetch/src/buffer.js","/mev-frontend/node_modules/d3-fetch/src/dsv.js","/mev-frontend/node_modules/d3-fetch/src/image.js","/mev-frontend/node_modules/d3-fetch/src/index.js","/mev-frontend/node_modules/d3-fetch/src/json.js","/mev-frontend/node_modules/d3-fetch/src/text.js","/mev-frontend/node_modules/d3-fetch/src/xml.js","/mev-frontend/node_modules/d3-force/src/center.js","/mev-frontend/node_modules/d3-force/src/collide.js","/mev-frontend/node_modules/d3-force/src/constant.js","/mev-frontend/node_modules/d3-force/src/index.js","/mev-frontend/node_modules/d3-force/src/jiggle.js","/mev-frontend/node_modules/d3-force/src/lcg.js","/mev-frontend/node_modules/d3-force/src/link.js","/mev-frontend/node_modules/d3-force/src/manyBody.js","/mev-frontend/node_modules/d3-force/src/radial.js","/mev-frontend/node_modules/d3-force/src/simulation.js","/mev-frontend/node_modules/d3-force/src/x.js","/mev-frontend/node_modules/d3-force/src/y.js","/mev-frontend/node_modules/d3-format/src/defaultLocale.js","/mev-frontend/node_modules/d3-format/src/exponent.js","/mev-frontend/node_modules/d3-format/src/formatDecimal.js","/mev-frontend/node_modules/d3-format/src/formatGroup.js","/mev-frontend/node_modules/d3-format/src/formatNumerals.js","/mev-frontend/node_modules/d3-format/src/formatPrefixAuto.js","/mev-frontend/node_modules/d3-format/src/formatRounded.js","/mev-frontend/node_modules/d3-format/src/formatSpecifier.js","/mev-frontend/node_modules/d3-format/src/formatTrim.js","/mev-frontend/node_modules/d3-format/src/formatTypes.js","/mev-frontend/node_modules/d3-format/src/identity.js","/mev-frontend/node_modules/d3-format/src/index.js","/mev-frontend/node_modules/d3-format/src/locale.js","/mev-frontend/node_modules/d3-format/src/precisionFixed.js","/mev-frontend/node_modules/d3-format/src/precisionPrefix.js","/mev-frontend/node_modules/d3-format/src/precisionRound.js","/mev-frontend/node_modules/d3-geo/src/area.js","/mev-frontend/node_modules/d3-geo/src/bounds.js","/mev-frontend/node_modules/d3-geo/src/cartesian.js","/mev-frontend/node_modules/d3-geo/src/centroid.js","/mev-frontend/node_modules/d3-geo/src/circle.js","/mev-frontend/node_modules/d3-geo/src/clip/antimeridian.js","/mev-frontend/node_modules/d3-geo/src/clip/buffer.js","/mev-frontend/node_modules/d3-geo/src/clip/circle.js","/mev-frontend/node_modules/d3-geo/src/clip/extent.js","/mev-frontend/node_modules/d3-geo/src/clip/index.js","/mev-frontend/node_modules/d3-geo/src/clip/line.js","/mev-frontend/node_modules/d3-geo/src/clip/rectangle.js","/mev-frontend/node_modules/d3-geo/src/clip/rejoin.js","/mev-frontend/node_modules/d3-geo/src/compose.js","/mev-frontend/node_modules/d3-geo/src/constant.js","/mev-frontend/node_modules/d3-geo/src/contains.js","/mev-frontend/node_modules/d3-geo/src/distance.js","/mev-frontend/node_modules/d3-geo/src/graticule.js","/mev-frontend/node_modules/d3-geo/src/identity.js","/mev-frontend/node_modules/d3-geo/src/index.js","/mev-frontend/node_modules/d3-geo/src/interpolate.js","/mev-frontend/node_modules/d3-geo/src/length.js","/mev-frontend/node_modules/d3-geo/src/math.js","/mev-frontend/node_modules/d3-geo/src/noop.js","/mev-frontend/node_modules/d3-geo/src/path/area.js","/mev-frontend/node_modules/d3-geo/src/path/bounds.js","/mev-frontend/node_modules/d3-geo/src/path/centroid.js","/mev-frontend/node_modules/d3-geo/src/path/context.js","/mev-frontend/node_modules/d3-geo/src/path/index.js","/mev-frontend/node_modules/d3-geo/src/path/measure.js","/mev-frontend/node_modules/d3-geo/src/path/string.js","/mev-frontend/node_modules/d3-geo/src/pointEqual.js","/mev-frontend/node_modules/d3-geo/src/polygonContains.js","/mev-frontend/node_modules/d3-geo/src/projection/albers.js","/mev-frontend/node_modules/d3-geo/src/projection/albersUsa.js","/mev-frontend/node_modules/d3-geo/src/projection/azimuthal.js","/mev-frontend/node_modules/d3-geo/src/projection/azimuthalEqualArea.js","/mev-frontend/node_modules/d3-geo/src/projection/azimuthalEquidistant.js","/mev-frontend/node_modules/d3-geo/src/projection/conic.js","/mev-frontend/node_modules/d3-geo/src/projection/conicConformal.js","/mev-frontend/node_modules/d3-geo/src/projection/conicEqualArea.js","/mev-frontend/node_modules/d3-geo/src/projection/conicEquidistant.js","/mev-frontend/node_modules/d3-geo/src/projection/cylindricalEqualArea.js","/mev-frontend/node_modules/d3-geo/src/projection/equalEarth.js","/mev-frontend/node_modules/d3-geo/src/projection/equirectangular.js","/mev-frontend/node_modules/d3-geo/src/projection/fit.js","/mev-frontend/node_modules/d3-geo/src/projection/gnomonic.js","/mev-frontend/node_modules/d3-geo/src/projection/identity.js","/mev-frontend/node_modules/d3-geo/src/projection/index.js","/mev-frontend/node_modules/d3-geo/src/projection/mercator.js","/mev-frontend/node_modules/d3-geo/src/projection/naturalEarth1.js","/mev-frontend/node_modules/d3-geo/src/projection/orthographic.js","/mev-frontend/node_modules/d3-geo/src/projection/resample.js","/mev-frontend/node_modules/d3-geo/src/projection/stereographic.js","/mev-frontend/node_modules/d3-geo/src/projection/transverseMercator.js","/mev-frontend/node_modules/d3-geo/src/rotation.js","/mev-frontend/node_modules/d3-geo/src/stream.js","/mev-frontend/node_modules/d3-geo/src/transform.js","/mev-frontend/node_modules/d3-hierarchy/src/accessors.js","/mev-frontend/node_modules/d3-hierarchy/src/array.js","/mev-frontend/node_modules/d3-hierarchy/src/cluster.js","/mev-frontend/node_modules/d3-hierarchy/src/constant.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/ancestors.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/count.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/descendants.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/each.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/find.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/index.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/iterator.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/leaves.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/links.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/path.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/sort.js","/mev-frontend/node_modules/d3-hierarchy/src/hierarchy/sum.js","/mev-frontend/node_modules/d3-hierarchy/src/index.js","/mev-frontend/node_modules/d3-hierarchy/src/pack/enclose.js","/mev-frontend/node_modules/d3-hierarchy/src/pack/index.js","/mev-frontend/node_modules/d3-hierarchy/src/pack/siblings.js","/mev-frontend/node_modules/d3-hierarchy/src/partition.js","/mev-frontend/node_modules/d3-hierarchy/src/stratify.js","/mev-frontend/node_modules/d3-hierarchy/src/tree.js","/mev-frontend/node_modules/d3-hierarchy/src/treemap/binary.js","/mev-frontend/node_modules/d3-hierarchy/src/treemap/dice.js","/mev-frontend/node_modules/d3-hierarchy/src/treemap/index.js","/mev-frontend/node_modules/d3-hierarchy/src/treemap/resquarify.js","/mev-frontend/node_modules/d3-hierarchy/src/treemap/round.js","/mev-frontend/node_modules/d3-hierarchy/src/treemap/slice.js","/mev-frontend/node_modules/d3-hierarchy/src/treemap/sliceDice.js","/mev-frontend/node_modules/d3-hierarchy/src/treemap/squarify.js","/mev-frontend/node_modules/d3-interpolate/src/array.js","/mev-frontend/node_modules/d3-interpolate/src/basis.js","/mev-frontend/node_modules/d3-interpolate/src/basisClosed.js","/mev-frontend/node_modules/d3-interpolate/src/color.js","/mev-frontend/node_modules/d3-interpolate/src/constant.js","/mev-frontend/node_modules/d3-interpolate/src/cubehelix.js","/mev-frontend/node_modules/d3-interpolate/src/date.js","/mev-frontend/node_modules/d3-interpolate/src/discrete.js","/mev-frontend/node_modules/d3-interpolate/src/hcl.js","/mev-frontend/node_modules/d3-interpolate/src/hsl.js","/mev-frontend/node_modules/d3-interpolate/src/hue.js","/mev-frontend/node_modules/d3-interpolate/src/index.js","/mev-frontend/node_modules/d3-interpolate/src/lab.js","/mev-frontend/node_modules/d3-interpolate/src/number.js","/mev-frontend/node_modules/d3-interpolate/src/numberArray.js","/mev-frontend/node_modules/d3-interpolate/src/object.js","/mev-frontend/node_modules/d3-interpolate/src/piecewise.js","/mev-frontend/node_modules/d3-interpolate/src/quantize.js","/mev-frontend/node_modules/d3-interpolate/src/rgb.js","/mev-frontend/node_modules/d3-interpolate/src/round.js","/mev-frontend/node_modules/d3-interpolate/src/string.js","/mev-frontend/node_modules/d3-interpolate/src/transform/decompose.js","/mev-frontend/node_modules/d3-interpolate/src/transform/index.js","/mev-frontend/node_modules/d3-interpolate/src/transform/parse.js","/mev-frontend/node_modules/d3-interpolate/src/value.js","/mev-frontend/node_modules/d3-interpolate/src/zoom.js","/mev-frontend/node_modules/d3-path/src/index.js","/mev-frontend/node_modules/d3-path/src/path.js","/mev-frontend/node_modules/d3-polygon/src/area.js","/mev-frontend/node_modules/d3-polygon/src/centroid.js","/mev-frontend/node_modules/d3-polygon/src/contains.js","/mev-frontend/node_modules/d3-polygon/src/cross.js","/mev-frontend/node_modules/d3-polygon/src/hull.js","/mev-frontend/node_modules/d3-polygon/src/index.js","/mev-frontend/node_modules/d3-polygon/src/length.js","/mev-frontend/node_modules/d3-quadtree/src/add.js","/mev-frontend/node_modules/d3-quadtree/src/cover.js","/mev-frontend/node_modules/d3-quadtree/src/data.js","/mev-frontend/node_modules/d3-quadtree/src/extent.js","/mev-frontend/node_modules/d3-quadtree/src/find.js","/mev-frontend/node_modules/d3-quadtree/src/index.js","/mev-frontend/node_modules/d3-quadtree/src/quad.js","/mev-frontend/node_modules/d3-quadtree/src/quadtree.js","/mev-frontend/node_modules/d3-quadtree/src/remove.js","/mev-frontend/node_modules/d3-quadtree/src/root.js","/mev-frontend/node_modules/d3-quadtree/src/size.js","/mev-frontend/node_modules/d3-quadtree/src/visit.js","/mev-frontend/node_modules/d3-quadtree/src/visitAfter.js","/mev-frontend/node_modules/d3-quadtree/src/x.js","/mev-frontend/node_modules/d3-quadtree/src/y.js","/mev-frontend/node_modules/d3-random/src/bates.js","/mev-frontend/node_modules/d3-random/src/bernoulli.js","/mev-frontend/node_modules/d3-random/src/beta.js","/mev-frontend/node_modules/d3-random/src/binomial.js","/mev-frontend/node_modules/d3-random/src/cauchy.js","/mev-frontend/node_modules/d3-random/src/defaultSource.js","/mev-frontend/node_modules/d3-random/src/exponential.js","/mev-frontend/node_modules/d3-random/src/gamma.js","/mev-frontend/node_modules/d3-random/src/geometric.js","/mev-frontend/node_modules/d3-random/src/index.js","/mev-frontend/node_modules/d3-random/src/int.js","/mev-frontend/node_modules/d3-random/src/irwinHall.js","/mev-frontend/node_modules/d3-random/src/lcg.js","/mev-frontend/node_modules/d3-random/src/logNormal.js","/mev-frontend/node_modules/d3-random/src/logistic.js","/mev-frontend/node_modules/d3-random/src/normal.js","/mev-frontend/node_modules/d3-random/src/pareto.js","/mev-frontend/node_modules/d3-random/src/poisson.js","/mev-frontend/node_modules/d3-random/src/uniform.js","/mev-frontend/node_modules/d3-random/src/weibull.js","/mev-frontend/node_modules/d3-scale-chromatic/src/categorical/Accent.js","/mev-frontend/node_modules/d3-scale-chromatic/src/categorical/Dark2.js","/mev-frontend/node_modules/d3-scale-chromatic/src/categorical/Paired.js","/mev-frontend/node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","/mev-frontend/node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","/mev-frontend/node_modules/d3-scale-chromatic/src/categorical/Set1.js","/mev-frontend/node_modules/d3-scale-chromatic/src/categorical/Set2.js","/mev-frontend/node_modules/d3-scale-chromatic/src/categorical/Set3.js","/mev-frontend/node_modules/d3-scale-chromatic/src/categorical/Tableau10.js","/mev-frontend/node_modules/d3-scale-chromatic/src/categorical/category10.js","/mev-frontend/node_modules/d3-scale-chromatic/src/colors.js","/mev-frontend/node_modules/d3-scale-chromatic/src/diverging/BrBG.js","/mev-frontend/node_modules/d3-scale-chromatic/src/diverging/PRGn.js","/mev-frontend/node_modules/d3-scale-chromatic/src/diverging/PiYG.js","/mev-frontend/node_modules/d3-scale-chromatic/src/diverging/PuOr.js","/mev-frontend/node_modules/d3-scale-chromatic/src/diverging/RdBu.js","/mev-frontend/node_modules/d3-scale-chromatic/src/diverging/RdGy.js","/mev-frontend/node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","/mev-frontend/node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","/mev-frontend/node_modules/d3-scale-chromatic/src/diverging/Spectral.js","/mev-frontend/node_modules/d3-scale-chromatic/src/index.js","/mev-frontend/node_modules/d3-scale-chromatic/src/ramp.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","/mev-frontend/node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","/mev-frontend/node_modules/d3-scale/src/band.js","/mev-frontend/node_modules/d3-scale/src/constant.js","/mev-frontend/node_modules/d3-scale/src/continuous.js","/mev-frontend/node_modules/d3-scale/src/diverging.js","/mev-frontend/node_modules/d3-scale/src/identity.js","/mev-frontend/node_modules/d3-scale/src/index.js","/mev-frontend/node_modules/d3-scale/src/init.js","/mev-frontend/node_modules/d3-scale/src/linear.js","/mev-frontend/node_modules/d3-scale/src/log.js","/mev-frontend/node_modules/d3-scale/src/nice.js","/mev-frontend/node_modules/d3-scale/src/number.js","/mev-frontend/node_modules/d3-scale/src/ordinal.js","/mev-frontend/node_modules/d3-scale/src/pow.js","/mev-frontend/node_modules/d3-scale/src/quantile.js","/mev-frontend/node_modules/d3-scale/src/quantize.js","/mev-frontend/node_modules/d3-scale/src/radial.js","/mev-frontend/node_modules/d3-scale/src/sequential.js","/mev-frontend/node_modules/d3-scale/src/sequentialQuantile.js","/mev-frontend/node_modules/d3-scale/src/symlog.js","/mev-frontend/node_modules/d3-scale/src/threshold.js","/mev-frontend/node_modules/d3-scale/src/tickFormat.js","/mev-frontend/node_modules/d3-scale/src/time.js","/mev-frontend/node_modules/d3-scale/src/utcTime.js","/mev-frontend/node_modules/d3-selection/src/array.js","/mev-frontend/node_modules/d3-selection/src/constant.js","/mev-frontend/node_modules/d3-selection/src/create.js","/mev-frontend/node_modules/d3-selection/src/creator.js","/mev-frontend/node_modules/d3-selection/src/index.js","/mev-frontend/node_modules/d3-selection/src/local.js","/mev-frontend/node_modules/d3-selection/src/matcher.js","/mev-frontend/node_modules/d3-selection/src/namespace.js","/mev-frontend/node_modules/d3-selection/src/namespaces.js","/mev-frontend/node_modules/d3-selection/src/pointer.js","/mev-frontend/node_modules/d3-selection/src/pointers.js","/mev-frontend/node_modules/d3-selection/src/select.js","/mev-frontend/node_modules/d3-selection/src/selectAll.js","/mev-frontend/node_modules/d3-selection/src/selection/append.js","/mev-frontend/node_modules/d3-selection/src/selection/attr.js","/mev-frontend/node_modules/d3-selection/src/selection/call.js","/mev-frontend/node_modules/d3-selection/src/selection/classed.js","/mev-frontend/node_modules/d3-selection/src/selection/clone.js","/mev-frontend/node_modules/d3-selection/src/selection/data.js","/mev-frontend/node_modules/d3-selection/src/selection/datum.js","/mev-frontend/node_modules/d3-selection/src/selection/dispatch.js","/mev-frontend/node_modules/d3-selection/src/selection/each.js","/mev-frontend/node_modules/d3-selection/src/selection/empty.js","/mev-frontend/node_modules/d3-selection/src/selection/enter.js","/mev-frontend/node_modules/d3-selection/src/selection/exit.js","/mev-frontend/node_modules/d3-selection/src/selection/filter.js","/mev-frontend/node_modules/d3-selection/src/selection/html.js","/mev-frontend/node_modules/d3-selection/src/selection/index.js","/mev-frontend/node_modules/d3-selection/src/selection/insert.js","/mev-frontend/node_modules/d3-selection/src/selection/iterator.js","/mev-frontend/node_modules/d3-selection/src/selection/join.js","/mev-frontend/node_modules/d3-selection/src/selection/lower.js","/mev-frontend/node_modules/d3-selection/src/selection/merge.js","/mev-frontend/node_modules/d3-selection/src/selection/node.js","/mev-frontend/node_modules/d3-selection/src/selection/nodes.js","/mev-frontend/node_modules/d3-selection/src/selection/on.js","/mev-frontend/node_modules/d3-selection/src/selection/order.js","/mev-frontend/node_modules/d3-selection/src/selection/property.js","/mev-frontend/node_modules/d3-selection/src/selection/raise.js","/mev-frontend/node_modules/d3-selection/src/selection/remove.js","/mev-frontend/node_modules/d3-selection/src/selection/select.js","/mev-frontend/node_modules/d3-selection/src/selection/selectAll.js","/mev-frontend/node_modules/d3-selection/src/selection/selectChild.js","/mev-frontend/node_modules/d3-selection/src/selection/selectChildren.js","/mev-frontend/node_modules/d3-selection/src/selection/size.js","/mev-frontend/node_modules/d3-selection/src/selection/sort.js","/mev-frontend/node_modules/d3-selection/src/selection/sparse.js","/mev-frontend/node_modules/d3-selection/src/selection/style.js","/mev-frontend/node_modules/d3-selection/src/selection/text.js","/mev-frontend/node_modules/d3-selection/src/selector.js","/mev-frontend/node_modules/d3-selection/src/selectorAll.js","/mev-frontend/node_modules/d3-selection/src/sourceEvent.js","/mev-frontend/node_modules/d3-selection/src/window.js","/mev-frontend/node_modules/d3-shape/src/arc.js","/mev-frontend/node_modules/d3-shape/src/area.js","/mev-frontend/node_modules/d3-shape/src/areaRadial.js","/mev-frontend/node_modules/d3-shape/src/array.js","/mev-frontend/node_modules/d3-shape/src/constant.js","/mev-frontend/node_modules/d3-shape/src/curve/basis.js","/mev-frontend/node_modules/d3-shape/src/curve/basisClosed.js","/mev-frontend/node_modules/d3-shape/src/curve/basisOpen.js","/mev-frontend/node_modules/d3-shape/src/curve/bundle.js","/mev-frontend/node_modules/d3-shape/src/curve/cardinal.js","/mev-frontend/node_modules/d3-shape/src/curve/cardinalClosed.js","/mev-frontend/node_modules/d3-shape/src/curve/cardinalOpen.js","/mev-frontend/node_modules/d3-shape/src/curve/catmullRom.js","/mev-frontend/node_modules/d3-shape/src/curve/catmullRomClosed.js","/mev-frontend/node_modules/d3-shape/src/curve/catmullRomOpen.js","/mev-frontend/node_modules/d3-shape/src/curve/linear.js","/mev-frontend/node_modules/d3-shape/src/curve/linearClosed.js","/mev-frontend/node_modules/d3-shape/src/curve/monotone.js","/mev-frontend/node_modules/d3-shape/src/curve/natural.js","/mev-frontend/node_modules/d3-shape/src/curve/radial.js","/mev-frontend/node_modules/d3-shape/src/curve/step.js","/mev-frontend/node_modules/d3-shape/src/descending.js","/mev-frontend/node_modules/d3-shape/src/identity.js","/mev-frontend/node_modules/d3-shape/src/index.js","/mev-frontend/node_modules/d3-shape/src/line.js","/mev-frontend/node_modules/d3-shape/src/lineRadial.js","/mev-frontend/node_modules/d3-shape/src/link/index.js","/mev-frontend/node_modules/d3-shape/src/math.js","/mev-frontend/node_modules/d3-shape/src/noop.js","/mev-frontend/node_modules/d3-shape/src/offset/diverging.js","/mev-frontend/node_modules/d3-shape/src/offset/expand.js","/mev-frontend/node_modules/d3-shape/src/offset/none.js","/mev-frontend/node_modules/d3-shape/src/offset/silhouette.js","/mev-frontend/node_modules/d3-shape/src/offset/wiggle.js","/mev-frontend/node_modules/d3-shape/src/order/appearance.js","/mev-frontend/node_modules/d3-shape/src/order/ascending.js","/mev-frontend/node_modules/d3-shape/src/order/descending.js","/mev-frontend/node_modules/d3-shape/src/order/insideOut.js","/mev-frontend/node_modules/d3-shape/src/order/none.js","/mev-frontend/node_modules/d3-shape/src/order/reverse.js","/mev-frontend/node_modules/d3-shape/src/pie.js","/mev-frontend/node_modules/d3-shape/src/point.js","/mev-frontend/node_modules/d3-shape/src/pointRadial.js","/mev-frontend/node_modules/d3-shape/src/stack.js","/mev-frontend/node_modules/d3-shape/src/symbol.js","/mev-frontend/node_modules/d3-shape/src/symbol/circle.js","/mev-frontend/node_modules/d3-shape/src/symbol/cross.js","/mev-frontend/node_modules/d3-shape/src/symbol/diamond.js","/mev-frontend/node_modules/d3-shape/src/symbol/square.js","/mev-frontend/node_modules/d3-shape/src/symbol/star.js","/mev-frontend/node_modules/d3-shape/src/symbol/triangle.js","/mev-frontend/node_modules/d3-shape/src/symbol/wye.js","/mev-frontend/node_modules/d3-time-format/src/defaultLocale.js","/mev-frontend/node_modules/d3-time-format/src/index.js","/mev-frontend/node_modules/d3-time-format/src/isoFormat.js","/mev-frontend/node_modules/d3-time-format/src/isoParse.js","/mev-frontend/node_modules/d3-time-format/src/locale.js","/mev-frontend/node_modules/d3-time/src/day.js","/mev-frontend/node_modules/d3-time/src/duration.js","/mev-frontend/node_modules/d3-time/src/hour.js","/mev-frontend/node_modules/d3-time/src/index.js","/mev-frontend/node_modules/d3-time/src/interval.js","/mev-frontend/node_modules/d3-time/src/millisecond.js","/mev-frontend/node_modules/d3-time/src/minute.js","/mev-frontend/node_modules/d3-time/src/month.js","/mev-frontend/node_modules/d3-time/src/second.js","/mev-frontend/node_modules/d3-time/src/utcDay.js","/mev-frontend/node_modules/d3-time/src/utcHour.js","/mev-frontend/node_modules/d3-time/src/utcMinute.js","/mev-frontend/node_modules/d3-time/src/utcMonth.js","/mev-frontend/node_modules/d3-time/src/utcWeek.js","/mev-frontend/node_modules/d3-time/src/utcYear.js","/mev-frontend/node_modules/d3-time/src/week.js","/mev-frontend/node_modules/d3-time/src/year.js","/mev-frontend/node_modules/d3-timer/src/index.js","/mev-frontend/node_modules/d3-timer/src/interval.js","/mev-frontend/node_modules/d3-timer/src/timeout.js","/mev-frontend/node_modules/d3-timer/src/timer.js","/mev-frontend/node_modules/d3-tip/index.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/constant.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/create.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/creator.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/index.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/local.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/matcher.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/mouse.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/namespace.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/namespaces.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/point.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/select.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selectAll.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/append.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/attr.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/call.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/classed.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/clone.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/data.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/datum.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/dispatch.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/each.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/empty.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/enter.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/exit.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/filter.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/html.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/index.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/insert.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/join.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/lower.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/merge.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/node.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/nodes.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/on.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/order.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/property.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/raise.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/remove.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/select.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/selectAll.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/size.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/sort.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/sparse.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/style.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selection/text.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selector.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/selectorAll.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/sourceEvent.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/touch.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/touches.js","/mev-frontend/node_modules/d3-tip/node_modules/d3-selection/src/window.js","/mev-frontend/node_modules/d3-transition/src/active.js","/mev-frontend/node_modules/d3-transition/src/index.js","/mev-frontend/node_modules/d3-transition/src/interrupt.js","/mev-frontend/node_modules/d3-transition/src/selection/index.js","/mev-frontend/node_modules/d3-transition/src/selection/interrupt.js","/mev-frontend/node_modules/d3-transition/src/selection/transition.js","/mev-frontend/node_modules/d3-transition/src/transition/attr.js","/mev-frontend/node_modules/d3-transition/src/transition/attrTween.js","/mev-frontend/node_modules/d3-transition/src/transition/delay.js","/mev-frontend/node_modules/d3-transition/src/transition/duration.js","/mev-frontend/node_modules/d3-transition/src/transition/ease.js","/mev-frontend/node_modules/d3-transition/src/transition/easeVarying.js","/mev-frontend/node_modules/d3-transition/src/transition/end.js","/mev-frontend/node_modules/d3-transition/src/transition/filter.js","/mev-frontend/node_modules/d3-transition/src/transition/index.js","/mev-frontend/node_modules/d3-transition/src/transition/interpolate.js","/mev-frontend/node_modules/d3-transition/src/transition/merge.js","/mev-frontend/node_modules/d3-transition/src/transition/on.js","/mev-frontend/node_modules/d3-transition/src/transition/remove.js","/mev-frontend/node_modules/d3-transition/src/transition/schedule.js","/mev-frontend/node_modules/d3-transition/src/transition/select.js","/mev-frontend/node_modules/d3-transition/src/transition/selectAll.js","/mev-frontend/node_modules/d3-transition/src/transition/selection.js","/mev-frontend/node_modules/d3-transition/src/transition/style.js","/mev-frontend/node_modules/d3-transition/src/transition/styleTween.js","/mev-frontend/node_modules/d3-transition/src/transition/text.js","/mev-frontend/node_modules/d3-transition/src/transition/textTween.js","/mev-frontend/node_modules/d3-transition/src/transition/transition.js","/mev-frontend/node_modules/d3-transition/src/transition/tween.js","/mev-frontend/node_modules/d3-zoom/src/constant.js","/mev-frontend/node_modules/d3-zoom/src/event.js","/mev-frontend/node_modules/d3-zoom/src/index.js","/mev-frontend/node_modules/d3-zoom/src/noevent.js","/mev-frontend/node_modules/d3-zoom/src/transform.js","/mev-frontend/node_modules/d3-zoom/src/zoom.js","/mev-frontend/node_modules/d3/dist/package.js","/mev-frontend/node_modules/d3/index.js","/mev-frontend/node_modules/delaunator/index.js","/mev-frontend/node_modules/ngx-csv-parser/__ivy_ngcc__/fesm2015/ngx-csv-parser.js","/mev-frontend/node_modules/save-svg-as-png/lib/saveSvgAsPng.js","./src/app/_models/metadata.ts","./src/app/core/local-storage/lcl-storage.service.ts","./src/app/core/local-storage/storage.service.ts","./src/app/core/metadata/metadata.service.ts","./src/app/d3/components/box-plotting/box-plotting.component.ts","./src/app/d3/components/box-plotting/box-plotting.component.html","./src/app/d3/components/deseq2/deseq2.component.ts","./src/app/d3/components/differential_expression/differential_expression.component.html","./src/app/d3/components/dialogs/add-sample-set/add-sample-set.component.ts","./src/app/d3/components/dialogs/add-sample-set/add-sample-set.component.html","./src/app/d3/components/differential_expression/differential_expression.component.ts","./src/app/d3/components/download-button/download-button.component.ts","./src/app/d3/components/download-button/download-button.component.html","./src/app/d3/components/edger/edger.component.ts","./src/app/d3/components/gsea/gsea/gsea.component.ts","./src/app/d3/components/gsea/gsea/gsea.component.html","./src/app/d3/components/hcl/hcl.component.ts","./src/app/d3/components/hcl/hcl.component.html","./src/app/d3/components/kmeans/kmeans/kmeans.component.ts","./src/app/d3/components/kmeans/kmeans/kmeans.component.html","./src/app/d3/components/limma/limma.component.ts","./src/app/d3/components/rnaseq-normalization/rnaseq-normalization.component.ts","./src/app/d3/components/rnaseq-normalization/rnaseq-normalization.component.html","./src/app/d3/components/rug-plot/rug-plot/rug-plot.component.ts","./src/app/d3/components/rug-plot/rug-plot/rug-plot.component.html","./src/app/d3/components/scatter-plot/scatter-plot.component.ts","./src/app/d3/components/scatter-plot/scatter-plot.component.html","./src/app/d3/d3.module.ts","./src/app/features/analysis/analysis-routing.module.ts","./src/app/features/analysis/analysis.module.ts","./src/app/features/analysis/components/analysis-flow/analysis-flow.component.ts","./src/app/features/analysis/components/analysis-flow/analysis-flow.component.html","./src/app/features/analysis/components/analysis-list/analyses.component.ts","./src/app/features/analysis/components/analysis-list/analyses.component.html","./src/app/features/analysis/components/analysis-plotting-result/analysis-plotting-result.component.ts","./src/app/features/analysis/components/analysis-plotting-result/analysis-plotting-result.component.html","./src/app/features/analysis/components/analysis-result/analysis-result.component.ts","./src/app/features/analysis/components/analysis-result/analysis-result.component.html","./src/app/features/analysis/components/executed-operation/executed-operation.component.ts","./src/app/features/analysis/components/executed-operation/executed-operation.component.html","./src/app/features/analysis/components/operation/operation.component.ts","./src/app/features/analysis/components/operation/operation.component.html","./src/app/features/workspace-detail/models/workspace-resource.ts","./src/app/features/workspace-detail/services/workspace-detail.service.ts","./src/app/shared/utils/utils.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;;AAEO;AACA;;;;;;;;;;;;;ACHP;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACA;AACI;AACJ;AACI;AACN;AACc;;AAE9B;AACf,cAAc,oDAAQ;AACtB,eAAe,kDAAM;AACrB,kBAAkB,6DAAO;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,yDAAK;AAChB,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;;AAEA;AACA,eAAe,OAAO;AACtB;AACA;AACA,aAAa,0DAAM;AACnB;AACA;;AAEA;AACA;;AAEA;AACA,qEAAqE,4DAAQ;AAC7E;;AAEA;AACA,sEAAsE,4DAAQ;AAC9E;;AAEA;AACA,4FAA4F,4DAAQ,CAAC,+CAAK,YAAY,4DAAQ;AAC9H;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC3ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACF;AACJ;;AAEjC,wBAAwB,4DAAQ,CAAC,qDAAS;AACnC;AACA;AACA,qBAAqB,4DAAQ,CAAC,kDAAM;AAC5B,0EAAW,EAAC;;;;;;;;;;;;;ACR3B;AAAA;AAAuC;;AAExB;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAU;AACV,CAAC;;AAED;AACA,mBAAmB,6DAAS;AAC5B;;;;;;;;;;;;;AC7CA;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACLA;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAqC;;AAEtB;AACf,YAAY,4DAAQ;AACpB;AACA;;;;;;;;;;;;;ACLA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3DD;AAAA;AAAA;AAAuC;;AAExB,oCAAoC,qDAAS;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAS;AACrB,YAAY,6DAAS;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAuC;AACF;;AAEtB,yCAAyC,qDAAS;AACjE,mCAAmC,4DAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;;AAEtB;AACf,sBAAsB,oDAAQ,EAAE,oDAAQ;AACxC;;AAEO;AACP,kCAAkC,oDAAQ;AAC1C;;AAEO;AACP,sBAAsB,oDAAQ;AAC9B;;AAEO;AACP;AACA;;AAEO;AACP,sBAAsB,oDAAQ;AAC9B;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;;;;;;;;;;;AChDA;AAAe;AACfqF;AACjC;AACF;AACN;AACA;AACE;AACQ;AACF;AACN;AACG;AACoC;AACvB,eAAe;AACQ;AACtB;AACI;AAC3B;AACU;AACR;AACI;AACF;AACJ;AACU;AACN;AACI;AACkB;AACV;AACZ;AACA;AACU;AACJ;AACU;AAClB,eAAe;AACC;AAClB;AAC6B;AACjB;AACF;AACV;;;;;;;;;;;;;ACrCxC;AAAA;AAAA;AAAuC;;AAExB,iCAAiC,qDAAS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,6DAAS;AACrB,YAAY,6DAAS;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAuC;AACF;;AAEtB,sCAAsC,qDAAS;AAC9D,mCAAmC,4DAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAqC;;AAEtB;AACf,SAAS,4DAAQ;AACjB,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrBA;AAAA;AAAe;AACf;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACdA;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;AACA;AACgB;AACC;;AAE7B;AACf,6BAA6B,0DAAO;AACpC;AACA,qCAAqC,uDAAG;AACxC,qBAAqB,uDAAG;AACxB;AACA;AACA;AACA,eAAe,uDAAG,CAAC,+DAAW;AAC9B,eAAe,uDAAG;AAClB;AACA;;AAEO,6CAA6C,kDAAM;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACe,6EAA6E,qDAAS;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3CA;AAAe;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAyC;;AAE1B;AACf,gBAAgB,8DAAU;AAC1B;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAe,oFAAqB,EAAC;;AAE9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAgC;AACM;;AAEvB;AACf,uCAAuC,4DAAQ,iBAAiB,4DAAQ,2BAA2B,yDAAK;AACxG,CAAC;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAgC;AACQ;;AAEzB;AACf,wCAAwC,6DAAS,oBAAoB,yDAAK;AAC1E,CAAC;;;;;;;;;;;;;ACLD;AAAA;AAAgC;;AAEjB;AACf,4BAA4B,yDAAK;AACjC,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAA2B;;AAEZ;AACf;AACA,uBAAuB,uDAAG,2CAA2C,SAAS;AAC9E,0DAA0D,SAAS;AACnE;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;;;;;;;;;;;;ACdA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxBA;AAAA;AAAuC;;AAExB;AACf,SAAS,6DAAS;AAClB,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAO;;;;;;;;;;;;;ACAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACI;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yGAAyG,oDAAQ;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,kFAAkF,EAAE;;AAE9H;AACA;AACA,0CAA0C,gCAAgC,6DAA6D,EAAE;AACzI;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,+BAA+B,EAAE;;AAEzE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,wBAAwB,EAAE;AACpD;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,+CAAK;AAChC;;AAEA;AACA,gEAAgE,+CAAK;AACrE;;AAEA;AACA,+DAA+D,+CAAK;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;AC3KA;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKmB;;;;;;;;;;;;;ACLnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACW;AACL;AACE;AACL;AACH;AACD;AACgB;;AAEpD,iBAAiB,aAAa;AAC9B,kBAAkB,cAAc;AAChC,mBAAmB,eAAe;AAClC,mBAAmB;;AAEnB,OAAO,cAAc;;AAErB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,gEAAgE,EAAE;AAC3F,wBAAwB,mCAAmC;AAC3D;;AAEA;AACA;AACA;AACA,yBAAyB,gEAAgE,EAAE;AAC3F,wBAAwB,mCAAmC;AAC3D;;AAEA;AACA;AACA;AACA,uBAAuB,wCAAwC,EAAE;AACjE,wBAAwB,WAAW;AACnC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEe;AACf;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,2DAAM;AAChB;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,eAAe,EAAE;;AAEvD;;AAEA;AACA,oCAAoC,mCAAmC,EAAE;AACzE,qCAAqC,wBAAwB,EAAE;;AAE/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,qDAAqD,EAAE;AACrG,4DAA4D,qCAAqC,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kEAAW;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW;AACX,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,+DAAS;AACrB;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gBAAgB,2DAAM;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC,gHAAgH,EAAE;AACpJ,kCAAkC,gGAAgG,EAAE;AACpI,sCAAsC,uGAAuG,EAAE;AAC/I,uCAAuC,uGAAuG,EAAE;AAChJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,2DAAM;AACpB;AACA;AACA;AACA,YAAY,iDAAU;AACtB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4DAAO;AACrB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gBAAgB,2DAAM;AACtB;;AAEA;AACA;;AAEA,IAAI,+DAAS;AACb;;AAEA;AACA;AACA;AACA,KAAK;AACL,iBAAiB,2DAAM;AACvB;AACA;AACA;AACA;AACA;;AAEA,MAAM,2DAAW;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD,4DAAO;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAO;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uDAAuD;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,iEAAa;AACnB;AACA;AACA;AACA,6CAA6C,oBAAoB,EAAE,OAAO;AAC1E,OAAO;AACP,QAAQ,0DAAU;AAClB;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA,wCAAwC;AACxC,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAO;AACb;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,mCAAmC;AACnC,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,qCAAqC;AACrC,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,2DAAO;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;;AAEA;AACA,sEAAsE,4DAAQ;AAC9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AAQ;AAClF;;AAEA;AACA,wEAAwE,4DAAQ;AAChF;;AAEA;AACA,wEAAwE,4DAAQ;AAChF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEe;AACf;AACA,CAAC;;AAEM;AACP;AACA;;;;;;;;;;;;;ACrIA;AAAe;AACf;AACA,qCAAqC,0BAA0B;AAC/D;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACF;AACA;AACE;AACI;AACE;;;;;;;;;;;;;ACL7C;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAO;;AAEP;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yEAAyE,8CAA8C;AACvH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+DAA+D,qBAAqB,EAAE;;AAEtF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;AC1EnB;AAAA;AAAwB;;AAET;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oDAAG;AACzB;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C,aAAa,kCAAkC,EAAE,EAAE;AACjG,wDAAwD,8BAA8B,EAAE;AACxF;;AAEA;AACA,6BAA6B,iDAAiD,EAAE;AAChF,0BAA0B,2CAA2C,EAAE;AACvE,8BAA8B,uDAAuD,EAAE;AACvF,sBAAsB,cAAc,aAAa,EAAE;AACnD,+BAA+B,mCAAmC,aAAa,EAAE;AACjF,iCAAiC,oBAAoB,aAAa,EAAE;AACpE,yBAAyB,YAAY,aAAa;AAClD;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS,oDAAG;AACZ;;AAEA;AACA;AACA;;;;;;;;;;;;;ACxEA;AAAA;AAA6C;;AAE7C;;AAEA,YAAY,4CAAG;;AAEf;AACA;AACA;AACA;AACA;AACA,SAAS,2CAAM;AACf;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0DAA0D,gBAAgB,EAAE;;AAE5E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,kEAAG,EAAC;;;;;;;;;;;;;ACtCnB;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;;AAEpC;;AAEA;AACA;;AAEP;AACA;AACA;AACA,yBAAye;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,0DAAM,WAAW,yDAAM;AACvB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,0DAAM,WAAW,yDAAM;AACvB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACyB;AACzB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,6CAAG,OAAO,4DAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gDAAO;AACzC;AACA;;AAEe;AACf;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,0DAAM,uBAAuB,yDAAM,CAAC,+CAAK;AACzC;AACA,oBAAoB,kDAAQ,YAAY,kDAAQ;AAChD;AACA,GAAG;AACH;AACA,oBAAoB,gDAAM,YAAY,gDAAM;AAC5C;AACA,GAAG;AACH;AACA,iDAAiD,gDAAO;AACxD;AACA;AACA;AACA;AACA,eAAe,6CAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC5DD;AAAA;AAAe;AACf;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsD;AACE;AACJ;;;;;;;;;;;;;ACFpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACO;AACP;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,6CAAG,OAAO,4DAAU;AACzC;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEe;AACf;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA,0DAAM,WAAW,yDAAM,CAAC,+CAAK;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,6CAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iCAAiC,gDAAO;AACxC;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,gDAAO;AACvB;AACA;;AAEA,0DAAM,WAAW,yDAAM,CAAC,+CAAK;AAC7B;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1HD;AAAA;AAAA;AAAO;AACA;;;;;;;;;;;;;ACDP;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;;AAEO;;;;;;;;;;;;;ACFP;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAe,2EAAY,EAAC;;;;;;;;;;;;;ACA5B;AAAe;AACf;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmE;AAClC;AACM;AACV;AACQ;AACA;AACR;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA,kBAAkB,yDAAgB;AAClC;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,uDAAM;AACzB,WAAW,yDAAQ;AACnB,WAAW,sDAAK;AAChB,KAAK;AACL,2BAA2B,qDAAS;AACpC;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,wDAAI;AACd;AACA,KAAK;;AAEL;AACA,mDAAmD,OAAO;AAC1D,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,+DAA+D;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,+DAA+D;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP,iEAAiE;AACjE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,4DAAQ,CAAC,+CAAK,YAAY,4DAAQ;AAC9H;;AAEA;AACA,2DAA2D,gDAAI;AAC/D;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC1MD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACb;AACM;AACF;AACA;;AAErC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAQ;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,IAAI,sDAAK,EAAE,mCAAmC,GAAG,mCAAmC;AACpF,IAAI,sDAAK,EAAE,mCAAmC,GAAG,mCAAmC;AACpF,IAAI,sDAAK,EAAE,mCAAmC,GAAG,mCAAmC;AACpF,IAAI,sDAAK,EAAE,mCAAmC,GAAG,mCAAmC;AACpF,IAAI,sDAAK,EAAE,mCAAmC,GAAG,mCAAmC;AACpF,IAAI,sDAAK,EAAE,mCAAmC,GAAG,mCAAmC;;AAEpF;;AAEA;AACA;AACA,iBAAiB,oDAAG;AACpB,WAAW,yDAAQ;AACnB,WAAW,sDAAK;AAChB;AACA;;AAEA,WAAW,4DAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAiE,4DAAQ;AACzE;;AAEA;AACA,iEAAiE,4DAAQ;AACzE;;AAEA;AACA,sEAAsE,4DAAQ;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4FAA4F,4DAAQ,CAAC,+CAAK,YAAY,4DAAQ;AAC9H;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACpID;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACK;;;;;;;;;;;;;ACDvD;AAAe,4EAAa;;;;;;;;;;;;;ACA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,IAAI;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsiCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,MAAM;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,UAAU;AAC9E;AACA;AACA,mCAAmC,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,IAAI;AACvD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,KAAK;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,KAAK;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,MAAM;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sGAAsG,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;;AAEA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,eAAe,QAAQ;;AAEvB;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;;AAEA,oBAAoB,SAAS;AAC7B;AACA;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B,UAAU;;AAErC;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,uBAAuB,QAAQ;AAC/B;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,WAAW;AAClC;AACA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA,8BAA8B,QAAQ;AACtC,2BAA2B,QAAQ;AACnC;AACA;AACA;;AAEA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,WAAW;AAClC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,2BAA2B,eAAe;AAC1C;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,uCAAuC,QAAQ;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;AACvB;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA,mBAAmB,8CAA8C;AACjE;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA;AACA,iDAAiD,QAAQ;AACzsEAAsE,QAAQ,OAAO,SAAS;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,QAAQ,OAAO,SAAS;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,IAAI;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,+BAA+B,iCAAiC;AAChE;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,uBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,qBAAqB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA,oBAAoB,4BAA4B;AAChD,6BAA6B,wBAAwB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,wBAAwB,oBAAoB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,qBAAqB;AACxC;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,sCAAsC;AAC7D;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA,eAAe,gBAAgB;AAC/B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,sBAAsB,sCAAsC;AAC5D;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,GAAG;AACH;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,aAAa;AACrC;AACA;;;AAGA;AACA,oBAAoB,aAAa;AACjC;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA,SAAS;AACT;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,yBAAyB;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,aAAa;AAChC;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,eAAe,iBAAiB;AAChC;AACA;;AAEA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,uEAAuE;;AAEvE;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,yBAAyB;AAChD;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,kBAAkB,oCAAoC;AACtD;AACA;AACA;;;AAGA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,gBAAgB;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;;AAGA;AACA;AACA;AACA,sBAAsB,oCAAoC;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,MAAM;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wCAAwC;AAC/D;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,oCAAoC;AAC/D;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,wCAAwC;AACvE;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC;AACxC;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,oBAAoB;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,oCAAoC;AAClE;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,oCAAoC;AAClE;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B,kCAAkC;AAC5D;AACA;;AAEA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,O;AACT;AACA,S;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;AACA;AACA,a;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,GAAG;AAC5B,0CAA0C,GAAG;AAC7C,+BAA+B,GAAG;AAClC,+BAA+B,GAAG;AAClC,kCAAkC,GAAG;AACrC,gCAAgC,GAAG;AACnC,+BAA+B,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,WAAW,GAAG;AAChF,8BAA8B,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI;AACjE,8BAA8B,GAAG;AACjC;AACA;AACA,4BAA4B,IAAI,YAAY,IAAI,GAAG,GAAG;AACtD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,yBAAyB;AACzB;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,kBAAkB;;AAEpC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;;;AAIb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA,4DAA4D;;AAE5D;AACA;AACA;;AAEA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA,aAAa;AACb;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,8CAA8C,EAAE;;AAEhD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;AAIA;AACA,gBAAgB;;AAEhB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,iCAAiC,iBAAiB,YAAY;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,KAAK;AACL;AACA,2BAA2B,IAAI;AAC/B,KAAK;AACL;AACA;AACA;AACA,KAAK,GAAG;;AAER;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT,KAAK;AACL;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;;AAEA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA;;AAEA;AACA,cAAc,iBAAiB;;AAE/B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,iBAAiB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B,sCAAsC;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,M;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,6BAA6B;AAC7B;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;;AAErB;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD,2BAA2B,QAAQ,YAAY;AAC/C;AACA,0BAA0B,oBAAoB;AAC9C,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,OAAO,EAAE,QAAQ;AACnC;AACA;AACA;AACA,kBAAkB,eAAe,EAAE,MAAM,EAAE,eAAe;AAC1D;AACA;AACA;AACA,kBAAkB,WAAW,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,WAAW;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,KAAK;AACzD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,MAAM,cAAc,OAAO,gBAAgB,QAAQ;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,cAAc,KAAK,OAAO;AAC3F,yEAAyE,QAAQ,KAAK,OAAO;AAC7F;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA,qCAAqC,QAAQ,IAAI,cAAc,IAAI,EAAE;AACrE;AACA;AACA,qCAAqC,QAAQ,IAAI,cAAc,IAAI,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,uBAAuB;AAC5D;AACA,qCAAqC,yBAAyB;AAC9D;AACA;AACA,iCAAiC,yBAAyB;AAC1D;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,QAAQ;AAClF;AACA;AACA,uEAAuE,MAAM,aAAa,QAAQ;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,QAAQ;AACjF;AACA;AACA,4DAA4D,OAAO,mBAAmB,MAAM;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,KAAK;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,gBAAgB;AAChB;AACA;AACA,UAAU;AACV,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,K;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,sBAAsB;AACtB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,SAAS;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,KAAK;AAC/D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,MAAM,KAAK,MAAM;AACzD,iCAAiC,MAAM,QAAQ,MAAM;AACrD,2CAA2C,MAAM,EAAE,YAAY;AAC/D,6CAA6C,MAAM,EAAE,YAAY;AACjE;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,UAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,SAAS;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,KAAK;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ,IAAI,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA,6CAA6C,UAAU,IAAI,UAAU;AACrE;AACA;AACA,4DAA4D,UAAU,MAAM,UAAU;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA,yBAAyB,2BAA2B;AACpD;AACA,6CAA6C,UAAU,IAAI,UAAU;AACrE;AACA;AACA,4DAA4D,UAAU,MAAM,UAAU;AACtF;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc,GAAG,cAAc;AAChE;AACA;AACA,iCAAiC,cAAc;AAC/C;AACA;AACA,yBAAyB,2BAA2B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,cAAc,KAAK,OAAO;AAC3F,yEAAyE,QAAQ,KAAK,OAAO;AAC7F;AACA;AACA;AACA;AACA,wCAAwC,YAAY;AACpD;AACA;AACA,qCAAqC,QAAQ,IAAI,cAAc,IAAI,EAAE;AACrE;AACA;AACA,qCAAqC,QAAQ,IAAI,cAAc,IAAI,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,yDAAyD,QAAQ,IAAI,SAAS,QAAQ,QAAQ,IAAI,SAAS;AAC3G;AACA,0CAA0C,gBAAgB;AAC1D,gEAAgE,QAAQ,IAAI,SAAS,QAAQ,QAAQ,IAAI,SAAS;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yCAAyC;AAC9E;AACA;AACA;AACA,qCAAqC,4CAA4C;AACjF;AACA;AACA;AACA,qCAAqC,4CAA4C;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,QAAQ;AAClF;AACA;AACA,uEAAuE,MAAM,aAAa,QAAQ;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,QAAQ;AACvF;AACA;AACA,yEAAyE,iBAAiB,aAAa,QAAQ;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,QAAQ;AAChG;AACA;AACA,yFAAyF,QAAQ;AACjiBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,KAAK;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,KAAK;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE6rB;;;;;;;;;;;;;AC95P7rB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACP;AACM;AACA;;AAEnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS,kBAAkB;AAC3B,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kDAAU;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,wBAAwB;AAChE,gGAAgG;AAChG;AACA;AACA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA,6BAA6B,kDAAU;AACvC,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mDAAO;AACtB;AACA;AACA,WAAW,2DAA2D;;AAEtE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wDAAwD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,mDAAmD,gDAAI;AACvD,WAAW,6BAA6B;AACxC,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gDAAI;AACvD,WAAW,OAAO;AAClB,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gDAAI;AACvD,WAAW,aAAa;AACxB;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAO;AAC/B;AACA;AACA;AACA;AACA,mDAAmD,gDAAI;AACvD,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA,wBAAwB,mDAAO;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACF;;;;;;;;;;;;;ACDhD;AAAA;AAAA;;AAEe;AACf;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,kBAAkB,yBAAyB,GAAG,yBAAyB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc,GAAG,cAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,GAAG,GAAG,GAAG;AAClD;AACA;AACA,kBAAkB,EAAE,GAAG,EAAE,SAAS,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,cAAc,GAAG,cAAc;AAC/F;AACA;AACA,kBAAkB,yBAAyB,GAAG,yBAAyB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AACzF;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpCA;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAA6B;AACM;;AAEpB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW,wBAAwB,UAAU;;AAExD;AACA;AACA,sDAAsD,OAAO;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gDAAI;AACvD,WAAW,WAAW,yBAAyB,yBAAyB;AACxE;AACA,yCAAyC,OAAO;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,gDAAI;AACvD;AACA;AACA;AACA;AACA,mDAAmD,gDAAI;AACvD;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW,QAAQ;AAC9B,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA,wBAAwB,mDAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,SAAS;AAC7D,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B,+BAA+B;AACpE;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,OAAO;AACvF;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,UAAU;AAC3C,+DAA+D,OAAO;AACtE,iCAAiC,UAAU;AAC3C,+DAA+D,OAAO;AACtE,iCAAiC,UAAU;AAC3C,+DAA+D,OAAO;AACtE,iCAAiC,UAAU;AAC3C,+DAA+D,OAAO;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK,mBAAmB;AACxB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,KAAK,mBAAmB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/TA;AAAA,YAAY;;AAEZ;AACA,8CAA8C,IAAI,OAAO;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,iBAAiB;AACjB;AACA;AACA,GAAG;AACH;AACA,kFAAkF,OAAO;AACzF;AACA,+CAA+C,OAAO;AACtD,GAAG;AACH;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;;AAEA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA,mCAAmC,4BAA4B;AAC/D;AACA;;AAEe,uEAAQ,EAAC;;;;;;;;;;;;;ACnFxB;AAAA;AAAA;AAAA;AAAkD;;;;;;;;;;;;;ACAlD;AAAe,2EAAY,EAAC;;;;;;;;;;;;;ACA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACQ;AACD;AACQ;AACf;AACF;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,uBAAuB;AAC7C;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA,mBAAmB;AACnB,kBAAkB,4DAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI,2DAAM;AACV,IAAI,0DAAM;AACV,IAAI,iEAAa;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,2DAAO;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,2DAAM;AACV,IAAI,0DAAO;AACX,IAAI,2DAAO;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA,QAAQ,iEAAa;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA,QAAQ,2DAAO;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,oBAAoB,EAAE,OAAO;AACtE,eAAe,OAAO;AACtB;AACA,QAAQ,iEAAa;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,4DAAO;AACnB;;AAEA,oCAAoC,iDAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA,mEAAmE;AACnE,0DAA0D;AAC1D,yBAAyB,4DAAO,wCAAwC;AACxE;AACA;AACA;AACA;AACA,YAAY,iDAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,sEAAsE,4DAAQ;AAC9E;;AAEA;AACA,yEAAyE,4DAAQ;AACjF;;AAEA;AACA,uEAAuE,4DAAQ;AAC/E;;AAEA;AACA,yEAAyE,4DAAQ;AACjF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC/LD;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,kDAAkD;AAC7D,kBAAkB,yDAAyD;AAC3E,cAAc,qDAAqD;AACnE,aAAa,oDAAoD;AACjE,iBAAiB,wDAAwD;AACzE,aAAa,oDAAoD;AACjE,QAAQ,+CAA+C;AACvD,QAAQ,+CAA+C;AACvD,SAAS,gDAAgD;AACzD,SAAS,gDAAgD;AACzD,QAAQ;AACR,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACgC;;;;;;;;;;;;;ACD1E;AAAA;AAAA;AAAA;AAAoC;AACD;;AAEpB;AACf;AACA,kBAAkB,2DAAM,4BAA4B,mDAAO;AAC3D;AACA,qCAAqC,mDAAO;AAC5C,GAAG;AACH;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA,kBAAkB,2DAAM;AACxB;AACA,+BAA+B,mDAAO;AACtC,2BAA2B,kCAAkC,EAAE;AAC/D;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;AC3BA;AAAA;AAAO;AACP;AACA;;AAEe;AACf;AACA;AACA,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,cAAc,EAAE,IAAI,EAAE;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iG;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B;;AAE3B,UAAU,uDAAG;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVP;AAAA,YAAY;AACZ,YAAY;AACZ;AACA;AACA;;AAEA;AACA,oCAAoC;AACpC;AACA,GAAG,gBAAgB;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,YAAY,yCAAyC;AACrF;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,YAAY,yCAAyC;AACrF;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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AEA;AACA,CAAC;;;;;;;;;;;;;ACxDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACN;AACJ;;AAEpB;AACP;AACA;;AAEO;AACP;AACA;;AAEA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAK;AACrB,cAAc,4DAAQ;AACtB,eAAe,uDAAG;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,mBAAmB,gBAAgB;AACnC;;AAEA;AACA;AACA,OAAO;;AAEP,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3JD;AAAA;AAAqC;;AAEtB;AACf,iBAAiB,4DAAQ;AACzB;AACA;AACA;;AAEA,mCAAmC,4DAAQ;;AAE3C;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,4DAAQ;AAChF;;AAEA;AACA,iEAAiE,4DAAQ;AACzE;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACxCD;AAAA;AAAqC;;AAEtB;AACf,iBAAiB,4DAAQ;AACzB;AACA;AACA;;AAEA,mCAAmC,4DAAQ;;AAE3C;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wEAAwE,4DAAQ;AAChF;;AAEA;AACA,iEAAiE,4DAAQ;AACzE;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACxCD;AAAA;AAAA;AAAA;AAAA;AAAuC;;AAEvC;AACO;AACA;;AAEP;AACA;AACA;AACA;AACA,CAAC;;AAEc;AACf,WAAW,0DAAY;AACvB;AACA;AACA;AACA;;;;;;;;;;;;;ACjBA;AAAA;AAAsD;;AAEvC;AACf,aAAa,4EAAkB;AAC/B,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAe;AACf;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACO;AACP,+FAA+F;AAC/F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;ACjBD;AAAe;AACf;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAsD;;AAE/C;;AAEQ;AACf,UAAU,4EAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4EAAkB,+BAA+B;AAC7F,CAAC;;;;;;;;;;;;;ACfD;AAAA;AAAsD;;AAEvC;AACf,UAAU,4EAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,sDAAsD;;AAE/C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;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A;AAAA;AAA+B;AACmB;AAC6C;AACtC;AACxB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,8CAAK;AACxB,IAAI,mDAAU;AACd,GAAG;AACH;AACA,IAAI,mDAAU;AACd;AACA;AACA;AACA,QAAQ,oDAAW;AACnB,wBAAwB,gDAAO;AAC/B,yBAAyB,gDAAO;AAChC;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,+DAAS,WAAW,gDAAO,QAAQ,gDAAO;AACpD;AACA,iBAAiB,oEAAc;AAC/B;AACA,qBAAqB,oEAAc;AACnC,IAAI,+EAAyB;AAC7B,iBAAiB,+DAAS;AAC1B;AACA;AACA,kCAAkC,gDAAO;AACzC;AACA,uBAAuB,oDAAG;AAC1B;AACA,6BAA6B,gDAAO;AACpC;AACA,KAAK;AACL,8BAA8B,gDAAO;AACrC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,oDAAG;AACpB,GAAG;AACH;AACA;AACA,EAAE,mDAAU;AACZ;AACA;;AAEA;AACA,EAAE,mDAAU;AACZ;;AAEA;AACA;AACA,EAAE,mDAAU;AACZ,MAAM,oDAAG,aAAa,gDAAO;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;;AAEA;AACA;AACA,EAAE,0DAAM;;AAER;AACA;AACA;;AAEA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,2EAA2E,QAAQ;AACnF;AACA;AACA;AACA;;AAEA;;AAEA;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AAA;AAAA;AAAA;AAAA;AAAA;AAAwH;AAC9E;AACsB;AACtB;AACZ;;AAEf;AACf,WAAW,oDAAG;AACd,kBAAkB,gDAAO;AACzB;AACA,sBAAsB,oDAAG,OAAO,gDAAO,CAAC;;AAExC;AACA,IAAI,+DAAY;AAChB;;AAEA;AACA,WAAW,oDAAG,WAAW,oDAAG;AAC5B;;AAEA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,2CAAE,IAAI,2CAAE;AACxD;AACA;AACA;AACA,yBAAyB,8DAAU,oBAAoB,8DAAU;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8DAAU;AACxC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,+DAAS;AACtB,aAAa,+DAAS;;AAEtB;AACA;AACA;AACA,aAAa,oEAAc;AAC3B,eAAe,kEAAY;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB,oEAAc;AAC9B,YAAY,oEAAc;AAC1B,YAAY,oEAAc;AAC1B,IAAI,yEAAmB;;AAEvB;AACA;AACA,YAAY,kEAAY;AACxB,aAAa,kEAAY;AACzB,2BAA2B,kEAAY;;AAEvC;;AAEA,YAAY,qDAAI;AAChB,YAAY,oEAAc;AAC1B,IAAI,yEAAmB;AACvB,QAAQ,+DAAS;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gBAAgB,oDAAG,SAAS,2CAAE,IAAI,gDAAO;AACzC,oCAAoC,gDAAO;;AAE3C;;AAEA;AACA;AACA;AACA,sCAAsC,oDAAG,mBAAmB,gDAAO;AACnE;AACA,kBAAkB,2CAAE;AACpB,eAAe,oEAAc;AAC7B,MAAM,yEAAmB;AACzB,iBAAiB,+DAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA,mCAAmC,2CAAE;AACrC;AACA,+BAA+B;AAC/B,mCAAmC;AACnC,4BAA4B;AAC5B,gCAAgC;AAChC;AACA;;AAEA,SAAS,yDAAI,gEAAgE,2CAAE,WAAW,2CAAE;AAC5F,CAAC;;;;;;;;;;;;;AChLD;AAAA;AAA2C;;AAE5B;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+DAA+D,6DAAa;AAC5E,KAAK;AACL;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACA;AACM;AACS;AACrB;;AAEhB;AACf;AACA;AACA,qBAAqB,0DAAU;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB,sDAAK;AACxB,0BAA0B,mEAAe;AACzC;AACA;AACA,UAAU,0DAAU;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,+CAAM,GAAG,gDAAO,GAAG,+CAAM;AAC7D,oCAAoC,+CAAM,GAAG,gDAAO,GAAG,+CAAM;AAC7D;;;;;;;;;;;;;AClIA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1DD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACH;AACJ;AACI;AACN;;AAE/B;;AAEA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,WAAW,oDAAG,cAAc,gDAAO;AACnC,UAAU,oDAAG,cAAc,gDAAO;AAClC,UAAU,oDAAG,cAAc,gDAAO;AAClC,gCAAgC;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,0DAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yCAAyC,OAAO;AAChD,kHAAkH,OAAO;AACzH;AACA,yBAAyB,yEAAyE;AAClG,gBAAgB,0EAA0E;AAC1F;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC,sDAAK;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,0DAAU;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,cAAc,wDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACvKA;AAAA;AAAA;AAA0C;AACP;;AAEnC;AACA;AACA;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,yBAAyB;AACzB;;AAEA;AACA;AACA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,8DAAU;AAClB;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,mBAAmB,gDAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA,8BAA8B,OAAO;AACrC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,qCAAqC,QAAQ;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtGA;AAAe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACXD;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAAgE;AACd;AACN;;AAE5C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,4DAAQ;AACjB;;AAEA;AACA;AACA,yCAAyC,OAAO;AAChD,SAAS,4DAAQ;AACjB;AACA;AACA,WAAW,4DAAQ;AACnB;AACA;AACA;AACA;AACA,6DAA6D,iDAAQ;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,mEAAe;AAC1B;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,gDAAO,aAAa,gDAAO;AAChD;;AAEe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AChGD;AAAA;AAAiC;;AAEjC;AACA,cAAc;;AAEC;AACf;AACA;AACA,SAAS,0DAAM;AACf,CAAC;;;;;;;;;;;;;ACTD;AAAA;AAAA;AAAA;AAAA;AAA+B;AACc;;AAE7C;AACA,UAAU,sDAAK,UAAU,gDAAO;AAChC,sBAAsB,2BAA2B,eAAe,EAAE,EAAE;AACpE;;AAEA;AACA,UAAU,sDAAK,UAAU,gDAAO;AAChC,sBAAsB,2BAA2B,eAAe,EAAE,EAAE;AACpE;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;;AAEA;AACA,WAAW,sDAAK,CAAC,qDAAI;AACrB,gBAAgB,sDAAK,CAAC,qDAAI;AAC1B,gBAAgB,sDAAK,CAAC,qDAAI,4CAA4C,QAAQ,oDAAG,WAAW,gDAAO,CAAC,EAAE;AACtG,gBAAgB,sDAAK,CAAC,qDAAI,4CAA4C,QAAQ,oDAAG,WAAW,gDAAO,CAAC,EAAE;AACtG;;AAEA;AACA,8CAA8C,SAAS,8CAA8C,EAAE;AACvG;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,gDAAO,cAAc,gDAAO;AAC7D,iCAAiC,gDAAO,cAAc,gDAAO;AAC7D;;AAEO;AACP;AACA;;;;;;;;;;;;;ACxGA;AAAe,qEAAM,EAAC;;;;;;;;;;;;;ACAtqB;AACZ;AACA;AACM;AACX;AACA;AACiC;AAC3B;AACV;AACE;AACS;AACM;AACqE;AACQ;AACxB;AACA;AACQ;AACxB;AACoB;AAC5B;AAC/B;AAC0C;AACX;AACoB;AACJ;AACI;AACoB;AAClF;AACJ;AACM;;;;;;;;;;;;;ACjCvD;AAAA;AAAkF;;AAEnE;AACf,kBAAkB,gDAAO;AACzB,kBAAkB,gDAAO;AACzB,kBAAkB,gDAAO;AACzB,kBAAkB,gDAAO;AACzB,YAAY,oDAAG;AACf,YAAY,oDAAG;AACf,YAAY,oDAAG;AACf,YAAY,oDAAG;AACf,kBAAkB,oDAAG;AACrB,kBAAkB,oDAAG;AACrB,kBAAkB,oDAAG;AACrB,kBAAkB,oDAAG;AACrB,cAAc,qDAAI,CAAC,qDAAI,CAAC,yDAAQ,wBAAwB,yDAAQ;AAChE,UAAU,oDAAG;;AAEb;AACA,YAAY,oDAAG;AACf,YAAY,oDAAG;AACf;AACA;AACA;AACA;AACA,MAAM,sDAAK,SAAS,gDAAO;AAC3B,MAAM,sDAAK,IAAI,qDAAI,mBAAmB,gDAAO;AAC7C;AACA,GAAG;AACH,iBAAiB,gDAAO,OAAO,gDAAO;AACtC;;AAEA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACnCD;AAAA;AAAA;AAAA;AAAA;AAA+B;AAC+B;AACjC;AACI;;AAEjC;AACA;AACA;AACA;;AAEA;AACA,UAAU,gDAAI;AACd,SAAS,gDAAI;AACb;AACA,WAAW,gDAAI;AACf,gBAAgB,gDAAI;AACpB,cAAc,gDAAI;AAClB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,gDAAI;AAClD;;AAEA;AACA,YAAY,gDAAO,SAAS,gDAAO;AACnC,8BAA8B,oDAAG,iBAAiB,oDAAG;AACrD;AACA;;AAEA;AACA,YAAY,gDAAO,SAAS,gDAAO;AACnC,eAAe,oDAAG;AAClB,eAAe,oDAAG;AAClB,cAAc,oDAAG;AACjB,iBAAiB,oDAAG;AACpB,iBAAiB,oDAAG;AACpB;AACA;AACA;AACA,gBAAgB,sDAAK,CAAC,qDAAI;AAC1B;AACA;;AAEe;AACf,kBAAkB,8CAAK;AACvB,EAAE,0DAAM;AACR;AACA,CAAC;;;;;;;;;;;;;ACpDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,mCAAmC;AACxE;AACA;;AAEA;AACP;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACnCA;AAAA;AAAe;;;;;;;;;;;;;ACAf;AAAA;AAAA;AAAA;AAA+B;AACA;AACD;;AAE9B,kBAAkB,8CAAK;AACvB,sBAAsB,8CAAK;AAC3B;AACA;AACA;AACA;;AAEA;AACA,SAAS,gDAAI;AACb,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf;AACA;AACA;AACA,GAAG;AACH;AACA,mEAAmE,gDAAI;AACvE,gBAAgB,oDAAG;AACnB,sBAAsB,8CAAK;AAC3B,GAAG;AACH;AACA;AACA,kBAAkB,8CAAK;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,yEAAU,EAAC;;;;;;;;;;;;;ACjD1B;AAAA;AAA8B;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf,gBAAgB,gDAAI;AACpB,cAAc,gDAAI;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC3B5B;AAAA;AAAgC;;AAEhC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oCAAoC,qDAAI;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,qDAAI;;AAEd;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;ACnG9B;AAAA;AAAA;AAAA;AAA+B;AACD;;AAEf;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,4CAAG;AACpD;AACA;AACA;AACA,GAAG;AACH,UAAU,gDAAI;AACd;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACJ;AACD;AACI;AACI;AACF;AACA;AACF;;AAEtB;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM,0DAAM;AACZ;AACA;AACA;;AAEA;AACA,IAAI,0DAAM,0BAA0B,gDAAQ;AAC5C,WAAW,gDAAQ;AACnB;;AAEA;AACA,IAAI,0DAAM,0BAA0B,mDAAW;AAC/C,WAAW,mDAAW;AACtB;;AAEA;AACA,IAAI,0DAAM,0BAA0B,kDAAU;AAC9C,WAAW,kDAAU;AACrB;;AAEA;AACA,IAAI,0DAAM,0BAA0B,oDAAY;AAChD,WAAW,oDAAY;AACvB;;AAEA;AACA,kFAAkF,oDAAQ;AAC1F;;AAEA;AACA;AACA,qDAAqD,kDAAU,QAAQ,mDAAW;AAClF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC5DD;AAAA;AAAA;AAAA;AAA+B;AACC;AACF;;AAE9B,oBAAoB,8CAAK;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS,gDAAI;AACb;AACA;AACA,GAAG;AACH;AACA;AACA,yBAAyB,gDAAI;AAC7B,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,oBAAoB,8CAAK;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,qDAAI;AACpB;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;AC5C5B;AAAA;AAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1DA;AAAA;AAAuC;;AAExB;AACf,SAAS,oDAAG,gBAAgB,gDAAO,IAAI,oDAAG,gBAAgB,gDAAO;AACjE,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAA+B;AACqD;AACsB;;AAE1G;AACA,MAAM,oDAAG,cAAc,2CAAE;AACzB;AACA;AACA,WAAW,qDAAI,eAAe,oDAAG,aAAa,2CAAE,IAAI,4CAAG,GAAG,2CAAE;AAC5D;;AAEe;AACf;AACA;AACA,eAAe,oDAAG;AAClB,gBAAgB,oDAAG,WAAW,oDAAG;AACjC;AACA;;AAEA,gBAAgB,8CAAK;;AAErB,0BAA0B,+CAAM,GAAG,gDAAO;AAC1C,iCAAiC,+CAAM,GAAG,gDAAO;;AAEjD,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA;AACA,+BAA+B,kDAAS;AACxC,kBAAkB,oDAAG;AACrB,kBAAkB,oD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C;AACf;AACA;AACA;AACA;AACA,kBAAkB,iEAAW;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,iBAAiB,oDAAQ;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,oDAAQ,IAAI,kEAAa;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,gDAAO,OAAO,oDAAG,cAAc,oDAAG,4BAA4B,gDAAO;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yDAAS;AACpB;AACA;AACA,WAAW,uDAAO;AAClB;AACA;AACA,WAAW,wDAAQ;AACnB;AACA;AACA,WAAW,yDAAS;AACpB;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACpFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACZ;AACM;AACb;AACE;AACsB;AACf;AACD;AACqB;AAC5B;;AAErC,uBAAuB,iEAAW;AAClC;AACA,0BAA0B,gDAAO,MAAM,gDAAO;AAC9C;AACA,CAAC;;AAED;AACA,SAAS,iEAAW;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,oDAAG;AACpB,iBAAiB,oDAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf,uCAAuC,gBAAgB,EAAE;AACzD;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6DAAgB;AAC9C,wCAAwC,oDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,gDAAO,aAAa,gDAAO;AACxE;;AAEA;AACA;AACA,gCAAgC,gDAAO,aAAa,gDAAO;AAC3D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,+DAAU,aAAa,gDAAO,mBAAmB,6DAAgB,sBAAsB,gDAAO;AAC5I;;AAEA;AACA,iFAAiF,oDAAQ,IAAI,kEAAa;AAC1G;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qDAAqD,gDAAO,qBAAqB,gDAAO,0BAA0B,gDAAO,QAAQ,gDAAO;AACxI;;AAEA;AACA,0DAA0D,gDAAO,0BAA0B,gDAAO,2CAA2C,gDAAO,mCAAmC,gDAAO,aAAa,gDAAO,eAAe,gDAAO;AACxO;;AAEA;AACA,iDAAiD,gDAAO,wBAAwB,gDAAO;AACvF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iDAAiD,4DAAQ,+CAA+C,qDAAI;AAC5G;;AAEA;AACA,WAAW,yDAAS;AACpB;;AAEA;AACA,WAAW,uDAAO;AAClB;;AAEA;AACA,WAAW,wDAAQ;AACnB;;AAEA;AACA,WAAW,yDAAS;AACpB;;AAEA;AACA;AACA;AACA,aAAa,kEAAa;AAC1B,uBAAuB,2DAAO;AAC9B,6BAA6B,2DAAO;AACpC,sBAAsB,4DAAQ;AAC9B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE;AAC1B;AACF;;AAE7B;AACP,kBAAkB,oDAAG,CAAC,oDAAG,EAAE,+CAAM;AACjC;;AAEA;AACA,iBAAiB,qDAAI,CAAC,oDAAG,OAAO,+CAAM;AACtC;;AAEe;AACf;AACA,mBAAmB,4CAAG;AACtB,CAAC;;AAEM;AACP,UAAU,yDAAU;AACpB;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,2CAAE;AACd,cAAc,4DAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAoC;AACI;;AAEjC;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,QAAQ,oDAAG,UAAU,gDAAO;AAC/B;AACA;AACA;AACA;AACA;;AAEe;AACf,SAAS,yDAAU;AACnB;AACA,CAAC;;;;;;;;;;;;;AC3BD;AAAA;AAAA;AAAA;AAAA;AAAmD;AACJ;AACX;;AAE7B;AACP,UAAU,oDAAG,MAAM,oDAAG,KAAK,oDAAG;AAC9B;;AAEA,yBAAyB,qEAAe,CAAC,6CAAI;;AAE9B;AACf,SAAS,yDAAU;AACnB;AACA,sBAAsB,gDAAO;AAC7B,CAAC;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAA0C;AAC+B;AAC7B;;AAE5C;AACA,qBAAqB,oDAAG,MAAM,gDAAO,EAAE;;AAExB;AACf;AACA,CAAC;;AAED;AACA,SAAS,iEAAW;AACpB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qDAAI;AAClB,iBAAiB,qDAAI;AACrB,oBAAoB,oDAAG,CAAC,oDAAG,WAAW,gDAAO,IAAI,oDAAG,sBAAsB,gDAAO,6BAA6B,sDAAK;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,oDAAG;AAChB,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;AACA;AACA,gCAAgC,uBAAuB,sCAAsC,EAAE;AAC/F,8BAA8B,qBAAqB,sCAAsC;AACzF;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,+DAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrGA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACK;AACX;;AAE7B;AACP,WAAW,oDAAG,aAAa,oDAAG;AAC9B,eAAe,oDAAG,SAAS,oDAAG;AAC9B;;AAEA,0BAA0B,qEAAe;AACzC,aAAa,qDAAI;AACjB,CAAC;;AAEc;AACf,SAAS,yDAAU;AACnB;AACA;AACA,CAAC;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAuD;AACN;;AAE1C;AACP,UAAU,oDAAG,CAAC,oDAAG,EAAE,+CAAM;AACzB;;AAEA;AACA,kBAAkB,qDAAI,CAAC,oDAAG,OAAO,+CAAM;AACvC;;AAEe;AACf,UAAU,uEAAkB;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1BD;AAAA;AAAA;AAAA;AAAmC;AAC6C;;AAEhF;AACA,UAAU,oDAAG,WAAW,2CAAE,iCAAiC,4CAAG,IAAI,4CAAG;AACrE;;AAEA;;AAEO;AACP,yBAAyB,4CAAG,8BAA8B,2DAAO;AACjE;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,2CAAE,YAAY,4CAAG,aAAa,2CAAE,YAAY,4CAAG;AAC3F;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB,oDAAG;AACvB,oBAAoB,oDAAG;AACvB,sBAAsB,oDAAG;AACzB,sBAAsB,oDAAG;;AAEzB;AACA,iBAAiB,oDAAG;AACpB,YAAY,oDAAG;AACf,YAAY,oDAAG;AACf,YAAY,oDAAG;AACf;AACA;AACA,MAAM,sDAAK;AACX,MAAM,qDAAI;AACV;AACA;;AAEA;AACA,iBAAiB,oDAAG;AACpB,YAAY,oDAAG;AACf,YAAY,oDAAG;AACf,YAAY,oDAAG;AACf;AACA;AACA,MAAM,sDAAK;AACX,MAAM,qDAAI;AACV;AACA;;AAEA;AACA;;AAEe;AACf,qCAAqC,gDAAO,cAAc,gDAAO,kCAAkC,gDAAO;;AAE1G;AACA,0CAA0C,gDAAO,mBAAmB,gDAAO;AAC3E,6BAA6B,gDAAO,oBAAoB,gDAAO;AAC/D;;AAEA;AACA,iDAAiD,gDAAO,mBAAmB,gDAAO;AAClF,6BAA6B,gDAAO,oBAAoB,gDAAO;AAC/D;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC3ED;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;;;;;;;;;;;;ACpED;AAAA;AAAe;AACf;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,yBAAyB,yBAAyB,EAAE;AACpD,sBAAsB,sBAAsB,EAAE;AAC9C,yBAAyB,yBAAyB,EAAE;AACpD,uBAAuB,uBAAuB,EAAE;AAChD,4BAA4B,4BAA4B,EAAE;AAC1D,0BAA0B,0BAA0B;AACpD;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAO;AACP;AACA;;AAEO;AACP;AACA;AACA;;;;;;;;;;;;;ACPA;AAAA;AAAe;AACf;AACA;AACA,oBAAoB;AACpB,CAAC;;AAEM;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACnFD;AAAA;AAAO;AACP;AACA;;AAEe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACXD;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACND;AAAe;AACf;AACA;AACA;AACA;AACA,sCAAsC,OAAO;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACdD;AAAe;AACf;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACXD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACF;AACY;AACF;AACV;AACF;AACE;AACA;AACU;AACI;AACV;AACF;AACM;;AAE3B;AACf;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,iDAAU;AACnB,QAAQ,gDAAS;AACjB,aAAa,qDAAc;AAC3B,cAAc,sDAAe;AAC7B,QAAQ,gDAAS;AACjB,OAAO,+CAAQ;AACf,QAAQ,gDAAS;AACjB,QAAQ,gDAAS;AACjB,aAAa,qDAAc;AAC3B,eAAe,uDAAgB;AAC/B,UAAU,mDAAW;AACrB,SAAS,kDAAU;AACnB;AACA,qBAAqB,qDAAa;AAClC;;;;;;;;;;;;;AC1FA;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;ACbD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAe;AACf;AACA;AACA,wBAAwB;AACxB,kBAAkB,kCAAkC;AACpD;AACA,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAe;AACf;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;ACND;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACU;AACV;AACW;AACF;AACL;AACF;AACR;AACY;AACO;AACJ;AACE;AACQ;AACF;AACI;;;;;;;;;;;;;ACdrE;AAAA;AAAoC;;AAErB;AACf,4BAA4B,yDAAO;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,kBAAkB;AAC/B,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrHA;AAAA;AAAA;AAAA;AAA0C;AACD;AACa;;AAEtD;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,gBAAgB,yDAAY;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,kCAAkC,yDAAY;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,8DAAQ;AAChD;;AAEA;AACA;AACA;;AAEA;AACA,uEAAuE,4DAAQ;AAC/E;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wBAAwB,OAAO;AAC/B,UAAU,gEAAW;AACrB,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9EA;AAAA;AAAA;AAAA;AAAgC;AACG;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP,uBAAuB,yDAAK;;AAE5B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,wCAAwC,KAAK,2DAAO;;AAEvE;AACA,aAAa,OAAO;;AAEpB;AACA;;AAEe;AACf;AACA;AACA,CAAC;;;;;;;;;;;;;ACtHD;AAAA;AAAA;AAA2C;AACC;;AAE7B;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yDAAS;AACxC;AACA;;AAEA;AACA;AACA;AACA,QAAQ,gEAAW;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACnDD;AAAA;AAAA;AAAwC;AACiB;;AAEzD,eAAe,UAAU;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB,0CAA0C,wDAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,oCAAoC,KAAK,EAAE,aAAa,iEAAa;AACzG;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,8DAAQ;AAC5C;;AAEA;AACA,0CAA0C,8DAAQ;AAClD;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC1ED;AAAA;AAA0C;;AAE1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,gBAAgB;AAChB,aAAa;AACb,aAAa;AACb,aAAa;AACb,aAAa;AACb,gBAAgB;AAChB,aAAa;AACb;;AAEA,mCAAmC,wDAAI;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACe;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC5OD;AAAe;AACf;AACA;AACA;;AAEA,6BAA6B,OAAO;AACpC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC7CD;AAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAmC;AACE;AACI;AACa;;AAEvC;AACf,aAAa,oDAAQ;AACrB;AACA;AACA;AACA;AACA,qBAAqB,yDAAY;AACjC,mBAAmB,yDAAY;AAC/B,qBAAqB,yDAAY;AACjC,sBAAsB,yDAAY;AAClC,oBAAoB,yDAAY;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iDAAS;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC,8DAAQ;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E,4DAAQ;AACpF;;AAEA;AACA;AACA;;AAEA;AACA,0EAA0E,4DAAQ;AAClF;;AAEA;AACA,4EAA4E,4DAAQ;AACpF;;AAEA;AACA,6EAA6E,4DAAQ;AACrF;;AAEA;AACA,2EAA2E,4DAAQ;AACnF;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC7FD;AAAA;AAAA;AAAA;AAAoC;AACE;AACW;;AAElC;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iDAAiD,OAAO;AACxD,sBAAsB,wDAAW;AACjC,aAAa,yDAAY;AACzB;AACA;AACA,KAAK;AACL,gCAAgC,kEAAa;AAC7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,EAAE,gDAAG,CAAC,EAAC;;;;;;;;;;;;;ACnCR;AAAe;AACf;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACLD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Q;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,yBAAyB,iDAAK;AAC9B,+BAA+B,uDAAW;;;;;;;;;;;;;ACtDjD;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAiC;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,2BAA2B;AAC3B;AACA;AACA,wCAAwC;AACxC,2BAA2B;AAC3B;AACA,KAAK,OAAO;AACZ;AACA,cAAc,SAAS,0DAAM,SAAS;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO;AACnC;AACA,SAAS;AACT,CAAC;;;;;;;;;;;;;AC/DD;AAAA;AAAA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACzBD;AAAA;AAAA;AAAA;AAAA;AAAkC;AACY;;AAE9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,aAAa,0DAAM,SAAS,GAAG,aAAa,0DAAM,SAAS;AACzE,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,gCAAgC;AAChE,cAAc,sDAAsD,0DAAM,OAAO;AACjF,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,cAAc,qDAAqD,0DAAM,OAAO;AAChF,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,aAAa,0DAAM,SAAS,GAAG,aAAa,0DAAM,SAAS;AACzE,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,mDAAmD,kDAAQ;AAC3D,mDAAmD,kDAAQ;;;;;;;;;;;;;AC9DlE;AAAA;AAAA;AAAA;AAAmD;;AAEnD;;AAEA;AACO;AACP;AACA,wBAAwB,sDAAQ,GAAG,6DAAS;AAC5C;;AAEO;AACP,4BAA4B,sDAAQ;AACpC;AACA;AACA,iEAAiE,sDAAQ;AACzE;AACA,SAAS,6DAAS;AAClB;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACJ;AACa;AACX;AACI;AACA;AACA;AACI;AACuB;;AAE7C;AACf;AACA,wCAAwC,4DAAQ;AAChD,0BAA0B,kDAAM;AAChC,+BAA+B,sDAAK,eAAe,+CAAG,IAAI,kDAAM;AAChE,qBAAqB,8CAAK,GAAG,+CAAG;AAChC,4BAA4B,gDAAI;AAChC,QAAQ,qEAAa,MAAM,uDAAW;AACtC,2BAA2B,sDAAY;AACvC,0FAA0F,kDAAM;AAChG,QAAQ,kDAAM;AACd,CAAC;;;;;;;;;;;;;ACrBD;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC,mBAAmB,EAAC;;;;;;;;;;;;;ACtErB;AAAA;AAAA;AAAA;AAA0C;;;;;;;;;;;;;ACA1C;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEe,mEAAI,EAAC;;;;;;;;;;;;;ACjIpB;AAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACdD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACnBD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACfD;AAAA;AACA;AACA;AACA;AACe;AACf;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB,uBAAuB,yDAAK;AAC5B;AACA;;AAEA,gCAAgC;AAChC;;AAEe;AACf;;AAEA;AACA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC,QAAQ;AAC3C,qBAAqB,qCAAqC;;AAE1D;AACA,CAAC;;;;;;;;;;;;;AChDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACQ;AACR;AACQ;AACJ;;;;;;;;;;;;;ACJrD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACtBD;AAAA;AAAe;AACf;AACA;AACA;AACA,CAAC;;AAED;AACA,wCAAwC;;AAExC;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD;AACnD,oDAAoD;AACpD,GAAG;AACH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA;;AAEA;AACA;;;;;;;;;;;;;ACnFA;AAAe;AACf,kDAAkD;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC,yCAAyC;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1CD;AAAe;AACf;AACA;AACA,8CAA8C;AAC9C,GAAG;AACH;AACA,CAAC;;;;;;;;;;;;;ACND;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAA6B;;AAEd;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,gDAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;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CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,YAAY,uDAAM;AAClB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,oBAAoB,0DAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wFAAwF,gEAAiB;AACzG;;AAEA;AACA,sDAAsD,kDAAM;AAC5D;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD,+DAAgB;AAChE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AAC/B;AACE;AACL;AACL;AACI;AACC;AACN;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAQ;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE,gEAAS;AAC3E;AACA;;AAEA,sBAAsB,0DAAW;;AAEjC,2BAA2B,+DAAgB;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf,cAAc,4DAAS,eAAe,uDAAQ;;AAE9C;AACA,WAAW,2DAAI;AACf;;AAEA,SAAS,yDAAgB;AACzB;;AAEO;AACP,cAAc,uDAAO;;AAErB;AACA,WAAW,2DAAI;AACf;;AAEA,SAAS,yDAAgB;AACzB;;AAEO;AACP,cAAc,4DAAS;;AAEvB;AACA,WAAW,2DAAI;AACf;;AAEA,SAAS,yDAAgB;AACzB;;AAEO;AACP,cAAc,sDAAM;;AAEpB;AACA,WAAW,2DAAI;AACf;;AAEA,SAAS,yDAAgB;AACzB;;AAEO;AACP;AACA;;;;;;;;;;;;;AC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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,kDAAS;;AAEX;AACA;;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACsB;AACxB;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP,wBAAwB,uDAAQ,EAAE,uDAAQ;AAC1C;;AAEA;AACA,sCAAsC,uDAAQ,EAAE,uDAAQ;AACxD;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,4DAAS;AAClB;;AAEe;AACf,qBAAqB,kEAAW;;AAEhC;AACA,WAAW,2DAAI;AACf;;AAEA,EAAE,kDAAS;;AAEX;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACjDA;AAAA;AAAA;AAAA;AAAkE;AAC9B;;AAErB;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,yDAAS;AACjD;AACA;;AAEA;AACA,2CAA2C,uDAAM;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,kDAAS;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,kDAAS;AAClB;;;;;;;;;;;;;ACxDA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACM;AACF;;AAErB;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,uDAAM;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,kDAAS,OAAO,4DAAS;AAClC;;;;;;;;;;;;;ACvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACL;AACE;AACL;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf,gBAAgB,8DAAU;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oEAAoE,kDAAM;AAC1E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAE,kDAAS;;AAEX,SAAS,4DAAS;AAClB;;;;;;;;;;;;;AC9DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACpB;AACE;AACL;AACL;AACK;AACN;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,uDAAQ;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,0DAAW;;AAEjC,2BAA2B,+DAAgB;;AAE3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf,cAAc,4DAAS,eAAe,uDAAQ;;AAE9C;AACA;AACA;;AAEA,SAAS,yDAAgB;AACzB;;AAEO;AACP,cAAc,uDAAO;;AAErB;AACA;AACA;;AAEA,SAAS,yDAAgB;AACzB;;AAEO;AACP,cAAc,4DAAS;;AAEvB;AACA;AACA;;AAEA,SAAS,yDAAgB;AACzB;;AAEO;AACP,cAAc,sDAAM;;AAEpB;AACA;AACA;;AAEA,SAAS,yDAAgB;AACzB;;AAEO;AACP;AACA;;;;;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACZ;AACE;;AAE5B;AACf;AACA,qBAAqB,uDAAQ;;AAE7B;AACA,6CAA6C,uDAAM;AACnD;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,kDAAS;AACzB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,cAAc,YAAY,yDAAQ;AACzD;;AAEA;AACA;AACA;;AAEA,SAAS,yDAAgB;AACzB;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsC;AACY;AACd;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA;AACA;;AAEA,SAAS,4DAAS;AAClB;;AAEe;AACf,wBAAwB,kEAAW;;AAEnC;AACA,WAAW,2DAAI;AACf;;AAEA,SAAS,kDAAS;AAClB;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AAAgC;AACI;;AAErB;AACf;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,uDAAM;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,kDAAS;AAClB;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAkC;AAC+E;;AAElG;AACf,aAAa,yDAAQ;AACrB;AACA,cAAc,iEAAe;AAC7B;AACA;AACA;AACA,4DAA4D,iEAAe;AAC3E,aAAa,8DAAY;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,gEAAc;AAC1E;AACA;AACA;AACA;AACA,4DAA4D,gEAAc;AAC1E;AACA;AACA;AACA,SAAS,wDAAM;AACf,CAAC;;;;;;;;;;;;;AC5BD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4C;AACsE;AACxE;AACO;AACb;AACP;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP,cAAc,8DAAU;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AA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ACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf,iBAAiB,6DAAS;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACxDD;AAAe;AACf;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACLD;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1ED;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAqC;AACA;AACL;AACM;;AAEtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,gBAAgB;AACxB;AACA;AACA;AACA,KAAK;AACL,qBAAqB,mDAAS;AAC9B;AACA;;AAEA;AACA,QAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,mDAAS;AAC9B;AACA;;AAEA;AA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AACf,mDAAmD,2DAAO;AAC1D,uFAAuF,4DAAQ;AAC/F;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;ACbD;AAAe;AACf,2DAA2D,OAAO;AAClE,8DAA8D,OAAO;AACrE;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACND;AAAe;AACf;AACA;AACA;AACA,oCAAoC;AACpC;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAqC;;AAEtB;AACf,6BAA6B,mDAAS;;AAEtC,8JAA8J,OAAO;AACrK,wHAAwH,OAAO;AAC/H;AACA;AACA;AACA;AACA;;AAEA,QAAQ,QAAQ;AAChB;AACA;;AAEA,aAAa,mDAAS;AACtB,CAAC;;;;;;;;;;;;;AClBD;AAAe;;AAEf,2DAA2D,OAAO;AAClE,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACVD;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEe;AACf;;AAEA;AACA;AACA,6CAA6C,OAAO;AACpD,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,OAAO;AACpB;AACA,CAAC;;;;;;;;;;;;;AClED;AAAe;;AAEf,4DAA4D,SAAS;AACrE,4EAA4E,UAAU;AACtF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACZD;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3BD;AAAA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAqC;AACC;;AAEvB;AACf,6CAA6C,4DAAQ;;AAErD,qFAAqF,OAAO;AAC5F,+GAA+G,OAAO;AACtH;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mDAAS;AACtB,CAAC;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAA;AAAqC;AACL;AACY;;AAE5C;AACA;AACA;AACA,gCAAgC,yDAAK;AACrC;AACA;;AAEe;AACf;AACA,gBAAgB,+DAAW;;AAE3B,yFAAyF,OAAO;AAChG,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mDAAS;AACtB,CAAC;;;;;;;;;;;;;ACzBD;AAAA;AAA2C;;AAE3C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;AACA,wDAAwD,gEAAY;AACpE,CAAC;;;;;;;;;;;;;ACjBD;AAAA;AAA2C;;AAE3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,6DAA6D,gEAAY;AACzE,CAAC;;;;;;;;;;;;;ACjBD;AAAe;AACf;AACA,kCAAkC;AAClC;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAqC;;AAEtB;AACf;;AAEA;AACA;AACA;;AAEA,sFAAsF,OAAO;AAC7F,wGAAwG,OAAO;AAC/G;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,mDAAS;AACtB,CAAC;;AAED;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA,SAAS,0DAAW;AACpB;;;;;;;;;;;;;AClCA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACxBD;AAAA;;AAEe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAe;AACf;AACA;AACA,0BAA0B;AAC1B,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;AAA6B;AACQ;AACgE;;AAErG;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA;AACA;AACA,cAAc,gDAAO;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B,qDAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAI,CAAC,oDAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA,qBAAqB,4DAAQ;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iDAAiD,+CAAM;AACvD,+CAA+C,+CAAM;AACrD,aAAa,oDAAG;AAChB;;AAEA,qCAAqC,oDAAI;;AAEzC;AACA;;AAEA;AACA,eAAe,gDAAO;;AAEtB;AACA,kBAAkB,4CAAG,GAAG,gDAAO;AAC/B,0BAA0B,oDAAG,WAAW,oDAAG;AAC3C;AACA,eAAe,gDAAO;AACtB,4BAA4B,oDAAG,WAAW,oDAAG;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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AAU,OAAO,EAAE;AAC7D,kCAAkC,QAAQ,iEAAU,OAAO,EAAE;;AAE7D;AACA,gCAAgC,gEAAW;AAC3C;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC5BD;AAAA;AAAO;;AAEQ;AACf;AACA;AACA,oBAAoB;AACpB,CAAC;;;;;;;;;;;;;ACND;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,8CAA8C;AAC9C,uDAAuD;AACvD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B,sEAAsE;AACpG,8BAA8B;AAC9B,8BAA8B,oFAAoF;AAClH,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;AClDD;AAAA;AAAA;AAA8B;AACG;;AAEjC;AACA;AACA;;AAEA;AACA,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B,4BAA4B;AAC1D,8BAA8B,4BAA4B;AAC1D,8BAA8B,4BAA4B,4FAA4F;AACtJ,eAAe,uDAAK,aAAa;AACjC;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACnDD;AAAA;AAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B,oFAAoF,0EAA0E;AAC5L,8BAA8B;AAC9B,eAAe,uDAAK,aAAa;AACjC;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACtCD;AAAA;AAAiC;;AAEjC;AACA,oBAAoB,+CAAK;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA,4BAA4B,+CAAK;AACjC;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,OAAO,EAAC;;;;;;;;;;;;;ACvDT;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uDAAuD;AACvD,8CAA8C;AAC9C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B,sEAAsE;AACpG,8BAA8B,4BAA4B;AAC1D,8BAA8B;AAC9B,iCAAiC;AACjC;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,IAAI,EAAC;;;;;;;;;;;;;AC5DN;AAAA;AAAA;AAAA;AAA8B;AACM;;AAE7B;AACP;AACA;AACA;;AAEA;AACA,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B,4BAA4B;AAC1D,8BAA8B,kDAAkD;AAChF,8BAA8B,4BAA4B;AAC1D,eAAe,0DAAK,aAAa;AACjC;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,IAAI,EAAC;;;;;;;;;;;;;AC5DN;AAAA;AAAA;AAAoC;;AAE7B;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B,kGAAkG;AAChI,8BAA8B;AAC9B,eAAe,0DAAK,aAAa;AACjC;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,IAAI,EAAC;;;;;;;;;;;;;AChDN;AAAA;AAAA;AAAA;AAAmC;AACI;;AAEhC;AACP;AACA;AACA;AACA;;AAEA,oBAAoB,gDAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,gDAAO;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uDAAuD;AACvD,6CAA6C;AAC7C;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,sEAAsE;AACpG,8BAA8B;AAC9B,8BAA8B;AAC9B,iCAAiC;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA,wDAAwD,qDAAQ;AAChE;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,MAAM,EAAC;;;;;;;;;;;;;ACvFR;AAAA;AAAA;AAAA;AAAmD;AACrB;AACQ;;AAEtC;AACA;AACA;AACA;;AAEA;AACA,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,4BAA4B;AAC1D,8BAA8B,kDAAkD;AAChF,8BAA8B,4BAA4B;AAC1D,eAAe,4DAAK,aAAa;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA,8DAA8D,iEAAc;AAC5E;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,MAAM,EAAC;;;;;;;;;;;;;ACzER;AAAA;AAAA;AAA+C;AACT;;AAEtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B,kGAAkG;AAChI,8BAA8B;AAC9B,eAAe,4DAAK,aAAa;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;;AAEf;AACA,4DAA4D,6DAAY;AACxE;;AAEA;AACA;AACA;;AAEA;AACA,CAAC,MAAM,EAAC;;;;;;;;;;;;;AC7DR;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,8BAA8B,sEAAsE;AACpG,8BAA8B;AAC9B,0CAA0C;AAC1C;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;AC9BD;AAAA;AAA8B;;AAE9B;AACA;AACA;;AAEA;AACA,aAAa,gDAAI;AACjB,WAAW,gDAAI;AACf;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,uDAAuD;AACvD,4DAA4D;AAC5D;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,iDAAiD;AACjD;AACA,8BAA8B,sEAAsE;AACpG,8BAA8B;AAC9B,8BAA8B,wDAAwD;AACtF,8DAA8D;AAC9D;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,4BAA4B,EAAE;AACxD,yBAAyB,2BAA2B,EAAE;AACtD,0BAA0B,4BAA4B,EAAE;AACxD,iDAAiD,mDAAmD;AACpG;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;;;;;;;;;;;;ACvGA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB;AACA,aAAa,OAAO;AACpB;AACA,iBAAiB,QAAQ;AACzB;AACA,aAAa,WAAW;AACxB;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;AChED;AAAA;AAAA;AAAA;AAAsC;;AAE/B,oCAAoC,kDAAW;;AAEtD;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;;;;;;;ACnCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA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;;AAE5C;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,kEAAQ,CAAC,0DAAY;;AAEZ,uEAAQ,EAAC;;;;;;;;;;;;;ACZxB;AAAA;AAAA;AAWiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEe;AACfwCAAwC,iDAAS,cAAc,yDAAS;AACxE,iBAAiB,8CAAM;AACvB;AACA;AACA;AACA,SAAS;AACT;AACA,wCAAwC,kDAAU,cAAc,0DAAU;AAC1E,iBAAiB,+CAAO;AACxB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA,KAAK;AACL;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA,KAAK;AACL;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA,KAAK;AACL;AACA;AACA,+BAA+B,kBAAkB;AACjD;AACA;AACA;AACA;;AAEA,YAAY,4BAA4B;AACxC;AACA;AACA,kCAAkC;;AAEliBAAiB,+CAAO,OAAO,wDAAQ;AACvC;;AAEA;AACA;AACA;;AAEA;AA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GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP,QAAQ;AACR,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;AC7GA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACmC;AACa;AAChD;AACA;AACA;AACe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,sDAAS;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,sDAAS;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B;AAC7B,0BAA0B;AAC1B,wBAAwB;;AAExB,2BAA2B,yDAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,2DAAM;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2DAAM;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC1UD;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAgC;AACF;;AAEf;AACf,SAAS,uDAAM,CAAC,wDAAO;AACvB,CAAC;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAoC;AACD;;AAEnC;AACA;AACA;AACA;AACA,mBAAmB,iDAAK,8CAA8C,iDAAK;AAC3E;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf,iBAAiB,0DAAS;AAC1B;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACxBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACE;AACJ;AACI;AACJ;AACQ;AACE;AACJ;AACJ;AACM;AACM;AACR;AACM;AACC;AACb;AACI;AACF;AACO;;;;;;;;;;;;;ACjBlD;AAAA;AAAA;;AAEe;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAwC;AACZ;;AAEb;AACf,cAAc,4DAAW;AACzB;AACA,SAAS,sDAAK;AACd,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAsC;;AAEvB;AACf;AACA;AACA,SAAS,mDAAU,2BAA2B,OAAO,mDAAU,sBAAsB;AACrF,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAO;;AAEQ;AACf;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;ACRF;AAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAkD;;AAEnC;AACf;AACA,YAAY,0DAAS;AACrB,YAAY,0DAAS,eAAe,qDAAI;AACxC,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAkD;;AAEnC;AACf;AACA,YAAY,0DAAS;AACrB,YAAY,0DAAS,qCAAqC,qDAAI;AAC9D,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAiC;;AAElB;AACf,mDAAmD,wDAAO;AAC1D;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAqC;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf,iBAAiB,0DAAS;;AAE1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACxDD;AAAe;AACf;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACLD;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEe;AACf;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC1ED;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAkC;AACA;AACC;;AAEnC,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ,gBAAgB;AACxB;AACA;AACA;AACA,KAAK;AACL,qBAAqB,gDAAS;AAC9B;AACA;;AAEA;AACA,QAAQ,iBAAiB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,qBAAqB,gDAAS;AAC9B;AACA;;AAEA;AACA,aAAa,iBAAiB;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C;AACpC;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAkC;;AAEnB;;AAEf,8JAA8J,OAAO;AACrK,wHAAwH,OAAO;AAC/H;AACA;AACA;AACA;AACA;;AAEA,QAAQ,QAAQ;AAChB;AACA;;AAEA,aAAa,gDAAS;AACtB,CAAC;;;;;;;;;;;;;ACjBD;AAAe;;AAEf,2DAA2D,OAAO;AAClE,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACVD;AAAe;AACf;AACA,wBAAwB,mBAAmB,EAAE;AAC7C;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAA;;AAEO;;AAEP;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEe;AACf;;AAEA;AACA;AACA,6CAA6C,OAAO;AACpD,4BAA4B,OAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa,OAAO;AACpB;AACA,CAAC;;AAEM;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;AC1GA;AAAe;;AAEf,4DAA4D,SAAS;AACrE,4EAA4E,UAAU;AACtF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACZD;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3BD;AAAA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AACA;AACA;AACA;;AAEe;AACf;AACA,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAkC;AACC;;AAEpB;AACf,6CAA6C,yDAAQ;;AAErD,qFAAqF,OAAO;AAC5F,+GAA+G,OAAO;AACtH;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,gDAAS;AACtB,CAAC;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAkC;AACO;;AAE1B;AACf,6CAA6C,4DAAW;;AAExD,yFAAyF,OAAO;AAChG,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,gDAAS;AACtB,CAAC;;;;;;;;;;;;;AChBD;AAAe;AACf;AACA,wBAAwB,QAAQ,EAAE;AAClC;AACA,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAkC;;AAEnB;AACf;;AAEA;AACA;AACA;;AAEA,sFAAsF,OAAO;AAC7F,wGAAwG,OAAO;AAC/G;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,gDAAS;AACtB,CAAC;;AAED;AACA;AACA;;;;;;;;;;;;;ACvBA;AAAe;AACf;AACA,CAAC;;;;;;;;;;;;;ACFD;AAAA;AAAA;AAAoC;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAEM;AACP;AACA,SAAS,uDAAW;AACpB;;;;;;;;;;;;;AClCA;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACxBD;AAAA;;AAEe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACRD;AAAA;AAAqC;;AAEtB;AACf,gBAAgB,mDAAK;AACrB;AACA;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAwC;AACZ;;AAEb;AACf,4DAA4D,4DAAW;;AAEvE,0DAA0D,OAAO;AACjE;AACA,aAAa,sDAAK;AAClB;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAAwC;AACZ;;AAEb;AACf,iCAAiC,4DAAW;;AAE5C,0EAA0E,OAAO;AACjF,gBAAgB,sDAAK;AACrB;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACXD;AAAe;AACf;AACA;AACA,0BAA0B;AAC1B,CAAC;;;;;;;;;;;;;ACJD;AAAA;AAAA;AAAiD;AACE;;AAEnD;;AAEe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,iEAAS;AACrD,mBAAmB,+DAAU;AAC7B;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AAC8B;AACd;AACM;;;;;;;;;;;;;ACHpD;AAAA;AAAiE;;AAElD;AACf;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,kDAAkD,eAAe,UAAU;AAC3E,8BAA8B,gEAAQ,qBAAqB,8DAAM;AACjE,qBAAqB,6DAAK;AAC1B;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAA;AAAuC;AACU;AACE;;AAEnD,sDAAS,uBAAuB,qDAAmB;AACnD,sDAAS,wBAAwB,sDAAoB;;;;;;;;;;;;;ACLrD;AAAA;AAAwC;;AAEzB;AACf;AACA,IAAI,6DAAS;AACb,GAAG;AACH,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAyD;AACR;AACV;AACV;;AAE7B;AACA;AACA;AACA;AACA,QAAQ,sDAAc;AACtB;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,GAAG;AACvC;AACA;AACA;AACA;;AAEe;AACf;AACA;;AAEA,sBAAsB,+DAAU;AAChC;AACA,GAAG;AACH,SAAS,kEAAK,oCAAoC,oDAAG;AACrD;;AAEA,2DAA2D,OAAO;AAClE,8DAA8D,OAAO;AACrE;AACA,QAAQ,uEAAQ;AAChB;AACA;AACA;;AAEA,aAAa,+DAAU;AACvB,CAAC;;;;;;;;;;;;;ACzCD;AAAA;AAAA;AAAA;AAAA;AAA+E;AACxC;AACD;AACK;;AAE3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf,iBAAiB,8DAAS,uCAAuC,sEAAoB,GAAG,uDAAW;AACnG;AACA,sEAAsE,4DAAU;AAChF;AACA;AACA,CAAC;;;;;;;;;;;;;AC7ED;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA,iBAAiB,8DAAS;AAC1B;AACA,CAAC;;;;;;;;;;;;;AC3CD;AAAA;AAAwC;;AAExC;AACA;AACA,IAAI,yDAAI;AACR;AACA;;AAEA;AACA;AACA,IAAI,yDAAI;AACR;AACA;;AAEe;AACf;;AAEA;AACA;AACA;AACA;AACA,QAAQ,wDAAG;AACX,CAAC;;;;;;;;;;;;;ACtBD;AAAA;AAAuC;;AAEvC;AACA;AACA,IAAI,wDAAG;AACP;AACA;;AAEA;AACA;AACA,IAAI,wDAAG;AACP;AACA;;AAEe;AACf;;AAEA;AACA;AACA;AACA;AACA,QAAQ,wDAAG;AACX,CAAC;;;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;AACA;AACA,2CAA2C;AAC3C,sCAAsC,wDAAO;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD;AACxD;AACA,0DAA0D;AAC1D;AACA,IAAI,wDAAO;AACX;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;;;;;;;;;;;;ACxJA;AAAA;AAAA;AAAA;AAAsC;AACA;AACM;;AAE7B;AACf;AACA;;AAEA,6CAA6C,6DAAQ;;AAErD,qFAAqF,OAAO;AAC5F,+GAA+G,OAAO;AACtH;AACA;AACA;AACA,QAAQ,4DAAQ,qCAAqC,wDAAG;AACxD;AACA;AACA;;AAEA,aAAa,oDAAU;AACvB,CAAC;;;;;;;;;;;;;ACrBD;AAAA;AAAA;AAAA;AAAyC;AACH;AACM;;AAE7B;AACf;AACA;;AAEA,6CAA6C,gEAAW;;AAExD,yFAAyF,OAAO;AAChG,8DAA8D,OAAO;AACrE;AACA,yFAAyF,wDAAG,uCAAuC,OAAO;AAC1I;AACA,YAAY,4DAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,oDAAU;AACvB,CAAC;;;;;;;;;;;;;ACzBD;AAAA;AAAuC;;AAEvC,gBAAgB,sDAAS;;AAEV;AACf;AACA,CAAC;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+E;AAC5C;AACD;AACI;AACK;;AAE3C;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAK;AACvB,oDAAoD,0DAAK;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAK;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAK;AACvB;AACA;AACA,6EAA6E,0DAAK;AAClF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,wDAAG;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf,yCAAyC,sEAAoB,GAAG,uDAAW;AAC3E;AACA;AACA;AACA;AACA,+CAA+C,4DAAU;AACzD;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC/ED;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACvBD;AAAA;AAAsC;;AAEtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA,qBAAqB,4DAAU;AAC/B;AACA,CAAC;;;;;;;;;;;;;ACnBD;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAA6C;AACD;;AAE7B;AACf;AACA;AACA,YAAY,uDAAK;;AAEjB,2DAA2D,OAAO;AAClE,8DAA8D,OAAO;AACrE;AACA,sBAAsB,wDAAG;AACzB,QAAQ,4DAAQ;AAChB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA,aAAa,oDAAU;AACvB,CAAC;;;;;;;;;;;;;ACvBD;AAAA;AAAA;AAAuC;;AAEvC;AACA;AACA;AACA,mBAAmB,wDAAG;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,wDAAG;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB,2BAA2B,OAAO;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe;AACf;;AAEA;;AAEA;AACA,gBAAgB,wDAAG;AACnB,wCAAwC,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAEM;AACP;;AAEA;AACA,mBAAmB,wDAAG;AACtB,2CAA2C;AAC3C,GAAG;;AAEH;AACA,WAAW,wDAAG;AACd;AACA;;;;;;;;;;;;;AChFA;AAAe,2EAAY,EAAC;;;;;;;;;;;;;ACA5B;AAAA;AAAe;AACf;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,WAAW,kDAAkD;AAC7D,kBAAkB,yDAAyD;AAC3E,aAAa,oDAAoD;AACjE,gBAAgB,uDAAuD;AACvE,QAAQ;AACR,GAAG;AACH;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACwC;;;;;;;;;;;;;ACDlF;AAAA;AAAO;AACP;AACA;;AAEe;AACf;AACA;AACA,CAAC;;;;;;;;;;;;;ACPD;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEO;;AAEP;;AAEe;AACf;AACA;AACA;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACW;AACD;AACF;AACL;AACH;AACF;AACgB;AACC;;AAEpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,sDAAQ;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,8DAAe;AACnC,kBAAkB,4DAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sDAAQ;AAC/B;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,+CAA+C,uDAAS;AACxD;;AAEA;AACA;AACA,oEAAoE,uDAAS;AAC7E;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,+CAA+C,EAAE;AACvF,mDAAmD,6CAA6C,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,kBAAkB,4BAA4B,SAAS,uDAAS,sCAAsC;AACtG;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,cAAc,2DAAM;AACpB;AACA;AACA;AACA,YAAY,iDAAS;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAO;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM,+DAAS;AACf;AACA;;AAEA,IAAI,2DAAO;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,2DAAM;AAClB,YAAY,4DAAO;AACnB;AACA;AACA;;AAEA,IAAI,2DAAW;AACf,IAAI,iEAAa;AACjB;AACA,IAAI,+DAAS;AACb;;AAEA;AACA,MAAM,2DAAO;AACb;AACA;AACA;AACA;AACA;AACA,sEAAsE,4DAAO;AAC7E;;AAEA;AACA;AACA,MAAM,0DAAU;AAChB,MAAM,2DAAO;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,4DAAO;AACpB;AACA;AACA;;AAEA,IAAI,2DAAO;AACX,sBAAsB,2DAAM;AAC5B,SAAS,2DAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iEAAa;AACjB,eAAe,OAAO;AACtB,0BAA0B,4DAAO;AACjC;AACA;AACA;AACA;;AAEA;;AAEA;AACA,gFAAgF,sBAAsB,EAAE;AACxG,MAAM,+DAAS;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,2DAAO;AACX,eAAe,OAAO;AACtB,0BAA0B,4DAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAI,iEAAa;AACjB;AACA,yCAAyC,oBAAoB,EAAE;AAC/D,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAO;AACnB;AACA,kBAAkB,2DAAM;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA,0EAA0E,4DAAQ;AAClF;;AAEA;AACA,sEAAsE,4DAAQ;AAC9E;;AAEA;AACA,yEAAyE,4DAAQ;AACjF;;AAEA;AACA,sEAAsE,4DAAQ;AAC9E;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;AC9bD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,eAAe,2QAA2Q,wBAAwB,qCAAqC,wBAAwB,yBAAyB,wBAAwB,UAAU,wBAAwB,gCAAgC,oBAAoB;AACtf,uBAAuB;AACvB,oBAAoB;;;;;;;;;;;;;ACfjB;AACD;AACC;AACA;AACA;AACE;AACC;AACA;AACJ;AACD;AACC;AACC;AACA;AACC;AACH;AACM;AACE;AACP;AACG;AACC;AACF;AACD;AACU;AACN;AACJ;AACD;AACO;AACN;AACK;AACN;;;;;;;;;;;;;;;;AC7BxB;AACA;;AAEe;;AAEf;AACA;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C,4CAA4C;AAC5C,2CAA2C;AAC3C,iEAAiE;;AAEjE;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,yFAAyF;AACxG;;AAEA,8CAA8C;AAC9C;AACA;AACA;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,+BAA+B,sBAAsB;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sDAAsD,oBAAoB;AAC1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kCAAkC;;AAErE;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4CAA4C,cAAc;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,eAAe,qDAAqD;;AAEpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9eA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmC;AACiD;AAClD;;AAEM;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,yCAAyC,+CAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,+CAA+C,UAAU,yDAAyD,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4BAA4B;AACxE;AACA;AACA;AACA,+BAA+B,iBAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kCAAkC;AACxF,qBAAqB,wEAAkB,EAAE,2CAA2C,2BAA2B,EAAE,2CAA2C;AAC5J;AACA,mBAAmB;AACnB;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA;AACA,wEAAwE,2CAA2C;AACnH,6BAA6B,+DAAwB,EAAE,kJAAkJ;AACzM,QAAQ,4DAAqB;AAC7B,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,oBAAoB;;AAE3B;AACA;AACA,0BAA0B,8DAAuB,EAAE,2BAA2B;AAC9E,0BAA0B,8DAAuB,EAAE,kDAAkD,wCAAwC,EAAE,4CAA4C;AAC3L,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,WAAW,EAAE,QAAQ,EAAE;AAC5C,cAAc,oDAAoD,gEAAyB,sBAAsB,0EAA0E,EAAE,EAAE;AAC/L,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;;AAEA;AACA;AACA;;AAEsF;;AAEtF,0C;;;;;;;;;;;;ACvLA,gEAAa;;AAEb;AACA,aAAa,KAA6B,eAAe,KAA4B,MAAM;AAC3F,MAAM,IAA6B,EAAE,iCAA0B,EAAE,mCAAE;AACnE;AACA,GAAG;AAAA,oGAAC;AACJ;;AAEA;AACA;AACA;AACA,8KAA8K;AAC9K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA,qCAAqC,gEAAgE;AACrG,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,2EAA2E,EAAE;AAC7E;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA,+BAA+B,mBAAmB;AAClD;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mFAAmF;AACnF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yGAAyG;AACzG;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,iEAAiE,aAAa;AAC9E,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mEAAmE,aAAa;AAChF,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,uCAAuC;AACvC;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC;;AAEpC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA,sEAAsE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA,yCAAyC;AACzC;AACA,gDAAgD;AAChD,KAAK;AACL;AACA,KAAK;AACL;;AAEA;AACA,yCAAyC;AACzC;AACA,+CAA+C;AAC/C,KAAK;AACL;AACA,KAAK;AACL;AACA,CAAC,I;;;;;;;;;;;;AC5bD;AAAA;AAAA;;;GAGG;AAEH,IAAY,aAGX;AAHD,WAAY,aAAa;IACvB,mDAAkC;IAClC,2CAA0B;AAC5B,CAAC,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","file":"default~features-analysis-analysis-module~features-workspace-detail-workspace-detail-module-es2015.js","sourcesContent":["var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import {slice} from \"./array.js\";\nimport bisect from \"./bisect.js\";\nimport constant from \"./constant.js\";\nimport extent from \"./extent.js\";\nimport identity from \"./identity.js\";\nimport ticks from \"./ticks.js\";\nimport sturges from \"./threshold/sturges.js\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    if (!Array.isArray(data)) data = Array.from(data);\n\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = ticks(x0, x1, tz);\n      if (tz[tz.length - 1] === x1) tz.pop(); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","import ascending from \"./ascending.js\";\n\nexport default function(f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function count(values, valueof) {\n  let count = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count;\n      }\n    }\n  }\n  return count;\n}\n","function length(array) {\n  return array.length | 0;\n}\n\nfunction empty(length) {\n  return !(length > 0);\n}\n\nfunction arrayify(values) {\n  return typeof values !== \"object\" || \"length\" in values ? values : Array.from(values);\n}\n\nfunction reducer(reduce) {\n  return values => reduce(...values);\n}\n\nexport default function cross(...values) {\n  const reduce = typeof values[values.length - 1] === \"function\" && reducer(values.pop());\n  values = values.map(arrayify);\n  const lengths = values.map(length);\n  const j = values.length - 1;\n  const index = new Array(j + 1).fill(0);\n  const product = [];\n  if (j < 0 || lengths.some(empty)) return product;\n  while (true) {\n    product.push(index.map((j, i) => values[i][j]));\n    let i = j;\n    while (++index[i] === lengths[i]) {\n      if (i === 0) return reduce ? product.map(reduce) : product;\n      index[i--] = 0;\n    }\n  }\n}\n","export default function cumsum(values, valueof) {\n  var sum = 0, index = 0;\n  return Float64Array.from(values, valueof === undefined\n    ? v => (sum += +v || 0)\n    : v => (sum += +valueof(v, index++, values) || 0));\n}","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","import variance from \"./variance.js\";\n\nexport default function deviation(values, valueof) {\n  const v = variance(values, valueof);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  let min;\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null) {\n        if (min === undefined) {\n          if (value >= value) min = max = value;\n        } else {\n          if (min > value) min = value;\n          if (max < value) max = value;\n        }\n      }\n    }\n  }\n  return [min, max];\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport default function(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function greatest(values, compare = ascending) {\n  let max;\n  let defined = false;\n  if (compare.length === 1) {\n    let maxValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, maxValue) > 0\n          : ascending(value, value) === 0) {\n        max = element;\n        maxValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, max) > 0\n          : compare(value, value) === 0) {\n        max = value;\n        defined = true;\n      }\n    }\n  }\n  return max;\n}\n","import ascending from \"./ascending.js\";\nimport maxIndex from \"./maxIndex.js\";\n\nexport default function greatestIndex(values, compare = ascending) {\n  if (compare.length === 1) return maxIndex(values, compare);\n  let maxValue;\n  let max = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (max < 0\n        ? compare(value, value) === 0\n        : compare(value, maxValue) > 0) {\n      maxValue = value;\n      max = index;\n    }\n  }\n  return max;\n}\n","import identity from \"./identity.js\";\n\nexport default function group(values, ...keys) {\n  return nest(values, identity, identity, keys);\n}\n\nexport function groups(values, ...keys) {\n  return nest(values, Array.from, identity, keys);\n}\n\nexport function rollup(values, reduce, ...keys) {\n  return nest(values, identity, reduce, keys);\n}\n\nexport function rollups(values, reduce, ...keys) {\n  return nest(values, Array.from, reduce, keys);\n}\n\nexport function index(values, ...keys) {\n  return nest(values, identity, unique, keys);\n}\n\nexport function indexes(values, ...keys) {\n  return nest(values, Array.from, unique, keys);\n}\n\nfunction unique(values) {\n  if (values.length !== 1) throw new Error(\"duplicate key\");\n  return values[0];\n}\n\nfunction nest(values, map, reduce, keys) {\n  return (function regroup(values, i) {\n    if (i >= keys.length) return reduce(values);\n    const groups = new Map();\n    const keyof = keys[i++];\n    let index = -1;\n    for (const value of values) {\n      const key = keyof(value, ++index, values);\n      const group = groups.get(key);\n      if (group) group.push(value);\n      else groups.set(key, [value]);\n    }\n    for (const [key, values] of groups) {\n      groups.set(key, regroup(values, i));\n    }\n    return map(groups);\n  })(values, 0);\n}\n","export default function(x) {\n  return x;\n}\n","export {default as bisect, bisectRight, bisectLeft, bisectCenter} from \"./bisect.js\";\nexport {default as ascending} from \"./ascending.js\";\nexport {default as bisector} from \"./bisector.js\";\nexport {default as count} from \"./count.js\";\nexport {default as cross} from \"./cross.js\";\nexport {default as cumsum} from \"./cumsum.js\";\nexport {default as descending} from \"./descending.js\";\nexport {default as deviation} from \"./deviation.js\";\nexport {default as extent} from \"./extent.js\";\nexport {default as fsum, Adder} from \"./fsum.js\";\nexport {default as group, groups, index, indexes, rollup, rollups} from \"./group.js\";\nexport {default as bin, default as histogram} from \"./bin.js\"; // Deprecated; use bin.\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis.js\";\nexport {default as thresholdScott} from \"./threshold/scott.js\";\nexport {default as thresholdSturges} from \"./threshold/sturges.js\";\nexport {default as max} from \"./max.js\";\nexport {default as maxIndex} from \"./maxIndex.js\";\nexport {default as mean} from \"./mean.js\";\nexport {default as median} from \"./median.js\";\nexport {default as merge} from \"./merge.js\";\nexport {default as min} from \"./min.js\";\nexport {default as minIndex} from \"./minIndex.js\";\nexport {default as pairs} from \"./pairs.js\";\nexport {default as permute} from \"./permute.js\";\nexport {default as quantile, quantileSorted} from \"./quantile.js\";\nexport {default as quickselect} from \"./quickselect.js\";\nexport {default as range} from \"./range.js\";\nexport {default as least} from \"./least.js\";\nexport {default as leastIndex} from \"./leastIndex.js\";\nexport {default as greatest} from \"./greatest.js\";\nexport {default as greatestIndex} from \"./greatestIndex.js\";\nexport {default as scan} from \"./scan.js\"; // Deprecated; use leastIndex.\nexport {default as shuffle, shuffler} from \"./shuffle.js\";\nexport {default as sum} from \"./sum.js\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks.js\";\nexport {default as transpose} from \"./transpose.js\";\nexport {default as variance} from \"./variance.js\";\nexport {default as zip} from \"./zip.js\";\n","import ascending from \"./ascending.js\";\n\nexport default function least(values, compare = ascending) {\n  let min;\n  let defined = false;\n  if (compare.length === 1) {\n    let minValue;\n    for (const element of values) {\n      const value = compare(element);\n      if (defined\n          ? ascending(value, minValue) < 0\n          : ascending(value, value) === 0) {\n        min = element;\n        minValue = value;\n        defined = true;\n      }\n    }\n  } else {\n    for (const value of values) {\n      if (defined\n          ? compare(value, min) < 0\n          : compare(value, value) === 0) {\n        min = value;\n        defined = true;\n      }\n    }\n  }\n  return min;\n}\n","import ascending from \"./ascending.js\";\nimport minIndex from \"./minIndex.js\";\n\nexport default function leastIndex(values, compare = ascending) {\n  if (compare.length === 1) return minIndex(values, compare);\n  let minValue;\n  let min = -1;\n  let index = -1;\n  for (const value of values) {\n    ++index;\n    if (min < 0\n        ? compare(value, value) === 0\n        : compare(value, minValue) < 0) {\n      minValue = value;\n      min = index;\n    }\n  }\n  return min;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function maxIndex(values, valueof) {\n  let max;\n  let maxIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value, maxIndex = index;\n      }\n    }\n  }\n  return maxIndex;\n}\n","export default function mean(values, valueof) {\n  let count = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        ++count, sum += value;\n      }\n    }\n  }\n  if (count) return sum / count;\n}\n","import quantile from \"./quantile.js\";\n\nexport default function(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","export default function minIndex(values, valueof) {\n  let min;\n  let minIndex = -1;\n  let index = -1;\n  if (valueof === undefined) {\n    for (const value of values) {\n      ++index;\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  } else {\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value, minIndex = index;\n      }\n    }\n  }\n  return minIndex;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","export default function pairs(values, pairof = pair) {\n  const pairs = [];\n  let previous;\n  let first = false;\n  for (const value of values) {\n    if (first) pairs.push(pairof(previous, value));\n    previous = value;\n    first = true;\n  }\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","export default function(source, keys) {\n  return Array.from(keys, key => source[key]);\n}\n","import max from \"./max.js\";\nimport min from \"./min.js\";\nimport quickselect from \"./quickselect.js\";\nimport number, {numbers} from \"./number.js\";\n\nexport default function quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nexport function quantileSorted(values, p, valueof = number) {\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import ascending from \"./ascending.js\";\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nexport default function quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import leastIndex from \"./leastIndex.js\";\n\nexport default function scan(values, compare) {\n  const index = leastIndex(values, compare);\n  return index < 0 ? undefined : index;\n}\n","export default shuffler(Math.random);\n\nexport function shuffler(random) {\n  return function shuffle(array, i0 = 0, i1 = array.length) {\n    let m = i1 - (i0 = +i0);\n    while (m) {\n      const i = random() * m-- | 0, t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n    return array;\n  };\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import count from \"../count.js\";\nimport quantile from \"../quantile.js\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(count(values), -1 / 3)));\n}\n","import count from \"../count.js\";\nimport deviation from \"../deviation.js\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(count(values), -1 / 3)));\n}\n","import count from \"../count.js\";\n\nexport default function(values) {\n  return Math.ceil(Math.log(count(values)) / Math.LN2) + 1;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    step = -step;\n    start = Math.ceil(start * step);\n    stop = Math.floor(stop * step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import min from \"./min.js\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","export default function variance(values, valueof) {\n  let count = 0;\n  let delta;\n  let mean = 0;\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        delta = value - mean;\n        mean += delta / ++count;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n  if (count > 1) return sum / (count - 1);\n}\n","import transpose from \"./transpose.js\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","import {slice} from \"./array.js\";\nimport identity from \"./identity.js\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","export default function(x) {\n  return x;\n}\n","export {\n  axisTop,\n  axisRight,\n  axisBottom,\n  axisLeft\n} from \"./axis.js\";\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  brush.clear = function(group) {\n    brush.move(group, null);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move();\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export default x => () => x;\n","export default function BrushEvent(type, {\n  sourceEvent,\n  target,\n  selection,\n  mode,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    selection: {value: selection, enumerable: true, configurable: true},\n    mode: {value: mode, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n","export {\n  default as brush,\n  brushX,\n  brushY,\n  brushSelection\n} from \"./brush.js\";\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","export var slice = Array.prototype.slice;\n","import {max, tau} from \"./math.js\";\n\nfunction range(i, j) {\n  return Array.from({length: j - i}, (_, k) => i + k);\n}\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  return chord(false, false);\n}\n\nexport function chordTranspose() {\n  return chord(false, true);\n}\n\nexport function chordDirected() {\n  return chord(true, false);\n}\n\nfunction chord(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0, dx;\n\n    matrix = Float64Array.from({length: n * n}, transpose\n        ? (_, i) => matrix[i % n][i / n | 0]\n        : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        } else {\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export {default as chord, chordTranspose, chordDirected} from \"./chord.js\";\nexport {default as ribbon, ribbonArrow} from \"./ribbon.js\";\n","export var abs = Math.abs;\nexport var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\nexport var epsilon = 1e-12;\n","import {path} from \"d3-path\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {abs, cos, epsilon, halfPi, sin} from \"./math.js\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    if (ap > epsilon) {\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\n      else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\n      else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function(_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function(_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function(_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexport default function() {\n  return ribbon();\n}\n\nexport function ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","export {default as color, rgb, hsl} from \"./color.js\";\nexport {default as lab, hcl, lch, gray} from \"./lab.js\";\nexport {default as cubehelix} from \"./cubehelix.js\";\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","export default x => () => x;\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array.js\";\nimport ascending from \"./ascending.js\";\nimport area from \"./area.js\";\nimport constant from \"./constant.js\";\nimport contains from \"./contains.js\";\nimport noop from \"./noop.js\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array.js\";\nimport {blurX, blurY} from \"./blur.js\";\nimport constant from \"./constant.js\";\nimport contours from \"./contours.js\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = +_[0], _1 = +_[1];\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","export {default as contours} from \"./contours.js\";\nexport {default as contourDensity} from \"./density.js\";\n","export default function() {}\n","// d3-dag Version 0.5.0. Copyright 2020 Erik Brinkman.\nclass LazyFluentIterable {\r\n    constructor(base) {\r\n        this.base = base;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this.base[Symbol.iterator]();\r\n    }\r\n    concat(...others) {\r\n        return fluent((function* (iters) {\r\n            for (const iter of iters) {\r\n                yield* iter;\r\n            }\r\n        })([this, ...others.map(fluent)]));\r\n    }\r\n    entries() {\r\n        return fluent((function* (iter) {\r\n            let index = 0;\r\n            for (const element of iter) {\r\n                yield [index++, element];\r\n            }\r\n        })(this));\r\n    }\r\n    every(callback) {\r\n        return !this.some((elem, ind) => !callback(elem, ind));\r\n    }\r\n    fill(val) {\r\n        return this.map(() => val);\r\n    }\r\n    filter(callback) {\r\n        return fluent((function* (iter) {\r\n            for (const [index, element] of iter) {\r\n                if (callback(element, index)) {\r\n                    yield element;\r\n                }\r\n            }\r\n        })(this.entries()));\r\n    }\r\n    find(callback) {\r\n        for (const [index, element] of this.entries()) {\r\n            if (callback(element, index)) {\r\n                return element;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    findIndex(callback) {\r\n        for (const [index, element] of this.entries()) {\r\n            if (callback(element, index)) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    flatMap(callback) {\r\n        return fluent((function* (iter) {\r\n            for (const [index, element] of iter) {\r\n                yield* fluent(callback(element, index));\r\n            }\r\n        })(this.entries()));\r\n    }\r\n    forEach(callback) {\r\n        for (const [index, element] of this.entries()) {\r\n            callback(element, index);\r\n        }\r\n    }\r\n    includes(query, fromIndex = 0) {\r\n        return this.indexOf(query, fromIndex) >= 0;\r\n    }\r\n    indexOf(query, fromIndex = 0) {\r\n        if (fromIndex < 0) {\r\n            throw new Error(`fromIndex doesn't support negative numbers because generator length isn't known`);\r\n        }\r\n        for (const [index, element] of this.entries()) {\r\n            if (index >= fromIndex && element === query) {\r\n                return index;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n    join(separator = \",\") {\r\n        return [...this].join(separator);\r\n    }\r\n    keys() {\r\n        return fluent((function* (iter) {\r\n            let index = 0;\r\n            for (const _ of iter) {\r\n                yield index++;\r\n            }\r\n        })(this));\r\n    }\r\n    lastIndexOf(query, fromIndex = Infinity) {\r\n        if (fromIndex < 0) {\r\n            throw new Error(`fromIndex doesn't support negative numbers because generator length isn't known`);\r\n        }\r\n        let lastIndex = -1;\r\n        for (const [index, element] of this.entries()) {\r\n            if (index <= fromIndex && element === query) {\r\n                lastIndex = index;\r\n            }\r\n        }\r\n        return lastIndex;\r\n    }\r\n    get length() {\r\n        return this.reduce((a) => a + 1, 0);\r\n    }\r\n    map(callback) {\r\n        return fluent((function* (iter) {\r\n            for (const [index, element] of iter) {\r\n                yield callback(element, index);\r\n            }\r\n        })(this.entries()));\r\n    }\r\n    reduce(callback, initialValue) {\r\n        if (initialValue === undefined) {\r\n            const call = callback;\r\n            let first = true;\r\n            let accumulator = undefined;\r\n            for (const [index, element] of this.entries()) {\r\n                if (first) {\r\n                    accumulator = element;\r\n                    first = false;\r\n                }\r\n                else {\r\n                    accumulator = call(accumulator, element, index);\r\n                }\r\n            }\r\n            if (first) {\r\n                throw new TypeError(\"Reduce of empty iterable with no initial value\");\r\n            }\r\n            return accumulator;\r\n        }\r\n        else {\r\n            const call = callback;\r\n            let accumulator = initialValue;\r\n            for (const [index, element] of this.entries()) {\r\n                accumulator = call(accumulator, element, index);\r\n            }\r\n            return accumulator;\r\n        }\r\n    }\r\n    reverse() {\r\n        return fluent([...this].reverse());\r\n    }\r\n    slice(start = 0, end = Infinity) {\r\n        return fluent((function* (iter) {\r\n            for (const [index, element] of iter) {\r\n                if (index < start) ;\r\n                else if (index < end) {\r\n                    yield element;\r\n                }\r\n                else {\r\n                    break; // no more elements\r\n                }\r\n            }\r\n        })(this.entries()));\r\n    }\r\n    some(callback) {\r\n        for (const [index, element] of this.entries()) {\r\n            if (callback(element, index)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    sort(compare) {\r\n        return fluent([...this].sort(compare));\r\n    }\r\n    splice(start, deleteCount = 0, ...items) {\r\n        return fluent((function* (iter) {\r\n            for (const [index, element] of iter) {\r\n                if (index === start) {\r\n                    yield* items;\r\n                }\r\n                if (index < start || index >= start + deleteCount) {\r\n                    yield element;\r\n                }\r\n            }\r\n        })(this.entries()));\r\n    }\r\n    values() {\r\n        return this;\r\n    }\r\n}\r\nfunction isIterable(seq) {\r\n    return typeof seq[Symbol.iterator] === \"function\";\r\n}\r\nfunction fluent(seq) {\r\n    if (isIterable(seq)) {\r\n        return new LazyFluentIterable(seq);\r\n    }\r\n    else {\r\n        return new LazyFluentIterable({\r\n            [Symbol.iterator]: () => seq\r\n        });\r\n    }\r\n}\n\n/** helper for verifying things aren't undefined */\r\nfunction def(val) {\r\n    /* istanbul ignore else: only for unaccounted for errors */\r\n    if (val !== undefined) {\r\n        return val;\r\n    }\r\n    else {\r\n        throw new Error(\"got unexpected undefined value\");\r\n    }\r\n}\r\n/** determines if two sets intersect */\r\nfunction setIntersect(first, second) {\r\n    if (second.size < first.size) {\r\n        [second, first] = [first, second];\r\n    }\r\n    for (const element of first) {\r\n        if (second.has(element)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/** map with extra convenience functions */\r\nclass SafeMap extends Map {\r\n    /** throw an error if key not in map */\r\n    getThrow(key) {\r\n        const value = this.get(key);\r\n        if (value === undefined) {\r\n            throw new Error(`map doesn't contain key: ${key}`);\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    /** get with a default if key is not present */\r\n    getDefault(key, def) {\r\n        const value = this.get(key);\r\n        if (value === undefined) {\r\n            return def;\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n    /** get with a default, but also set default */\r\n    setIfAbsent(key, def) {\r\n        const value = this.get(key);\r\n        if (value === undefined) {\r\n            this.set(key, def);\r\n            return def;\r\n        }\r\n        else {\r\n            return value;\r\n        }\r\n    }\r\n}\n\n/**\r\n * A [[Dag]] is simply a collection of [[DagNode]]s, defined by every reachable\r\n * child node from the current returned node.  If a DAG contains multiple\r\n * roots, then the returned node will be a [[DagRoot]] that links to all nodes.\r\n * Each child node on its own will function as a valid DAG with a single root.\r\n * All DAGs are also iterators over all of their nodes.\r\n *\r\n * Three methods exist to turn existing data into [[Dag]]s:\r\n * 1. [[\"dag/hierarchy\" | dagHierarchy]] - when the data already has a dag structure.\r\n * 2. [[\"dag/stratify\" | dagStratify ]] - when the dag has a tabular structure, referencing parents by id.\r\n * 3. [[\"dag/connect\" | dagConnect ]] - when the dag has a link structure and is specified as pairs of nodes.\r\n *\r\n * Methods names preceeded by an `i` will return a [[FluentIterable]] which is\r\n * a wrapper around native EMCA iterators that also adds most methods found in\r\n * the `Array` prototype making them much more useful for fluent functional\r\n * programming.\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal */\r\nclass LayoutChildLink {\r\n    constructor(child, data, points = []) {\r\n        this.child = child;\r\n        this.data = data;\r\n        this.points = points;\r\n    }\r\n}\r\n/**\r\n * The concrete class backing the [[Link]] interface.\r\n */\r\nclass LayoutLink {\r\n    constructor(source, target, \r\n    // NOTE this is a trick to not have to parametrize Links, and therefore\r\n    // DagRoot, and therefore Dag by LinkDatum, when the NodeType implcitely\r\n    // defines it\r\n    data, points) {\r\n        this.source = source;\r\n        this.target = target;\r\n        this.data = data;\r\n        this.points = points;\r\n    }\r\n}\r\n/**\r\n * The concreate implementation of [[DagNode]], this forwards most calls to a\r\n * singleton [[LayoutDagRoot]] with the exception of children methods, as\r\n * [[DagRoot]]s don't have children.\r\n */\r\nclass LayoutDagNode {\r\n    constructor(id, data) {\r\n        this.id = id;\r\n        this.data = data;\r\n        this.dataChildren = [];\r\n    }\r\n    /** An iterator of this node. */\r\n    iroots() {\r\n        return fluent([this]);\r\n    }\r\n    /** An array of this node. */\r\n    roots() {\r\n        return [this];\r\n    }\r\n    *iterChildren() {\r\n        for (const { child } of this.dataChildren) {\r\n            yield child;\r\n        }\r\n    }\r\n    /** An iterator of this node's children. */\r\n    ichildren() {\r\n        return fluent(this.iterChildren());\r\n    }\r\n    /** An array of this node's children. */\r\n    children() {\r\n        return [...this.ichildren()];\r\n    }\r\n    *iterChildLinks() {\r\n        for (const { child, data, points } of this.dataChildren) {\r\n            yield new LayoutLink(this, child, data, points);\r\n        }\r\n    }\r\n    /** An iterator of links between this node and its children. */\r\n    ichildLinks() {\r\n        return fluent(this.iterChildLinks());\r\n    }\r\n    /** An array of links between this node and its children. */\r\n    childLinks() {\r\n        return [...this.ichildLinks()];\r\n    }\r\n    [Symbol.iterator]() {\r\n        return new LayoutDagRoot([this])[Symbol.iterator]();\r\n    }\r\n    idescendants(style = \"depth\") {\r\n        return new LayoutDagRoot([this]).idescendants(style);\r\n    }\r\n    descendants(style = \"depth\") {\r\n        return [...this.idescendants(style)];\r\n    }\r\n    ilinks() {\r\n        return new LayoutDagRoot([this]).ilinks();\r\n    }\r\n    links() {\r\n        return [...this.ilinks()];\r\n    }\r\n    size() {\r\n        return new LayoutDagRoot([this]).size();\r\n    }\r\n    sum(callback) {\r\n        new LayoutDagRoot([this]).sum(callback);\r\n        return this;\r\n    }\r\n    count() {\r\n        new LayoutDagRoot([this]).count();\r\n        return this;\r\n    }\r\n    height() {\r\n        new LayoutDagRoot([this]).height();\r\n        return this;\r\n    }\r\n    depth() {\r\n        new LayoutDagRoot([this]).depth();\r\n        return this;\r\n    }\r\n    split() {\r\n        return [this];\r\n    }\r\n    connected() {\r\n        return true;\r\n    }\r\n}\r\n/**\r\n * The concrete implementation backing [[DagRoot]] which also contains the\r\n * implementation of most methods in [[DagNode]].\r\n */\r\nclass LayoutDagRoot {\r\n    constructor(dagRoots) {\r\n        this.dagRoots = dagRoots;\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this.idepth();\r\n    }\r\n    /**\r\n     * This returns an iterator over every root in the [[Dag]]. Since\r\n     * [[DagNode]]s return themselves for this call, this can be an easy way to\r\n     * turn a [[Dag]] into an array of [[DagNode]]s.\r\n     */\r\n    iroots() {\r\n        return fluent(this.dagRoots);\r\n    }\r\n    /** Returns an array of roots. */\r\n    roots() {\r\n        return this.dagRoots.slice();\r\n    }\r\n    *idepth() {\r\n        const queue = this.roots();\r\n        const seen = new Set();\r\n        let node;\r\n        while ((node = queue.pop())) {\r\n            if (!seen.has(node.id)) {\r\n                seen.add(node.id);\r\n                yield node;\r\n                queue.push(...node.ichildren());\r\n            }\r\n        }\r\n    }\r\n    *ibreadth() {\r\n        const seen = new Set();\r\n        let next = this.roots();\r\n        let current = [];\r\n        do {\r\n            current = next.reverse();\r\n            next = [];\r\n            let node;\r\n            while ((node = current.pop())) {\r\n                if (!seen.has(node.id)) {\r\n                    seen.add(node.id);\r\n                    yield node;\r\n                    next.push(...node.ichildren());\r\n                }\r\n            }\r\n        } while (next.length);\r\n    }\r\n    *ibefore() {\r\n        const numBefore = new SafeMap();\r\n        for (const node of this) {\r\n            for (const child of node.ichildren()) {\r\n                numBefore.set(child.id, numBefore.getDefault(child.id, 0) + 1);\r\n            }\r\n        }\r\n        const queue = this.roots();\r\n        let node;\r\n        while ((node = queue.pop())) {\r\n            yield node;\r\n            for (const child of node.ichildren()) {\r\n                const before = numBefore.getThrow(child.id);\r\n                if (before > 1) {\r\n                    numBefore.set(child.id, before - 1);\r\n                }\r\n                else {\r\n                    queue.push(child);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    *iafter() {\r\n        const queue = this.roots();\r\n        const seen = new Set();\r\n        let node;\r\n        while ((node = queue.pop())) {\r\n            if (seen.has(node.id)) ;\r\n            else if (node.ichildren().every((c) => seen.has(c.id))) {\r\n                seen.add(node.id);\r\n                yield node;\r\n            }\r\n            else {\r\n                queue.push(node); // need to revisit after children\r\n                queue.push(...node.ichildren());\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns an iterator over all descendants of this node, e.g. every node in\r\n     * the [[Dag]]. An [[IterStyle]] can be passed in to influence the iteration\r\n     * order, the default (`'depth'`) should generally be the fastest, but note\r\n     * that in general, traversal in a DAG takes linear space as we need to track\r\n     * what nodes we've already visited.\r\n     *\r\n     * - 'depth' - starting from the left most root, visit a nodes left most\r\n     *   child, progressing down to children before yielding any other node.\r\n     * - 'breadth' - starting from the left most root, yield each of it's\r\n     *   children, before yielding the children of its left most child.\r\n     * - 'before' - yield all of the roots, progressing downward, never yielding\r\n     *   a node before all of its parents have been yielded.\r\n     * - 'after' - yield all leaf nodes, progressing upward, never yielding a\r\n     *   node before all of its parents have been yielded.\r\n     */\r\n    idescendants(style = \"depth\") {\r\n        if (style === \"depth\") {\r\n            return fluent(this.idepth());\r\n        }\r\n        else if (style === \"breadth\") {\r\n            return fluent(this.ibreadth());\r\n        }\r\n        else if (style === \"before\") {\r\n            return fluent(this.ibefore());\r\n        }\r\n        else if (style === \"after\") {\r\n            return fluent(this.iafter());\r\n        }\r\n        else {\r\n            throw new Error(`unknown iteration style: ${style}`);\r\n        }\r\n    }\r\n    /** Returns an array of [[idescendants]]. */\r\n    descendants(style = \"depth\") {\r\n        return [...this.idescendants(style)];\r\n    }\r\n    /** Returns an iterator over every [[Link]] in the DAG. */\r\n    ilinks() {\r\n        return this.idescendants().flatMap((node) => node.ichildLinks());\r\n    }\r\n    /** Returns an array of [[ilinks]]. */\r\n    links() {\r\n        return [...this.ilinks()];\r\n    }\r\n    /** Counts the number of nodes in the DAG. */\r\n    size() {\r\n        return this.idescendants().reduce((s) => s + 1, 0);\r\n    }\r\n    /**\r\n     * Provide a callback that computes a number for each node, then set a node's\r\n     * value to the sum of this number for this node and all of its descendants.\r\n     *\r\n     * This method returns [[ValuedNode]]s that also have a value property.\r\n     */\r\n    sum(callback) {\r\n        const descendantVals = new SafeMap();\r\n        for (const [index, node] of this.idescendants(\"after\").entries()) {\r\n            const val = callback(node, index);\r\n            const nodeVals = new SafeMap();\r\n            nodeVals.set(node.id, val);\r\n            for (const child of node.ichildren()) {\r\n                const childMap = descendantVals.getThrow(child.id);\r\n                for (const [nid, v] of childMap.entries()) {\r\n                    nodeVals.set(nid, v);\r\n                }\r\n            }\r\n            node.value = fluent(nodeVals.entries())\r\n                .map(([, v]) => v)\r\n                .reduce((a, b) => a + b);\r\n            descendantVals.set(node.id, nodeVals);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Set the value of each node to be the number of leaves beneath the node.\r\n     * If this node is a leaf, its value is one.\r\n     *\r\n     * This method returns [[ValuedNode]]s that also have a value property.\r\n     */\r\n    count() {\r\n        const leaves = new SafeMap();\r\n        for (const node of this.idescendants(\"after\")) {\r\n            if (node.ichildren()[Symbol.iterator]().next().done) {\r\n                leaves.set(node.id, new Set([node.id]));\r\n                node.value = 1;\r\n            }\r\n            else {\r\n                const nodeLeaves = new Set();\r\n                for (const child of node.ichildren()) {\r\n                    const childLeaves = leaves.getThrow(child.id);\r\n                    for (const leaf of childLeaves) {\r\n                        nodeLeaves.add(leaf);\r\n                    }\r\n                }\r\n                leaves.set(node.id, nodeLeaves);\r\n                node.value = nodeLeaves.size;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Assign each node a value equal to its longest distance from a root.\r\n     *\r\n     * This method returns [[ValuedNode]]s that also have a value property.\r\n     */\r\n    height() {\r\n        for (const node of this.idescendants(\"after\")) {\r\n            node.value = Math.max(0, ...node.ichildren().map((child) => {\r\n                /* istanbul ignore next */\r\n                if (child.value === undefined) {\r\n                    throw new Error(\"`after` iteration didn't iterate in after order\");\r\n                }\r\n                else {\r\n                    return child.value + 1;\r\n                }\r\n            }));\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Assign each node a value equal to its longest distance to a leaf.\r\n     *\r\n     * This method returns [[ValuedNode]]s that also have a value property.\r\n     */\r\n    depth() {\r\n        const parents = new SafeMap();\r\n        for (const node of this) {\r\n            for (const child of node.ichildren()) {\r\n                parents.setIfAbsent(child.id, []).push(node);\r\n            }\r\n        }\r\n        for (const node of this.idescendants(\"before\")) {\r\n            node.value = Math.max(0, ...parents.getDefault(node.id, []).map((par) => {\r\n                /* istanbul ignore next */\r\n                if (par.value === undefined) {\r\n                    throw new Error(\"`before` iteration didn't iterate in before order\");\r\n                }\r\n                else {\r\n                    return par.value + 1;\r\n                }\r\n            }));\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns an array of connected DAGs, splitting the DAG into several\r\n     * components if its dosconnected.\r\n     */\r\n    split() {\r\n        // construct a graph between root nodes with edges if they share\r\n        // descendants\r\n        const children = new SafeMap();\r\n        const descendants = new SafeMap();\r\n        for (const root of this.iroots()) {\r\n            children.set(root.id, []);\r\n            descendants.set(root.id, new Set(root.idescendants().map((n) => n.id)));\r\n        }\r\n        for (const [i, source] of this.iroots().entries()) {\r\n            const sourceCov = descendants.getThrow(source.id);\r\n            for (const target of this.iroots().slice(i + 1)) {\r\n                const targetCov = descendants.getThrow(target.id);\r\n                if (setIntersect(sourceCov, targetCov)) {\r\n                    children.getThrow(source.id).push(target);\r\n                    children.getThrow(target.id).push(source);\r\n                }\r\n            }\r\n        }\r\n        // now run dfs to collect connected components\r\n        const splitRoots = [];\r\n        const seen = new Set();\r\n        for (const root of this.iroots()) {\r\n            if (!seen.has(root.id)) {\r\n                seen.add(root.id);\r\n                const connected = [root];\r\n                splitRoots.push(connected);\r\n                const queue = children.getThrow(root.id).slice();\r\n                let node;\r\n                while ((node = queue.pop())) {\r\n                    if (!seen.has(node.id)) {\r\n                        seen.add(node.id);\r\n                        connected.push(node);\r\n                        queue.push(...children.getThrow(node.id));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return splitRoots.map((sroots) => sroots.length > 1 ? new LayoutDagRoot(sroots) : sroots[0]);\r\n    }\r\n    /**\r\n     * Return true if every node in the dag is reachable from every other.\r\n     */\r\n    connected() {\r\n        return this.split().length === 1;\r\n    }\r\n}\n\n/**\r\n * This wraps the logic to verify DAGs are valid, and is shared by the three\r\n * construction methods.\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal Verify an ID is a valid ID. */\r\nfunction verifyId(id) {\r\n    if (typeof id !== \"string\") {\r\n        throw new Error(`id is supposed to be string but got type ${typeof id}`);\r\n    }\r\n    else if (id.indexOf(\"\\0\") >= 0) {\r\n        throw new Error(`node id ${id} contained null character`);\r\n    }\r\n    return id;\r\n}\r\n/** @internal Verify a DAG is valid. */\r\nfunction verifyDag(roots) {\r\n    // test that there are roots\r\n    if (!roots.length)\r\n        throw new Error(\"dag contained no roots\");\r\n    // test that dag is free of cycles\r\n    // we attempt to take every unique path from each root and see if we ever see\r\n    // a node again\r\n    const seen = new Set(); // already processed\r\n    const past = new Set(); // seen down this path\r\n    let rec = null;\r\n    function visit(node) {\r\n        if (seen.has(node.id)) {\r\n            return [];\r\n        }\r\n        else if (past.has(node.id)) {\r\n            rec = node.id;\r\n            return [node.id];\r\n        }\r\n        else {\r\n            past.add(node.id);\r\n            let result = [];\r\n            for (const child of node.ichildren()) {\r\n                result = visit(child);\r\n                if (result.length)\r\n                    break;\r\n            }\r\n            past.delete(node.id);\r\n            seen.add(node.id);\r\n            if (result.length && rec !== null)\r\n                result.push(node.id);\r\n            if (rec === node.id)\r\n                rec = null;\r\n            return result;\r\n        }\r\n    }\r\n    for (const root of roots) {\r\n        const msg = visit(root);\r\n        if (msg.length) {\r\n            throw new Error(\"dag contained a cycle: \" + msg.reverse().join(\" -> \"));\r\n        }\r\n    }\r\n    // make sure there's no duplicate edges\r\n    for (const node of new LayoutDagRoot(roots)) {\r\n        const childIdSet = new Set(node.ichildren().map((n) => n.id));\r\n        if (childIdSet.size !== node.dataChildren.length) {\r\n            throw new Error(`node '${node.id}' contained duplicate children`);\r\n        }\r\n    }\r\n}\n\n/**\r\n * You can rearrange tabularesque data into a [[Dag]] using [[stratify]], which\r\n * will create a default [[StratifyOperator]].\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal */\r\nfunction buildOperator(idOp, parentIdsOp, parentDataOp) {\r\n    function stratify(data) {\r\n        if (!data.length)\r\n            throw new Error(\"can't stratify empty data\");\r\n        const nodes = data.map((datum, i) => new LayoutDagNode(verifyId(idOp(datum, i)), datum));\r\n        const mapping = new Map();\r\n        nodes.forEach((node) => {\r\n            if (mapping.has(node.id)) {\r\n                throw new Error(`found a duplicate id: ${node.id}`);\r\n            }\r\n            else {\r\n                mapping.set(node.id, node);\r\n            }\r\n        });\r\n        const roots = [];\r\n        nodes.forEach((node, i) => {\r\n            const pData = parentDataOp(node.data, i) || [];\r\n            pData.forEach(([pid, linkData]) => {\r\n                const par = mapping.get(pid);\r\n                if (!par)\r\n                    throw new Error(`missing id: ${pid}`);\r\n                par.dataChildren.push(new LayoutChildLink(node, linkData));\r\n                return par;\r\n            });\r\n            if (!pData.length) {\r\n                roots.push(node);\r\n            }\r\n        });\r\n        verifyDag(roots);\r\n        return roots.length > 1 ? new LayoutDagRoot(roots) : roots[0];\r\n    }\r\n    function id(idGet) {\r\n        if (idGet === undefined) {\r\n            return idOp;\r\n        }\r\n        else {\r\n            return buildOperator(idGet, parentIdsOp, parentDataOp);\r\n        }\r\n    }\r\n    stratify.id = id;\r\n    function parentData(data) {\r\n        if (data === undefined) {\r\n            return parentDataOp;\r\n        }\r\n        else {\r\n            return buildOperator(idOp, wrapParentData(data), data);\r\n        }\r\n    }\r\n    stratify.parentData = parentData;\r\n    function parentIds(ids) {\r\n        if (ids === undefined) {\r\n            return parentIdsOp;\r\n        }\r\n        else {\r\n            return buildOperator(idOp, ids, wrapParentIds(ids));\r\n        }\r\n    }\r\n    stratify.parentIds = parentIds;\r\n    return stratify;\r\n}\r\n/** @internal */\r\nfunction wrapParentIds(parentIds) {\r\n    function wrapped(d, i) {\r\n        return (parentIds(d, i) || []).map((id) => [id, undefined]);\r\n    }\r\n    wrapped.wrapped = parentIds;\r\n    return wrapped;\r\n}\r\n/** @internal */\r\nfunction wrapParentData(parentData) {\r\n    function wrapped(d, i) {\r\n        return (parentData(d, i) || []).map(([id]) => id);\r\n    }\r\n    wrapped.wrapped = parentData;\r\n    return wrapped;\r\n}\r\n/** @internal */\r\nfunction hasId(d) {\r\n    try {\r\n        return typeof d.id === \"string\";\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n}\r\n/** @internal */\r\nfunction defaultId(d) {\r\n    if (hasId(d)) {\r\n        return d.id;\r\n    }\r\n    else {\r\n        throw new Error(`default id function expected datum to have an id field but got: ${d}`);\r\n    }\r\n}\r\n/** @internal */\r\nfunction hasParentIds(d) {\r\n    try {\r\n        const parentIds = d.parentIds;\r\n        return (parentIds === undefined ||\r\n            (parentIds instanceof Array &&\r\n                parentIds.every((id) => typeof id === \"string\")));\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n}\r\n/** @internal */\r\nfunction defaultParentIds(d) {\r\n    if (hasParentIds(d)) {\r\n        return d.parentIds;\r\n    }\r\n    else {\r\n        throw new Error(`default parentIds function expected datum to have a parentIds field but got: ${d}`);\r\n    }\r\n}\r\n/**\r\n * Constructs a new [[StratifyOperator]] with the default settings.\r\n */\r\nfunction stratify(...args) {\r\n    if (args.length) {\r\n        throw Error(`got arguments to dagStratify(${args}), but constructor takes no aruguments. ` +\r\n            \"These were probably meant as data which should be called as dagStratify()(...)\");\r\n    }\r\n    return buildOperator(defaultId, defaultParentIds, wrapParentIds(defaultParentIds));\r\n}\n\n/**\r\n * You can rearrange raw edge data into a [[Dag]] using [[connect]] to create a\r\n * default [[ConnectOperator]].\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal */\r\nfunction buildOperator$1(sourceIdOp, targetIdOp) {\r\n    function connect(data) {\r\n        if (!data.length) {\r\n            throw new Error(\"can't connect empty data\");\r\n        }\r\n        const nodes = new Map();\r\n        const hasParents = new Map();\r\n        for (const [i, datum] of data.entries()) {\r\n            // create dag\r\n            const source = verifyId(sourceIdOp(datum, i));\r\n            let sourceNode = nodes.get(source);\r\n            if (sourceNode === undefined) {\r\n                sourceNode = new LayoutDagNode(source, undefined);\r\n                nodes.set(source, sourceNode);\r\n            }\r\n            const target = verifyId(targetIdOp(datum, i));\r\n            let targetNode = nodes.get(target);\r\n            if (targetNode === undefined) {\r\n                targetNode = new LayoutDagNode(target, undefined);\r\n                nodes.set(target, targetNode);\r\n            }\r\n            sourceNode.dataChildren.push(new LayoutChildLink(targetNode, datum));\r\n            // update roots\r\n            hasParents.set(source, hasParents.get(source) || false);\r\n            hasParents.set(target, true);\r\n        }\r\n        const roots = [];\r\n        for (const [id, parents] of hasParents) {\r\n            if (!parents) {\r\n                roots.push(def(nodes.get(id)));\r\n            }\r\n        }\r\n        verifyDag(roots);\r\n        return roots.length > 1 ? new LayoutDagRoot(roots) : roots[0];\r\n    }\r\n    function sourceId(id) {\r\n        if (id === undefined) {\r\n            return sourceIdOp;\r\n        }\r\n        else {\r\n            return buildOperator$1(id, targetIdOp);\r\n        }\r\n    }\r\n    connect.sourceId = sourceId;\r\n    function targetId(id) {\r\n        if (id === undefined) {\r\n            return targetIdOp;\r\n        }\r\n        else {\r\n            return buildOperator$1(sourceIdOp, id);\r\n        }\r\n    }\r\n    connect.targetId = targetId;\r\n    return connect;\r\n}\r\n/** @internal */\r\nfunction isZeroString(d) {\r\n    try {\r\n        return typeof d[0] === \"string\";\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n}\r\n/** @internal */\r\nfunction defaultSourceId(d) {\r\n    if (isZeroString(d)) {\r\n        return d[0];\r\n    }\r\n    else {\r\n        throw new Error(`default source id expected datum[0] to be a string but got datum: ${d}`);\r\n    }\r\n}\r\n/** @internal */\r\nfunction isOneString(d) {\r\n    try {\r\n        return typeof d[1] === \"string\";\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n}\r\n/** @internal */\r\nfunction defaultTargetId(d) {\r\n    if (isOneString(d)) {\r\n        return d[1];\r\n    }\r\n    else {\r\n        throw new Error(`default target id expected datum[1] to be a string but got datum: ${d}`);\r\n    }\r\n}\r\n/**\r\n * Constructs a new [[ConnectOperator]] with the default settings.\r\n */\r\nfunction connect(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to dagConnect(${args}), but constructor takes no aruguments. ` +\r\n            \"These were probably meant as data which should be called as dagConnect()(...)\");\r\n    }\r\n    return buildOperator$1(defaultSourceId, defaultTargetId);\r\n}\n\n/**\r\n * Before you can compute a DAG layout, you need a DAG structure.  If your data\r\n * is already in a DAG structure, you can use the [[hierarchy]] method to\r\n * generate a default [[HierarchyOperator]] which can then be used to transform\r\n * your data into a [[Dag]].\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal */\r\nfunction buildOperator$2(idOp, childrenOp, childrenDataOp) {\r\n    function hierarchy(...data) {\r\n        if (!data.length) {\r\n            throw new Error(\"must pass in at least one node\");\r\n        }\r\n        const mapping = new Map();\r\n        const queue = [];\r\n        function nodify(datum) {\r\n            const idVal = verifyId(idOp(datum));\r\n            let node = mapping.get(idVal);\r\n            if (node === undefined) {\r\n                node = new LayoutDagNode(idVal, datum);\r\n                mapping.set(idVal, node);\r\n                queue.push(node);\r\n            }\r\n            else if (datum !== node.data) {\r\n                throw new Error(`found duplicate id with different data: ${idVal}`);\r\n            }\r\n            return node;\r\n        }\r\n        const roots = data.map(nodify);\r\n        let node;\r\n        let i = 0;\r\n        while ((node = queue.pop())) {\r\n            node.dataChildren = (childrenDataOp(node.data, i++) || []).map(([childDatum, linkDatum]) => new LayoutChildLink(nodify(childDatum), linkDatum));\r\n        }\r\n        // verifty roots are roots\r\n        const rootIds = new Set(roots.map((r) => r.id));\r\n        for (const node of mapping.values()) {\r\n            if (node.ichildren().some((child) => rootIds.has(child.id))) {\r\n                throw new Error(`node ${node.id} pointed to a root`);\r\n            }\r\n        }\r\n        // create dag\r\n        verifyDag(roots);\r\n        return roots.length > 1 ? new LayoutDagRoot(roots) : roots[0];\r\n    }\r\n    function id(idGet) {\r\n        if (idGet === undefined) {\r\n            return idOp;\r\n        }\r\n        else {\r\n            return buildOperator$2(idGet, childrenOp, childrenDataOp);\r\n        }\r\n    }\r\n    hierarchy.id = id;\r\n    function children(childs) {\r\n        if (childs === undefined) {\r\n            return childrenOp;\r\n        }\r\n        else {\r\n            return buildOperator$2(idOp, childs, wrapChildren(childs));\r\n        }\r\n    }\r\n    hierarchy.children = children;\r\n    function childrenData(data) {\r\n        if (data === undefined) {\r\n            return childrenDataOp;\r\n        }\r\n        else {\r\n            return buildOperator$2(idOp, wrapChildrenData(data), data);\r\n        }\r\n    }\r\n    hierarchy.childrenData = childrenData;\r\n    return hierarchy;\r\n}\r\n/** @internal */\r\nfunction wrapChildren(children) {\r\n    function wrapped(d, i) {\r\n        return (children(d, i) || []).map((d) => [d, undefined]);\r\n    }\r\n    wrapped.wrapped = children;\r\n    return wrapped;\r\n}\r\n/** @internal */\r\nfunction wrapChildrenData(childrenData) {\r\n    function wrapped(d, i) {\r\n        return (childrenData(d, i) || []).map(([d]) => d);\r\n    }\r\n    wrapped.wrapped = childrenData;\r\n    return wrapped;\r\n}\r\n/** @internal */\r\nfunction hasId$1(d) {\r\n    try {\r\n        return typeof d.id === \"string\";\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n}\r\n/** @internal */\r\nfunction defaultId$1(d) {\r\n    if (hasId$1(d)) {\r\n        return d.id;\r\n    }\r\n    else {\r\n        throw new Error(`default id function expected datum to have an id field by got: ${d}`);\r\n    }\r\n}\r\n/** @internal */\r\nfunction hasChildren(d) {\r\n    try {\r\n        const children = d.children;\r\n        return children === undefined || children instanceof Array;\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n}\r\n/** @internal */\r\nfunction defaultChildren(d) {\r\n    if (hasChildren(d)) {\r\n        return d.children;\r\n    }\r\n    else {\r\n        throw new Error(`default children function expected datum to have a children field but got: ${d}`);\r\n    }\r\n}\r\n/**\r\n * Constructs a new [[HierarchyOperator]] with default settings.\r\n *\r\n * By default ids will be pulled from the `id` property and children will be\r\n * pulled from the `children` property. Since `children` being undefined is\r\n * valid, forgetting to set children properly will result in a dag with only a\r\n * single node.\r\n */\r\nfunction hierarchy(...args) {\r\n    if (args.length) {\r\n        throw Error(`got arguments to dagHierarchy(${args}), but constructor takes no aruguments. ` +\r\n            \"These were probably meant as data which should be called as dagHierarchy()(...)\");\r\n    }\r\n    return buildOperator$2(defaultId$1, defaultChildren, wrapChildren(defaultChildren));\r\n}\n\nlet epsilon = 1.0e-60;\r\nlet tmpa;\r\nlet tmpb;\r\n\r\ndo {\r\n    epsilon += epsilon;\r\n    tmpa = 1 + 0.1 * epsilon;\r\n    tmpb = 1 + 0.2 * epsilon;\r\n} while (tmpa <= 1 || tmpb <= 1);\r\n\r\nvar vsmall = epsilon;\n\nfunction dpori(a, lda, n) {\r\n    let kp1, t;\r\n\r\n    for (let k = 1; k <= n; k += 1) {\r\n        a[k][k] = 1 / a[k][k];\r\n        t = -a[k][k];\r\n\r\n        // dscal(k - 1, t, a[1][k], 1);\r\n        for (let i = 1; i < k; i += 1) {\r\n            a[i][k] *= t;\r\n        }\r\n\r\n        kp1 = k + 1;\r\n        if (n < kp1) {\r\n            break;\r\n        }\r\n        for (let j = kp1; j <= n; j += 1) {\r\n            t = a[k][j];\r\n            a[k][j] = 0;\r\n\r\n            // daxpy(k, t, a[1][k], 1, a[1][j], 1);\r\n            for (let i = 1; i <= k; i += 1) {\r\n                a[i][j] += t * a[i][k];\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nvar dpori_1 = dpori;\n\nfunction dposl(a, lda, n, b) {\r\n    let k, t;\r\n\r\n    for (k = 1; k <= n; k += 1) {\r\n\r\n        // t = ddot(k - 1, a[1][k], 1, b[1], 1);\r\n        t = 0;\r\n        for (let i = 1; i < k; i += 1) {\r\n            t += a[i][k] * b[i];\r\n        }\r\n\r\n        b[k] = (b[k] - t) / a[k][k];\r\n    }\r\n\r\n    for (let kb = 1; kb <= n; kb += 1) {\r\n        k = n + 1 - kb;\r\n        b[k] /= a[k][k];\r\n        t = -b[k];\r\n\r\n        // daxpy(k - 1, t, a[1][k], 1, b[1], 1);\r\n        for (let i = 1; i < k; i += 1) {\r\n            b[i] += t * a[i][k];\r\n        }\r\n    }\r\n}\r\n\r\nvar dposl_1 = dposl;\n\nfunction dpofa(a, lda, n, info) {\r\n    let jm1, t, s;\r\n\r\n    for (let j = 1; j <= n; j += 1) {\r\n        info[1] = j;\r\n        s = 0;\r\n        jm1 = j - 1;\r\n        if (jm1 < 1) {\r\n            s = a[j][j] - s;\r\n            if (s <= 0) {\r\n                break;\r\n            }\r\n            a[j][j] = Math.sqrt(s);\r\n        } else {\r\n            for (let k = 1; k <= jm1; k += 1) {\r\n\r\n                // t = a[k][j] - ddot(k - 1, a[1][k], 1, a[1][j], 1);\r\n                t = a[k][j];\r\n                for (let i = 1; i < k; i += 1) {\r\n                    t -= a[i][j] * a[i][k];\r\n                }\r\n                t /= a[k][k];\r\n                a[k][j] = t;\r\n                s += t * t;\r\n            }\r\n            s = a[j][j] - s;\r\n            if (s <= 0) {\r\n                break;\r\n            }\r\n            a[j][j] = Math.sqrt(s);\r\n        }\r\n        info[1] = 0;\r\n    }\r\n}\r\n\r\nvar dpofa_1 = dpofa;\n\nfunction qpgen2(dmat, dvec, fddmat, n, sol, lagr, crval, amat, bvec, fdamat, q, meq, iact, nnact = 0, iter, work, ierr) {\r\n    let l1, it1, nvl, nact, temp, sum, t1, tt, gc, gs, nu, t1inf, t2min, go;\r\n\r\n    const r = Math.min(n, q);\r\n\r\n    let l = 2 * n + (r * (r + 5)) / 2 + 2 * q + 1;\r\n\r\n    for (let i = 1; i <= n; i += 1) {\r\n        work[i] = dvec[i];\r\n    }\r\n    for (let i = n + 1; i <= l; i += 1) {\r\n        work[i] = 0;\r\n    }\r\n    for (let i = 1; i <= q; i += 1) {\r\n        iact[i] = 0;\r\n        lagr[i] = 0;\r\n    }\r\n\r\n    const info = [];\r\n\r\n    if (ierr[1] === 0) {\r\n        dpofa_1(dmat, fddmat, n, info);\r\n        if (info[1] !== 0) {\r\n            ierr[1] = 2;\r\n            return;\r\n        }\r\n        dposl_1(dmat, fddmat, n, dvec);\r\n        dpori_1(dmat, fddmat, n);\r\n    } else {\r\n        for (let j = 1; j <= n; j += 1) {\r\n            sol[j] = 0;\r\n            for (let i = 1; i <= j; i += 1) {\r\n                sol[j] += dmat[i][j] * dvec[i];\r\n            }\r\n        }\r\n        for (let j = 1; j <= n; j += 1) {\r\n            dvec[j] = 0;\r\n            for (let i = j; i <= n; i += 1) {\r\n                dvec[j] += dmat[j][i] * sol[i];\r\n            }\r\n        }\r\n    }\r\n\r\n    crval[1] = 0;\r\n    for (let j = 1; j <= n; j += 1) {\r\n        sol[j] = dvec[j];\r\n        crval[1] += work[j] * sol[j];\r\n        work[j] = 0;\r\n        for (let i = j + 1; i <= n; i += 1) {\r\n            dmat[i][j] = 0;\r\n        }\r\n    }\r\n    crval[1] = -crval[1] / 2;\r\n    ierr[1] = 0;\r\n\r\n    const iwzv = n;\r\n    const iwrv = iwzv + n;\r\n    const iwuv = iwrv + r;\r\n    const iwrm = iwuv + r + 1;\r\n    const iwsv = iwrm + (r * (r + 1)) / 2;\r\n    const iwnbv = iwsv + q;\r\n\r\n    for (let i = 1; i <= q; i += 1) {\r\n        sum = 0;\r\n        for (let j = 1; j <= n; j += 1) {\r\n            sum += amat[j][i] * amat[j][i];\r\n        }\r\n        work[iwnbv + i] = Math.sqrt(sum);\r\n    }\r\n\r\n    nact = nnact;\r\n\r\n    iter[1] = 0;\r\n    iter[2] = 0;\r\n\r\n    function fnGoto50() {\r\n        iter[1] += 1;\r\n\r\n        l = iwsv;\r\n        for (let i = 1; i <= q; i += 1) {\r\n            l += 1;\r\n            sum = -bvec[i];\r\n            for (let j = 1; j <= n; j += 1) {\r\n                sum += amat[j][i] * sol[j];\r\n            }\r\n            if (Math.abs(sum) < vsmall) {\r\n                sum = 0;\r\n            }\r\n            if (i > meq) {\r\n                work[l] = sum;\r\n            } else {\r\n                work[l] = -Math.abs(sum);\r\n                if (sum > 0) {\r\n                    for (let j = 1; j <= n; j += 1) {\r\n                        amat[j][i] = -amat[j][i];\r\n                    }\r\n                    bvec[i] = -bvec[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 1; i <= nact; i += 1) {\r\n            work[iwsv + iact[i]] = 0;\r\n        }\r\n\r\n        nvl = 0;\r\n        temp = 0;\r\n        for (let i = 1; i <= q; i += 1) {\r\n            if (work[iwsv + i] < temp * work[iwnbv + i]) {\r\n                nvl = i;\r\n                temp = work[iwsv + i] / work[iwnbv + i];\r\n            }\r\n        }\r\n        if (nvl === 0) {\r\n            for (let i = 1; i <= nact; i += 1) {\r\n                lagr[iact[i]] = work[iwuv + i];\r\n            }\r\n            return 999;\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function fnGoto55() {\r\n        for (let i = 1; i <= n; i += 1) {\r\n            sum = 0;\r\n            for (let j = 1; j <= n; j += 1) {\r\n                sum += dmat[j][i] * amat[j][nvl];\r\n            }\r\n            work[i] = sum;\r\n        }\r\n\r\n        l1 = iwzv;\r\n        for (let i = 1; i <= n; i += 1) {\r\n            work[l1 + i] = 0;\r\n        }\r\n        for (let j = nact + 1; j <= n; j += 1) {\r\n            for (let i = 1; i <= n; i += 1) {\r\n                work[l1 + i] = work[l1 + i] + dmat[i][j] * work[j];\r\n            }\r\n        }\r\n\r\n        t1inf = true;\r\n        for (let i = nact; i >= 1; i -= 1) {\r\n            sum = work[i];\r\n            l = iwrm + (i * (i + 3)) / 2;\r\n            l1 = l - i;\r\n            for (let j = i + 1; j <= nact; j += 1) {\r\n                sum -= work[l] * work[iwrv + j];\r\n                l += j;\r\n            }\r\n            sum /= work[l1];\r\n            work[iwrv + i] = sum;\r\n            if (iact[i] <= meq) {\r\n                continue;\r\n            }\r\n            if (sum <= 0) {\r\n                continue;\r\n            }\r\n            t1inf = false;\r\n            it1 = i;\r\n        }\r\n\r\n        if (!t1inf) {\r\n            t1 = work[iwuv + it1] / work[iwrv + it1];\r\n            for (let i = 1; i <= nact; i += 1) {\r\n                if (iact[i] <= meq) {\r\n                    continue;\r\n                }\r\n                if (work[iwrv + i] <= 0) {\r\n                    continue;\r\n                }\r\n                temp = work[iwuv + i] / work[iwrv + i];\r\n                if (temp < t1) {\r\n                    t1 = temp;\r\n                    it1 = i;\r\n                }\r\n            }\r\n        }\r\n\r\n        sum = 0;\r\n        for (let i = iwzv + 1; i <= iwzv + n; i += 1) {\r\n            sum += work[i] * work[i];\r\n        }\r\n        if (Math.abs(sum) <= vsmall) {\r\n            if (t1inf) {\r\n                ierr[1] = 1;\r\n\r\n                return 999; // GOTO 999\r\n            }\r\n            for (let i = 1; i <= nact; i += 1) {\r\n                work[iwuv + i] = work[iwuv + i] - t1 * work[iwrv + i];\r\n            }\r\n            work[iwuv + nact + 1] = work[iwuv + nact + 1] + t1;\r\n\r\n            return 700; // GOTO 700\r\n        }\r\n        sum = 0;\r\n        for (let i = 1; i <= n; i += 1) {\r\n            sum += work[iwzv + i] * amat[i][nvl];\r\n        }\r\n        tt = -work[iwsv + nvl] / sum;\r\n        t2min = true;\r\n        if (!t1inf) {\r\n            if (t1 < tt) {\r\n                tt = t1;\r\n                t2min = false;\r\n            }\r\n        }\r\n\r\n        for (let i = 1; i <= n; i += 1) {\r\n            sol[i] += tt * work[iwzv + i];\r\n            if (Math.abs(sol[i]) < vsmall) {\r\n                sol[i] = 0;\r\n            }\r\n        }\r\n\r\n        crval[1] += tt * sum * (tt / 2 + work[iwuv + nact + 1]);\r\n        for (let i = 1; i <= nact; i += 1) {\r\n            work[iwuv + i] = work[iwuv + i] - tt * work[iwrv + i];\r\n        }\r\n        work[iwuv + nact + 1] = work[iwuv + nact + 1] + tt;\r\n\r\n        if (t2min) {\r\n            nact += 1;\r\n            iact[nact] = nvl;\r\n\r\n            l = iwrm + ((nact - 1) * nact) / 2 + 1;\r\n            for (let i = 1; i <= nact - 1; i += 1) {\r\n                work[l] = work[i];\r\n                l += 1;\r\n            }\r\n\r\n            if (nact === n) {\r\n                work[l] = work[n];\r\n            } else {\r\n                for (let i = n; i >= nact + 1; i -= 1) {\r\n                    if (work[i] === 0) {\r\n                        continue;\r\n                    }\r\n                    gc = Math.max(Math.abs(work[i - 1]), Math.abs(work[i]));\r\n                    gs = Math.min(Math.abs(work[i - 1]), Math.abs(work[i]));\r\n                    if (work[i - 1] >= 0) {\r\n                        temp = Math.abs(gc * Math.sqrt(1 + gs * gs /\r\n                            (gc * gc)));\r\n                    } else {\r\n                        temp = -Math.abs(gc * Math.sqrt(1 + gs * gs /\r\n                            (gc * gc)));\r\n                    }\r\n                    gc = work[i - 1] / temp;\r\n                    gs = work[i] / temp;\r\n\r\n                    if (gc === 1) {\r\n                        continue;\r\n                    }\r\n                    if (gc === 0) {\r\n                        work[i - 1] = gs * temp;\r\n                        for (let j = 1; j <= n; j += 1) {\r\n                            temp = dmat[j][i - 1];\r\n                            dmat[j][i - 1] = dmat[j][i];\r\n                            dmat[j][i] = temp;\r\n                        }\r\n                    } else {\r\n                        work[i - 1] = temp;\r\n                        nu = gs / (1 + gc);\r\n                        for (let j = 1; j <= n; j += 1) {\r\n                            temp = gc * dmat[j][i - 1] + gs * dmat[j][i];\r\n                            dmat[j][i] = nu * (dmat[j][i - 1] + temp) -\r\n                                dmat[j][i];\r\n                            dmat[j][i - 1] = temp;\r\n\r\n                        }\r\n                    }\r\n                }\r\n                work[l] = work[nact];\r\n            }\r\n        } else {\r\n            sum = -bvec[nvl];\r\n            for (let j = 1; j <= n; j += 1) {\r\n                sum += sol[j] * amat[j][nvl];\r\n            }\r\n            if (nvl > meq) {\r\n                work[iwsv + nvl] = sum;\r\n            } else {\r\n                work[iwsv + nvl] = -Math.abs(sum);\r\n                if (sum > 0) {\r\n                    for (let j = 1; j <= n; j += 1) {\r\n                        amat[j][nvl] = -amat[j][nvl];\r\n                    }\r\n                    bvec[nvl] = -bvec[nvl];\r\n                }\r\n            }\r\n\r\n            return 700; // GOTO 700\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function fnGoto797() {\r\n        l = iwrm + (it1 * (it1 + 1)) / 2 + 1;\r\n        l1 = l + it1;\r\n        if (work[l1] === 0) {\r\n            return 798; // GOTO 798\r\n        }\r\n        gc = Math.max(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\r\n        gs = Math.min(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\r\n        if (work[l1 - 1] >= 0) {\r\n            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\r\n        } else {\r\n            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\r\n        }\r\n        gc = work[l1 - 1] / temp;\r\n        gs = work[l1] / temp;\r\n\r\n        if (gc === 1) {\r\n            return 798; // GOTO 798\r\n        }\r\n        if (gc === 0) {\r\n            for (let i = it1 + 1; i <= nact; i += 1) {\r\n                temp = work[l1 - 1];\r\n                work[l1 - 1] = work[l1];\r\n                work[l1] = temp;\r\n                l1 += i;\r\n            }\r\n            for (let i = 1; i <= n; i += 1) {\r\n                temp = dmat[i][it1];\r\n                dmat[i][it1] = dmat[i][it1 + 1];\r\n                dmat[i][it1 + 1] = temp;\r\n            }\r\n        } else {\r\n            nu = gs / (1 + gc);\r\n            for (let i = it1 + 1; i <= nact; i += 1) {\r\n                temp = gc * work[l1 - 1] + gs * work[l1];\r\n                work[l1] = nu * (work[l1 - 1] + temp) - work[l1];\r\n                work[l1 - 1] = temp;\r\n                l1 += i;\r\n            }\r\n            for (let i = 1; i <= n; i += 1) {\r\n                temp = gc * dmat[i][it1] + gs * dmat[i][it1 + 1];\r\n                dmat[i][it1 + 1] = nu * (dmat[i][it1] + temp) -\r\n                    dmat[i][it1 + 1];\r\n                dmat[i][it1] = temp;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function fnGoto798() {\r\n        l1 = l - it1;\r\n        for (let i = 1; i <= it1; i += 1) {\r\n            work[l1] = work[l];\r\n            l += 1;\r\n            l1 += 1;\r\n        }\r\n\r\n        work[iwuv + it1] = work[iwuv + it1 + 1];\r\n        iact[it1] = iact[it1 + 1];\r\n        it1 += 1;\r\n        if (it1 < nact) {\r\n            return 797; // GOTO 797\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function fnGoto799() {\r\n        work[iwuv + nact] = work[iwuv + nact + 1];\r\n        work[iwuv + nact + 1] = 0;\r\n        iact[nact] = 0;\r\n        nact -= 1;\r\n        iter[2] += 1;\r\n\r\n        return 0;\r\n    }\r\n\r\n    go = 0;\r\n    while (true) { // eslint-disable-line no-constant-condition\r\n        go = fnGoto50();\r\n        if (go === 999) {\r\n            return;\r\n        }\r\n        while (true) { // eslint-disable-line no-constant-condition\r\n            go = fnGoto55();\r\n            if (go === 0) {\r\n                break;\r\n            }\r\n            if (go === 999) {\r\n                return;\r\n            }\r\n            if (go === 700) {\r\n                if (it1 === nact) {\r\n                    fnGoto799();\r\n                } else {\r\n                    while (true) { // eslint-disable-line no-constant-condition\r\n                        fnGoto797();\r\n                        go = fnGoto798();\r\n                        if (go !== 797) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    fnGoto799();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nvar qpgen2_1 = qpgen2;\n\nfunction solveQP(Dmat, dvec, Amat, bvec = [], meq = 0, factorized = [0, 0]) {\r\n    const crval = [];\r\n    const iact = [];\r\n    const sol = [];\r\n    const lagr = [];\r\n    const work = [];\r\n    const iter = [];\r\n\r\n    let message = \"\";\r\n\r\n    // In Fortran the array index starts from 1\r\n    const n = Dmat.length - 1;\r\n    const q = Amat[1].length - 1;\r\n\r\n    if (!bvec) {\r\n        for (let i = 1; i <= q; i += 1) {\r\n            bvec[i] = 0;\r\n        }\r\n    }\r\n\r\n    if (n !== Dmat[1].length - 1) {\r\n        message = \"Dmat is not symmetric!\";\r\n    }\r\n    if (n !== dvec.length - 1) {\r\n        message = \"Dmat and dvec are incompatible!\";\r\n    }\r\n    if (n !== Amat.length - 1) {\r\n        message = \"Amat and dvec are incompatible!\";\r\n    }\r\n    if (q !== bvec.length - 1) {\r\n        message = \"Amat and bvec are incompatible!\";\r\n    }\r\n    if ((meq > q) || (meq < 0)) {\r\n        message = \"Value of meq is invalid!\";\r\n    }\r\n\r\n    if (message !== \"\") {\r\n        return {\r\n            message\r\n        };\r\n    }\r\n\r\n    for (let i = 1; i <= q; i += 1) {\r\n        iact[i] = 0;\r\n        lagr[i] = 0;\r\n    }\r\n\r\n    const nact = 0;\r\n    const r = Math.min(n, q);\r\n\r\n    for (let i = 1; i <= n; i += 1) {\r\n        sol[i] = 0;\r\n    }\r\n    crval[1] = 0;\r\n    for (let i = 1; i <= (2 * n + (r * (r + 5)) / 2 + 2 * q + 1); i += 1) {\r\n        work[i] = 0;\r\n    }\r\n    for (let i = 1; i <= 2; i += 1) {\r\n        iter[i] = 0;\r\n    }\r\n\r\n    qpgen2_1(Dmat, dvec, n, n, sol, lagr, crval, Amat, bvec, n, q, meq, iact, nact, iter, work, factorized);\r\n\r\n    if (factorized[1] === 1) {\r\n        message = \"constraints are inconsistent, no solution!\";\r\n    }\r\n    if (factorized[1] === 2) {\r\n        message = \"matrix D in quadratic function is not positive definite!\";\r\n    }\r\n\r\n    return {\r\n        solution: sol,\r\n        Lagrangian: lagr,\r\n        value: crval,\r\n        unconstrained_solution: dvec, // eslint-disable-line camelcase\r\n        iterations: iter,\r\n        iact,\r\n        message\r\n    };\r\n}\r\n\r\nvar solveQP_1 = solveQP;\n\nvar quadprog = {\n\tsolveQP: solveQP_1\n};\n\nvar quadprog$1 = quadprog;\n\n/** @internal wrapper for solveQP */\r\nfunction qp(Q, c, A, b, meq) {\r\n    if (!c.length) {\r\n        return [];\r\n    }\r\n    const Dmat = [[0]];\r\n    const dvec = [0];\r\n    const Amat = [[0]];\r\n    const bvec = [0];\r\n    for (const qRow of Q) {\r\n        const newRow = [0];\r\n        newRow.push(...qRow);\r\n        Dmat.push(newRow);\r\n    }\r\n    dvec.push(...c);\r\n    Amat.push(...c.map(() => [0]));\r\n    for (const aRow of A) {\r\n        for (const [j, val] of aRow.entries()) {\r\n            Amat[j + 1].push(-val);\r\n        }\r\n    }\r\n    bvec.push(...b.map((v) => -v));\r\n    const { solution, message } = quadprog$1.solveQP(Dmat, dvec, Amat, bvec, meq);\r\n    /* istanbul ignore next */\r\n    if (message.length) {\r\n        throw new Error(`quadprog failed with: ${message}`);\r\n    }\r\n    solution.shift();\r\n    return solution;\r\n}\r\n/** @internal solve for node positions */\r\nfunction solve(Q, c, A, b, meq = 0) {\r\n    // Arbitrarily set the last coordinate to 0 (by removing it from the\r\n    // equation), which makes the formula valid This is simpler than special\r\n    // casing the last element\r\n    c.pop();\r\n    Q.pop();\r\n    Q.forEach((row) => row.pop());\r\n    A.forEach((row) => row.pop());\r\n    // Solve\r\n    const solution = qp(Q, c, A, b, meq);\r\n    // Undo last coordinate removal\r\n    solution.push(0);\r\n    return solution;\r\n}\r\n/** @internal compute indices used to index arrays */\r\nfunction indices(layers) {\r\n    const inds = new SafeMap();\r\n    let i = 0;\r\n    for (const layer of layers) {\r\n        for (const node of layer) {\r\n            inds.set(node.id, i++);\r\n        }\r\n    }\r\n    return inds;\r\n}\r\n/** @interal Compute constraint arrays for layer separation */\r\nfunction init(layers, inds, nodeSize) {\r\n    const n = 1 + Math.max(...inds.values());\r\n    const A = [];\r\n    const b = [];\r\n    for (const layer of layers) {\r\n        let [first, ...rest] = layer;\r\n        for (const second of rest) {\r\n            const find = inds.getThrow(first.id);\r\n            const sind = inds.getThrow(second.id);\r\n            const cons = new Array(n).fill(0);\r\n            cons[find] = 1;\r\n            cons[sind] = -1;\r\n            A.push(cons);\r\n            b.push(-(nodeSize(first)[0] + nodeSize(second)[0]) / 2);\r\n            first = second;\r\n        }\r\n    }\r\n    const c = new Array(n).fill(0);\r\n    const Q = new Array(n).fill(null).map(() => new Array(n).fill(0));\r\n    return [Q, c, A, b];\r\n}\r\n/** @internal update Q that minimizes edge distance squared */\r\nfunction minDist(Q, pind, cind, coef) {\r\n    Q[cind][cind] += coef;\r\n    Q[cind][pind] -= coef;\r\n    Q[pind][cind] -= coef;\r\n    Q[pind][pind] += coef;\r\n}\r\n/**\r\n * update Q that minimizes curve of edges through a node where curve is\r\n * calcukates as the squared distance of the middle node from the midpoint of\r\n * the first and last, multiplied by four for some reason\r\n *\r\n * @internal\r\n */\r\nfunction minBend(Q, pind, nind, cind, coef) {\r\n    Q[cind][cind] += coef;\r\n    Q[cind][nind] -= 2 * coef;\r\n    Q[cind][pind] += coef;\r\n    Q[nind][cind] -= 2 * coef;\r\n    Q[nind][nind] += 4 * coef;\r\n    Q[nind][pind] -= 2 * coef;\r\n    Q[pind][cind] += coef;\r\n    Q[pind][nind] -= 2 * coef;\r\n    Q[pind][pind] += coef;\r\n}\r\n/**\r\n * Assign nodes x based off of solution, and return the width of the final\r\n * layout.\r\n *\r\n * @internal\r\n */\r\nfunction layout(layers, nodeSize, inds, solution) {\r\n    // find span of solution\r\n    let start = Number.POSITIVE_INFINITY;\r\n    let finish = Number.NEGATIVE_INFINITY;\r\n    for (const layer of layers) {\r\n        const first = layer[0];\r\n        const last = layer[layer.length - 1];\r\n        start = Math.min(start, solution[inds.getThrow(first.id)] - nodeSize(first)[0] / 2);\r\n        finish = Math.max(finish, solution[inds.getThrow(last.id)] + nodeSize(last)[0] / 2);\r\n    }\r\n    // assign inds based off of span\r\n    for (const layer of layers) {\r\n        for (const node of layer) {\r\n            node.x = solution[inds.getThrow(node.id)] - start;\r\n        }\r\n    }\r\n    // return width\r\n    return finish - start;\r\n}\n\nclass DummyNode extends LayoutDagNode {\r\n    constructor(id) {\r\n        super(id, undefined);\r\n    }\r\n}\n\n/**\r\n * This accessor positions nodes to minimize aspect of curvature and distance\r\n * between nodes. The coordinates are assigned by solving a quadratic program,\r\n * with weights for various parts of the objective function. Quadratic programs\r\n * can take a while to solve, but this will likely produce the most appealing\r\n * output.\r\n *\r\n * @packageDocumentation\r\n */\r\n/**\r\n * Compute a map from node ids to a connected component index. This is useful\r\n * to quickly compare if two nodes are in the same connected component.\r\n * @internal\r\n */\r\nfunction componentMap(layers) {\r\n    // Note computing connected components is generally difficult, and with the\r\n    // layer representation, we lost access to convenient dag methods. Thus, we\r\n    // first reconstruct a mock dag to get connected components, then add them.\r\n    const roots = new SafeMap();\r\n    // We iterate in reverse order because we pop children, thus we're guaranteed\r\n    // to only have roots after we're done.\r\n    for (const layer of layers.slice().reverse()) {\r\n        for (const node of layer) {\r\n            for (const child of node.ichildren()) {\r\n                roots.delete(child.id);\r\n            }\r\n            roots.set(node.id, node);\r\n        }\r\n    }\r\n    // create a fake dag, and use it to get components\r\n    const components = new LayoutDagRoot([...roots.values()]).split();\r\n    // assign each node it's component id for fast checking if they're identical\r\n    const compMap = new SafeMap();\r\n    for (const [i, comp] of components.entries()) {\r\n        for (const node of comp) {\r\n            compMap.set(node.id, i);\r\n        }\r\n    }\r\n    return compMap;\r\n}\r\n/**\r\n * If disconnected components exist in the same layer, then we can minimize the\r\n * distance between them to make a reasonable objective. If, however, layers\r\n * share no common components then they are truely independent in assignment of\r\n * x coordinates and should be solved separately.\r\n * @internal\r\n */\r\nfunction splitComponentLayers(layers, compMap) {\r\n    // Because of dummy nodes, there's no way for a component to skip a layer,\r\n    // thus for layers to share no common components, there must be a clear\r\n    // boundary between any two.\r\n    const split = [];\r\n    let newLayers = [];\r\n    let lastComponents = new Set();\r\n    for (const layer of layers) {\r\n        const currentComponents = new Set(layer.map((n) => compMap.getThrow(n.id)));\r\n        if (!setIntersect(lastComponents, currentComponents)) {\r\n            split.push((newLayers = []));\r\n        }\r\n        newLayers.push(layer);\r\n        lastComponents = currentComponents;\r\n    }\r\n    return split;\r\n}\r\n/** @internal */\r\nfunction buildOperator$3(vertNode, vertDummy, curveNode, curveDummy, comp) {\r\n    function quadComponent(layers, nodeSize, compMap) {\r\n        const inds = indices(layers);\r\n        const [Q, c, A, b] = init(layers, inds, nodeSize);\r\n        for (const layer of layers) {\r\n            for (const par of layer) {\r\n                const pind = inds.getThrow(par.id);\r\n                const wpdist = par instanceof DummyNode ? vertDummy : vertNode;\r\n                for (const node of par.ichildren()) {\r\n                    const nind = inds.getThrow(node.id);\r\n                    const wndist = node instanceof DummyNode ? vertDummy : vertNode;\r\n                    const wcurve = node instanceof DummyNode ? curveDummy : curveNode;\r\n                    minDist(Q, pind, nind, wpdist + wndist);\r\n                    for (const child of node.ichildren()) {\r\n                        const cind = inds.getThrow(child.id);\r\n                        minBend(Q, pind, nind, cind, wcurve);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // for disconnected dags, add loss for being too far apart\r\n        for (let [first, ...rest] of layers) {\r\n            for (const second of rest) {\r\n                if (compMap.getThrow(first.id) !== compMap.getThrow(second.id)) {\r\n                    minDist(Q, inds.getThrow(first.id), inds.getThrow(second.id), comp);\r\n                }\r\n                first = second;\r\n            }\r\n        }\r\n        const solution = solve(Q, c, A, b);\r\n        return layout(layers, nodeSize, inds, solution);\r\n    }\r\n    function quadCall(layers, nodeSize) {\r\n        if (vertNode === 0 && curveNode === 0) {\r\n            throw new Error(\"node vertical weight or node curve weight needs to be positive\");\r\n        }\r\n        else if (vertDummy === 0 && curveDummy === 0) {\r\n            throw new Error(\"dummy vertical weight or dummy curve weight needs to be positive\");\r\n        }\r\n        // split components\r\n        const compMap = componentMap(layers);\r\n        const components = splitComponentLayers(layers, compMap);\r\n        // layout each component and get width\r\n        const widths = components.map((comp) => quadComponent(comp, nodeSize, compMap));\r\n        // center components\r\n        const maxWidth = Math.max(...widths);\r\n        if (maxWidth <= 0) {\r\n            throw new Error(\"must assign nonzero width to at least one node\");\r\n        }\r\n        for (const [i, comp] of components.entries()) {\r\n            const offset = (maxWidth - widths[i]) / 2;\r\n            for (const layer of comp) {\r\n                for (const node of layer) {\r\n                    node.x = def(node.x) + offset;\r\n                }\r\n            }\r\n        }\r\n        return maxWidth;\r\n    }\r\n    function vertical(val) {\r\n        if (val === undefined) {\r\n            return [vertNode, vertDummy];\r\n        }\r\n        const [valNode, valDummy] = val;\r\n        if (valNode < 0 || valDummy < 0) {\r\n            throw new Error(`weights must be non-negative, but were ${valNode} and ${valDummy}`);\r\n        }\r\n        else {\r\n            return buildOperator$3(valNode, valDummy, curveNode, curveDummy, comp);\r\n        }\r\n    }\r\n    quadCall.vertical = vertical;\r\n    function curve(val) {\r\n        if (val === undefined) {\r\n            return [curveNode, curveDummy];\r\n        }\r\n        const [valNode, valDummy] = val;\r\n        if (valNode < 0 || valDummy < 0) {\r\n            throw new Error(`weights must be non-negative, but were ${valNode} and ${valDummy}`);\r\n        }\r\n        else {\r\n            return buildOperator$3(vertNode, vertDummy, valNode, valDummy, comp);\r\n        }\r\n    }\r\n    quadCall.curve = curve;\r\n    function component(val) {\r\n        if (val === undefined) {\r\n            return comp;\r\n        }\r\n        else if (val <= 0) {\r\n            throw new Error(`weight must be positive, but was ${val}`);\r\n        }\r\n        else {\r\n            return buildOperator$3(vertNode, vertDummy, curveNode, curveDummy, val);\r\n        }\r\n    }\r\n    quadCall.component = component;\r\n    return quadCall;\r\n}\r\n/** Create a default [[QuadOperator]]. */\r\nfunction quad(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to quad(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$3(1, 0, 0, 1, 1);\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\n/*global module*/\r\n\r\nfunction Solution(tableau, evaluation, feasible, bounded) {\r\n    this.feasible = feasible;\r\n    this.evaluation = evaluation;\r\n    this.bounded = bounded;\r\n    this._tableau = tableau;\r\n}\r\nvar Solution_1 = Solution;\r\n\r\nSolution.prototype.generateSolutionSet = function () {\r\n    var solutionSet = {};\r\n\r\n    var tableau = this._tableau;\r\n    var varIndexByRow = tableau.varIndexByRow;\r\n    var variablesPerIndex = tableau.variablesPerIndex;\r\n    var matrix = tableau.matrix;\r\n    var rhsColumn = tableau.rhsColumn;\r\n    var lastRow = tableau.height - 1;\r\n    var roundingCoeff = Math.round(1 / tableau.precision);\r\n\r\n    for (var r = 1; r <= lastRow; r += 1) {\r\n        var varIndex = varIndexByRow[r];\r\n        var variable = variablesPerIndex[varIndex];\r\n        if (variable === undefined || variable.isSlack === true) {\r\n            continue;\r\n        }\r\n\r\n        var varValue = matrix[r][rhsColumn];\r\n        solutionSet[variable.id] =\r\n            Math.round((Number.EPSILON + varValue) * roundingCoeff) / roundingCoeff;\r\n    }\r\n\r\n    return solutionSet;\r\n};\n\n/*global module*/\r\n/*global require*/\r\n\r\n\r\nfunction MilpSolution(tableau, evaluation, feasible, bounded, branchAndCutIterations) {\r\n    Solution_1.call(this, tableau, evaluation, feasible, bounded);\r\n    this.iter = branchAndCutIterations;\r\n}\r\nvar MilpSolution_1 = MilpSolution;\r\nMilpSolution.prototype = Object.create(Solution_1.prototype);\r\nMilpSolution.constructor = MilpSolution;\n\n/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n\r\n\r\n\r\n/*************************************************************\r\n * Class: Tableau\r\n * Description: Simplex tableau, holding a the tableau matrix\r\n *              and all the information necessary to perform\r\n *              the simplex algorithm\r\n * Agruments:\r\n *        precision: If we're solving a MILP, how tight\r\n *                   do we want to define an integer, given\r\n *                   that 20.000000000000001 is not an integer.\r\n *                   (defaults to 1e-8)\r\n **************************************************************/\r\nfunction Tableau(precision) {\r\n    this.model = null;\r\n\r\n    this.matrix = null;\r\n    this.width = 0;\r\n    this.height = 0;\r\n\r\n    this.costRowIndex = 0;\r\n    this.rhsColumn = 0;\r\n\r\n    this.variablesPerIndex = [];\r\n    this.unrestrictedVars = null;\r\n\r\n    // Solution attributes\r\n    this.feasible = true; // until proven guilty\r\n    this.evaluation = 0;\r\n    this.simplexIters = 0;\r\n\r\n    this.varIndexByRow = null;\r\n    this.varIndexByCol = null;\r\n\r\n    this.rowByVarIndex = null;\r\n    this.colByVarIndex = null;\r\n\r\n    this.precision = precision || 1e-8;\r\n\r\n    this.optionalObjectives = [];\r\n    this.objectivesByPriority = {};\r\n\r\n    this.savedState = null;\r\n\r\n    this.availableIndexes = [];\r\n    this.lastElementIndex = 0;\r\n\r\n    this.variables = null;\r\n    this.nVars = 0;\r\n\r\n    this.bounded = true;\r\n    this.unboundedVarIndex = null;\r\n\r\n    this.branchAndCutIterations = 0;\r\n}\r\nvar Tableau_1 = Tableau;\r\n\r\nTableau.prototype.solve = function () {\r\n    if (this.model.getNumberOfIntegerVariables() > 0) {\r\n        this.branchAndCut();\r\n    } else {\r\n        this.simplex();\r\n    }\r\n    this.updateVariableValues();\r\n    return this.getSolution();\r\n};\r\n\r\nfunction OptionalObjective(priority, nColumns) {\r\n    this.priority = priority;\r\n    this.reducedCosts = new Array(nColumns);\r\n    for (var c = 0; c < nColumns; c += 1) {\r\n        this.reducedCosts[c] = 0;\r\n    }\r\n}\r\n\r\nOptionalObjective.prototype.copy = function () {\r\n    var copy = new OptionalObjective(this.priority, this.reducedCosts.length);\r\n    copy.reducedCosts = this.reducedCosts.slice();\r\n    return copy;\r\n};\r\n\r\nTableau.prototype.setOptionalObjective = function (priority, column, cost) {\r\n    var objectiveForPriority = this.objectivesByPriority[priority];\r\n    if (objectiveForPriority === undefined) {\r\n        var nColumns = Math.max(this.width, column + 1);\r\n        objectiveForPriority = new OptionalObjective(priority, nColumns);\r\n        this.objectivesByPriority[priority] = objectiveForPriority;\r\n        this.optionalObjectives.push(objectiveForPriority);\r\n        this.optionalObjectives.sort(function (a, b) {\r\n            return a.priority - b.priority;\r\n        });\r\n    }\r\n\r\n    objectiveForPriority.reducedCosts[column] = cost;\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.initialize = function (width, height, variables, unrestrictedVars) {\r\n    this.variables = variables;\r\n    this.unrestrictedVars = unrestrictedVars;\r\n\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n\r\n// console.time(\"tableau_build\");\r\n    // BUILD AN EMPTY ARRAY OF THAT WIDTH\r\n    var tmpRow = new Array(width);\r\n    for (var i = 0; i < width; i++) {\r\n        tmpRow[i] = 0;\r\n    }\r\n\r\n    // BUILD AN EMPTY TABLEAU\r\n    this.matrix = new Array(height);\r\n    for (var j = 0; j < height; j++) {\r\n        this.matrix[j] = tmpRow.slice();\r\n    }\r\n\r\n//\r\n// TODO: Benchmark This\r\n//this.matrix = new Array(height).fill(0).map(() => new Array(width).fill(0));\r\n\r\n// console.timeEnd(\"tableau_build\");\r\n// console.log(\"height\",height);\r\n// console.log(\"width\",width);\r\n// console.log(\"------\");\r\n// console.log(\"\");\r\n\r\n\r\n    this.varIndexByRow = new Array(this.height);\r\n    this.varIndexByCol = new Array(this.width);\r\n\r\n    this.varIndexByRow[0] = -1;\r\n    this.varIndexByCol[0] = -1;\r\n\r\n    this.nVars = width + height - 2;\r\n    this.rowByVarIndex = new Array(this.nVars);\r\n    this.colByVarIndex = new Array(this.nVars);\r\n\r\n    this.lastElementIndex = this.nVars;\r\n};\r\n\r\nTableau.prototype._resetMatrix = function () {\r\n    var variables = this.model.variables;\r\n    var constraints = this.model.constraints;\r\n\r\n    var nVars = variables.length;\r\n    var nConstraints = constraints.length;\r\n\r\n    var v, varIndex;\r\n    var costRow = this.matrix[0];\r\n    var coeff = (this.model.isMinimization === true) ? -1 : 1;\r\n    for (v = 0; v < nVars; v += 1) {\r\n        var variable = variables[v];\r\n        var priority = variable.priority;\r\n        var cost = coeff * variable.cost;\r\n        if (priority === 0) {\r\n            costRow[v + 1] = cost;\r\n        } else {\r\n            this.setOptionalObjective(priority, v + 1, cost);\r\n        }\r\n\r\n        varIndex = variables[v].index;\r\n        this.rowByVarIndex[varIndex] = -1;\r\n        this.colByVarIndex[varIndex] = v + 1;\r\n        this.varIndexByCol[v + 1] = varIndex;\r\n    }\r\n\r\n    var rowIndex = 1;\r\n    for (var c = 0; c < nConstraints; c += 1) {\r\n        var constraint = constraints[c];\r\n\r\n        var constraintIndex = constraint.index;\r\n        this.rowByVarIndex[constraintIndex] = rowIndex;\r\n        this.colByVarIndex[constraintIndex] = -1;\r\n        this.varIndexByRow[rowIndex] = constraintIndex;\r\n\r\n        var t, term, column;\r\n        var terms = constraint.terms;\r\n        var nTerms = terms.length;\r\n        var row = this.matrix[rowIndex++];\r\n        if (constraint.isUpperBound) {\r\n            for (t = 0; t < nTerms; t += 1) {\r\n                term = terms[t];\r\n                column = this.colByVarIndex[term.variable.index];\r\n                row[column] = term.coefficient;\r\n            }\r\n\r\n            row[0] = constraint.rhs;\r\n        } else {\r\n            for (t = 0; t < nTerms; t += 1) {\r\n                term = terms[t];\r\n                column = this.colByVarIndex[term.variable.index];\r\n                row[column] = -term.coefficient;\r\n            }\r\n\r\n            row[0] = -constraint.rhs;\r\n        }\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.setModel = function (model) {\r\n    this.model = model;\r\n\r\n    var width = model.nVariables + 1;\r\n    var height = model.nConstraints + 1;\r\n\r\n\r\n    this.initialize(width, height, model.variables, model.unrestrictedVariables);\r\n    this._resetMatrix();\r\n    return this;\r\n};\r\n\r\nTableau.prototype.getNewElementIndex = function () {\r\n    if (this.availableIndexes.length > 0) {\r\n        return this.availableIndexes.pop();\r\n    }\r\n\r\n    var index = this.lastElementIndex;\r\n    this.lastElementIndex += 1;\r\n    return index;\r\n};\r\n\r\nTableau.prototype.density = function () {\r\n    var density = 0;\r\n\r\n    var matrix = this.matrix;\r\n    for (var r = 0; r < this.height; r++) {\r\n        var row = matrix[r];\r\n        for (var c = 0; c < this.width; c++) {\r\n            if (row[c] !== 0) {\r\n                density += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    return density / (this.height * this.width);\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.setEvaluation = function () {\r\n    // Rounding objective value\r\n    var roundingCoeff = Math.round(1 / this.precision);\r\n    var evaluation = this.matrix[this.costRowIndex][this.rhsColumn];\r\n    var roundedEvaluation =\r\n        Math.round((Number.EPSILON + evaluation) * roundingCoeff) / roundingCoeff;\r\n\r\n    this.evaluation = roundedEvaluation;\r\n    if (this.simplexIters === 0) {\r\n        this.bestPossibleEval = roundedEvaluation;\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau.prototype.getSolution = function () {\r\n    var evaluation = (this.model.isMinimization === true) ?\r\n        this.evaluation : -this.evaluation;\r\n\r\n    if (this.model.getNumberOfIntegerVariables() > 0) {\r\n        return new MilpSolution_1(this, evaluation, this.feasible, this.bounded, this.branchAndCutIterations);\r\n    } else {\r\n        return new Solution_1(this, evaluation, this.feasible, this.bounded);\r\n    }\r\n};\n\n/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// Function: solve\r\n// Detail: Main function, linear programming solver\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype.simplex = function () {\r\n    // Bounded until proven otherwise\r\n    this.bounded = true;\r\n\r\n    // Execute Phase 1 to obtain a Basic Feasible Solution (BFS)\r\n    this.phase1();\r\n\r\n    // Execute Phase 2\r\n    if (this.feasible === true) {\r\n        // Running simplex on Initial Basic Feasible Solution (BFS)\r\n        // N.B current solution is feasible\r\n        this.phase2();\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n// Description: Convert a non standard form tableau\r\n//              to a standard form tableau by eliminating\r\n//              all negative values in the Right Hand Side (RHS)\r\n//              This results in a Basic Feasible Solution (BFS)\r\n//\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype.phase1 = function () {\r\n    var debugCheckForCycles = this.model.checkForCycles;\r\n    var varIndexesCycle = [];\r\n\r\n    var matrix = this.matrix;\r\n    var rhsColumn = this.rhsColumn;\r\n    var lastColumn = this.width - 1;\r\n    var lastRow = this.height - 1;\r\n\r\n    var unrestricted;\r\n    var iterations = 0;\r\n\r\n    while (true) {\r\n        // ******************************************\r\n        // ** PHASE 1 - STEP  1 : FIND PIVOT ROW **\r\n        //\r\n        // Selecting leaving variable (feasibility condition):\r\n        // Basic variable with most negative value\r\n        //\r\n        // ******************************************\r\n        var leavingRowIndex = 0;\r\n        var rhsValue = -this.precision;\r\n        for (var r = 1; r <= lastRow; r++) {\r\n            unrestricted = this.unrestrictedVars[this.varIndexByRow[r]] === true;\r\n            \r\n            //\r\n            // *Don't think this does anything...\r\n            //\r\n            //if (unrestricted) {\r\n            //    continue;\r\n            //}\r\n\r\n            var value = matrix[r][rhsColumn];\r\n            if (value < rhsValue) {\r\n                rhsValue = value;\r\n                leavingRowIndex = r;\r\n            }\r\n        }\r\n\r\n        // If nothing is strictly smaller than 0; we're done with phase 1.\r\n        if (leavingRowIndex === 0) {\r\n            // Feasible, champagne!\r\n            this.feasible = true;\r\n            return iterations;\r\n        }\r\n\r\n\r\n        // ******************************************\r\n        // ** PHASE 1 - STEP  2 : FIND PIVOT COLUMN **\r\n        //\r\n        //\r\n        // ******************************************\r\n        // Selecting entering variable\r\n        var enteringColumn = 0;\r\n        var maxQuotient = -Infinity;\r\n        var costRow = matrix[0];\r\n        var leavingRow = matrix[leavingRowIndex];\r\n        for (var c = 1; c <= lastColumn; c++) {\r\n            var coefficient = leavingRow[c];\r\n            //\r\n            // *Don't think this does anything...\r\n            //\r\n            //if (-this.precision < coefficient && coefficient < this.precision) {\r\n            //    continue;\r\n            //}\r\n            //\r\n\r\n            unrestricted = this.unrestrictedVars[this.varIndexByCol[c]] === true;\r\n            if (unrestricted || coefficient < -this.precision) {\r\n                var quotient = -costRow[c] / coefficient;\r\n                if (maxQuotient < quotient) {\r\n                    maxQuotient = quotient;\r\n                    enteringColumn = c;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (enteringColumn === 0) {\r\n            // Not feasible\r\n            this.feasible = false;\r\n            return iterations;\r\n        }\r\n\r\n        if(debugCheckForCycles){\r\n            varIndexesCycle.push([this.varIndexByRow[leavingRowIndex], this.varIndexByCol[enteringColumn]]);\r\n\r\n            var cycleData = this.checkForCycles(varIndexesCycle);\r\n            if(cycleData.length > 0){\r\n\r\n                this.model.messages.push(\"Cycle in phase 1\");\r\n                this.model.messages.push(\"Start :\"+ cycleData[0]);\r\n                this.model.messages.push(\"Length :\"+ cycleData[1]);\r\n\r\n                this.feasible = false;\r\n                return iterations;\r\n                \r\n            }\r\n        }\r\n\r\n        this.pivot(leavingRowIndex, enteringColumn);\r\n        iterations += 1;\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n// Description: Apply simplex to obtain optimal solution\r\n//              used as phase2 of the simplex\r\n//\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype.phase2 = function () {\r\n    var debugCheckForCycles = this.model.checkForCycles;\r\n    var varIndexesCycle = [];\r\n\r\n    var matrix = this.matrix;\r\n    var rhsColumn = this.rhsColumn;\r\n    var lastColumn = this.width - 1;\r\n    var lastRow = this.height - 1;\r\n\r\n    var precision = this.precision;\r\n    var nOptionalObjectives = this.optionalObjectives.length;\r\n    var optionalCostsColumns = null;\r\n\r\n    var iterations = 0;\r\n    var reducedCost, unrestricted;\r\n\r\n    while (true) {\r\n        var costRow = matrix[this.costRowIndex];\r\n\r\n        // Selecting entering variable (optimality condition)\r\n        if (nOptionalObjectives > 0) {\r\n            optionalCostsColumns = [];\r\n        }\r\n\r\n        var enteringColumn = 0;\r\n        var enteringValue = precision;\r\n        var isReducedCostNegative = false;\r\n        for (var c = 1; c <= lastColumn; c++) {\r\n            reducedCost = costRow[c];\r\n            unrestricted = this.unrestrictedVars[this.varIndexByCol[c]] === true;\r\n\r\n            if (nOptionalObjectives > 0 && -precision < reducedCost && reducedCost < precision) {\r\n                optionalCostsColumns.push(c);\r\n                continue;\r\n            }\r\n\r\n            if (unrestricted && reducedCost < 0) {\r\n                if (-reducedCost > enteringValue) {\r\n                    enteringValue = -reducedCost;\r\n                    enteringColumn = c;\r\n                    isReducedCostNegative = true;\r\n                }\r\n                continue;\r\n            }\r\n\r\n            if (reducedCost > enteringValue) {\r\n                enteringValue = reducedCost;\r\n                enteringColumn = c;\r\n                isReducedCostNegative = false;\r\n            }\r\n        }\r\n\r\n        if (nOptionalObjectives > 0) {\r\n            // There exist optional improvable objectives\r\n            var o = 0;\r\n            while (enteringColumn === 0 && optionalCostsColumns.length > 0 && o < nOptionalObjectives) {\r\n                var optionalCostsColumns2 = [];\r\n                var reducedCosts = this.optionalObjectives[o].reducedCosts;\r\n\r\n                enteringValue = precision;\r\n\r\n                for (var i = 0; i < optionalCostsColumns.length; i++) {\r\n                    c = optionalCostsColumns[i];\r\n\r\n                    reducedCost = reducedCosts[c];\r\n                    unrestricted = this.unrestrictedVars[this.varIndexByCol[c]] === true;\r\n\r\n                    if (-precision < reducedCost && reducedCost < precision) {\r\n                        optionalCostsColumns2.push(c);\r\n                        continue;\r\n                    }\r\n\r\n                    if (unrestricted && reducedCost < 0) {\r\n                        if (-reducedCost > enteringValue) {\r\n                            enteringValue = -reducedCost;\r\n                            enteringColumn = c;\r\n                            isReducedCostNegative = true;\r\n                        }\r\n                        continue;\r\n                    }\r\n\r\n                    if (reducedCost > enteringValue) {\r\n                        enteringValue = reducedCost;\r\n                        enteringColumn = c;\r\n                        isReducedCostNegative = false;\r\n                    }\r\n                }\r\n                optionalCostsColumns = optionalCostsColumns2;\r\n                o += 1;\r\n            }\r\n        }\r\n\r\n\r\n        // If no entering column could be found we're done with phase 2.\r\n        if (enteringColumn === 0) {\r\n            this.setEvaluation();\r\n            this.simplexIters += 1;\r\n            return iterations;\r\n        }\r\n\r\n        // Selecting leaving variable\r\n        var leavingRow = 0;\r\n        var minQuotient = Infinity;\r\n\r\n        var varIndexByRow = this.varIndexByRow;\r\n\r\n        for (var r = 1; r <= lastRow; r++) {\r\n            var row = matrix[r];\r\n            var rhsValue = row[rhsColumn];\r\n            var colValue = row[enteringColumn];\r\n\r\n            if (-precision < colValue && colValue < precision) {\r\n                continue;\r\n            }\r\n\r\n            if (colValue > 0 && precision > rhsValue && rhsValue > -precision) {\r\n                minQuotient = 0;\r\n                leavingRow = r;\r\n                break;\r\n            }\r\n\r\n            var quotient = isReducedCostNegative ? -rhsValue / colValue : rhsValue / colValue;\r\n            if (quotient > precision && minQuotient > quotient) {\r\n                minQuotient = quotient;\r\n                leavingRow = r;\r\n            }\r\n        }\r\n\r\n        if (minQuotient === Infinity) {\r\n            // optimal value is -Infinity\r\n            this.evaluation = -Infinity;\r\n            this.bounded = false;\r\n            this.unboundedVarIndex = this.varIndexByCol[enteringColumn];\r\n            return iterations;\r\n        }\r\n\r\n        if(debugCheckForCycles){\r\n            varIndexesCycle.push([this.varIndexByRow[leavingRow], this.varIndexByCol[enteringColumn]]);\r\n\r\n            var cycleData = this.checkForCycles(varIndexesCycle);\r\n            if(cycleData.length > 0){\r\n\r\n                this.model.messages.push(\"Cycle in phase 2\");\r\n                this.model.messages.push(\"Start :\"+ cycleData[0]);\r\n                this.model.messages.push(\"Length :\"+ cycleData[1]);\r\n\r\n                this.feasible = false;\r\n                return iterations;\r\n            }\r\n        }\r\n\r\n        this.pivot(leavingRow, enteringColumn, true);\r\n        iterations += 1;\r\n    }\r\n};\r\n\r\n// Array holding the column indexes for which the value is not null\r\n// on the pivot row\r\n// Shared by all tableaux for smaller overhead and lower memory usage\r\nvar nonZeroColumns = [];\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// Description: Execute pivot operations over a 2d array,\r\n//          on a given row, and column\r\n//\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype.pivot = function (pivotRowIndex, pivotColumnIndex) {\r\n    var matrix = this.matrix;\r\n\r\n    var quotient = matrix[pivotRowIndex][pivotColumnIndex];\r\n\r\n    var lastRow = this.height - 1;\r\n    var lastColumn = this.width - 1;\r\n\r\n    var leavingBasicIndex = this.varIndexByRow[pivotRowIndex];\r\n    var enteringBasicIndex = this.varIndexByCol[pivotColumnIndex];\r\n\r\n    this.varIndexByRow[pivotRowIndex] = enteringBasicIndex;\r\n    this.varIndexByCol[pivotColumnIndex] = leavingBasicIndex;\r\n\r\n    this.rowByVarIndex[enteringBasicIndex] = pivotRowIndex;\r\n    this.rowByVarIndex[leavingBasicIndex] = -1;\r\n\r\n    this.colByVarIndex[enteringBasicIndex] = -1;\r\n    this.colByVarIndex[leavingBasicIndex] = pivotColumnIndex;\r\n\r\n    // Divide everything in the target row by the element @\r\n    // the target column\r\n    var pivotRow = matrix[pivotRowIndex];\r\n    var nNonZeroColumns = 0;\r\n    for (var c = 0; c <= lastColumn; c++) {\r\n        if (!(pivotRow[c] >= -1e-16 && pivotRow[c] <= 1e-16)) {\r\n            pivotRow[c] /= quotient;\r\n            nonZeroColumns[nNonZeroColumns] = c;\r\n            nNonZeroColumns += 1;\r\n        } else {\r\n            pivotRow[c] = 0;\r\n        }\r\n    }\r\n    pivotRow[pivotColumnIndex] = 1 / quotient;\r\n\r\n    // for every row EXCEPT the pivot row,\r\n    // set the value in the pivot column = 0 by\r\n    // multiplying the value of all elements in the objective\r\n    // row by ... yuck... just look below; better explanation later\r\n    var coefficient, i, v0;\r\n    var precision = this.precision;\r\n    \r\n    // //////////////////////////////////////\r\n    //\r\n    // This is step 2 of the pivot function.\r\n    // It is, by far, the most expensive piece of\r\n    // this whole process where the code can be optimized (faster code)\r\n    // without changing the whole algorithm (fewer cycles)\r\n    //\r\n    // 1.) For every row but the pivot row\r\n    // 2.) Update each column to \r\n    //    a.) itself\r\n    //        less\r\n    //    b.) active-row's pivot column\r\n    //        times\r\n    //    c.) whatever-the-hell this is: nonZeroColumns[i]\r\n    // \r\n    // //////////////////////////////////////\r\n    // console.time(\"step-2\");\r\n    for (var r = 0; r <= lastRow; r++) {\r\n        if (r !== pivotRowIndex) {\r\n            //if(1 === 1){\r\n            if(!(matrix[r][pivotColumnIndex] >= -1e-16 && matrix[r][pivotColumnIndex] <= 1e-16)){\r\n            //if((matrix[r][pivotColumnIndex] !== 0)){\r\n                // Set reference to the row we're working on\r\n                //\r\n                var row = matrix[r];\r\n\r\n                // Catch the coefficient that we're going to end up dividing everything by\r\n                coefficient = row[pivotColumnIndex];\r\n                \r\n                // No point Burning Cycles if\r\n                // Zero to the thing\r\n                if (!(coefficient >= -1e-16 && coefficient <= 1e-16)) {\r\n                    for (i = 0; i < nNonZeroColumns; i++) {\r\n                        c = nonZeroColumns[i];\r\n                        // No point in doing math if you're just adding\r\n                        // Zero to the thing\r\n                        v0 = pivotRow[c];\r\n                        if (!(v0 >= -1e-16 && v0 <= 1e-16)) {\r\n                            row[c] = row[c] - coefficient * v0;\r\n                        } else {\r\n                            if(v0 !== 0){\r\n                                pivotRow[c] = 0;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    row[pivotColumnIndex] = -coefficient / quotient;\r\n                } else {\r\n                    if(coefficient !== 0){\r\n                        row[pivotColumnIndex] = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // console.timeEnd(\"step-2\");\r\n\r\n    var nOptionalObjectives = this.optionalObjectives.length;\r\n    if (nOptionalObjectives > 0) {\r\n        for (var o = 0; o < nOptionalObjectives; o += 1) {\r\n            var reducedCosts = this.optionalObjectives[o].reducedCosts;\r\n            coefficient = reducedCosts[pivotColumnIndex];\r\n            if (coefficient !== 0) {\r\n                for (i = 0; i < nNonZeroColumns; i++) {\r\n                    c = nonZeroColumns[i];\r\n                    v0 = pivotRow[c];\r\n                    if (v0 !== 0) {\r\n                        reducedCosts[c] = reducedCosts[c] - coefficient * v0;\r\n                    }\r\n                }\r\n\r\n                reducedCosts[pivotColumnIndex] = -coefficient / quotient;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nTableau_1.prototype.checkForCycles = function (varIndexes) {\r\n    for (var e1 = 0; e1 < varIndexes.length - 1; e1++) {\r\n        for (var e2 = e1 + 1; e2 < varIndexes.length; e2++) {\r\n            var elt1 = varIndexes[e1];\r\n            var elt2 = varIndexes[e2];\r\n            if (elt1[0] === elt2[0] && elt1[1] === elt2[1]) {\r\n                if (e2 - e1 > varIndexes.length - e2) {\r\n                    break;\r\n                }\r\n                var cycleFound = true;\r\n                for (var i = 1; i < e2 - e1; i++) {\r\n                    var tmp1 = varIndexes[e1+i];\r\n                    var tmp2 = varIndexes[e2+i];\r\n                    if(tmp1[0] !== tmp2[0] || tmp1[1] !== tmp2[1]) {\r\n                        cycleFound = false;\r\n                        break;\r\n                    }\r\n                }\r\n                if (cycleFound) {\r\n                    return [e1, e2 - e1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return [];\r\n};\n\n/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Variable(id, cost, index, priority) {\r\n    this.id = id;\r\n    this.cost = cost;\r\n    this.index = index;\r\n    this.value = 0;\r\n    this.priority = priority;\r\n}\r\n\r\nfunction IntegerVariable(id, cost, index, priority) {\r\n    Variable.call(this, id, cost, index, priority);\r\n}\r\nIntegerVariable.prototype.isInteger = true;\r\n\r\nfunction SlackVariable(id, index) {\r\n    Variable.call(this, id, 0, index, 0);\r\n}\r\nSlackVariable.prototype.isSlack = true;\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Term(variable, coefficient) {\r\n    this.variable = variable;\r\n    this.coefficient = coefficient;\r\n}\r\n\r\nfunction createRelaxationVariable(model, weight, priority) {\r\n    if (priority === 0 || priority === \"required\") {\r\n        return null;\r\n    }\r\n\r\n    weight = weight || 1;\r\n    priority = priority || 1;\r\n\r\n    if (model.isMinimization === false) {\r\n        weight = -weight;\r\n    }\r\n\r\n    return model.addVariable(weight, \"r\" + (model.relaxationIndex++), false, false, priority);\r\n}\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Constraint(rhs, isUpperBound, index, model) {\r\n    this.slack = new SlackVariable(\"s\" + index, index);\r\n    this.index = index;\r\n    this.model = model;\r\n    this.rhs = rhs;\r\n    this.isUpperBound = isUpperBound;\r\n\r\n    this.terms = [];\r\n    this.termsByVarIndex = {};\r\n\r\n    // Error variable in case the constraint is relaxed\r\n    this.relaxation = null;\r\n}\r\n\r\nConstraint.prototype.addTerm = function (coefficient, variable) {\r\n    var varIndex = variable.index;\r\n    var term = this.termsByVarIndex[varIndex];\r\n    if (term === undefined) {\r\n        // No term for given variable\r\n        term = new Term(variable, coefficient);\r\n        this.termsByVarIndex[varIndex] = term;\r\n        this.terms.push(term);\r\n        if (this.isUpperBound === true) {\r\n            coefficient = -coefficient;\r\n        }\r\n        this.model.updateConstraintCoefficient(this, variable, coefficient);\r\n    } else {\r\n        // Term for given variable already exists\r\n        // updating its coefficient\r\n        var newCoefficient = term.coefficient + coefficient;\r\n        this.setVariableCoefficient(newCoefficient, variable);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nConstraint.prototype.removeTerm = function (term) {\r\n    // TODO\r\n    return this;\r\n};\r\n\r\nConstraint.prototype.setRightHandSide = function (newRhs) {\r\n    if (newRhs !== this.rhs) {\r\n        var difference = newRhs - this.rhs;\r\n        if (this.isUpperBound === true) {\r\n            difference = -difference;\r\n        }\r\n\r\n        this.rhs = newRhs;\r\n        this.model.updateRightHandSide(this, difference);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nConstraint.prototype.setVariableCoefficient = function (newCoefficient, variable) {\r\n    var varIndex = variable.index;\r\n    if (varIndex === -1) {\r\n        console.warn(\"[Constraint.setVariableCoefficient] Trying to change coefficient of inexistant variable.\");\r\n        return;\r\n    }\r\n\r\n    var term = this.termsByVarIndex[varIndex];\r\n    if (term === undefined) {\r\n        // No term for given variable\r\n        this.addTerm(newCoefficient, variable);\r\n    } else {\r\n        // Term for given variable already exists\r\n        // updating its coefficient if changed\r\n        if (newCoefficient !== term.coefficient) {\r\n            var difference = newCoefficient - term.coefficient;\r\n            if (this.isUpperBound === true) {\r\n                difference = -difference;\r\n            }\r\n\r\n            term.coefficient = newCoefficient;\r\n            this.model.updateConstraintCoefficient(this, variable, difference);\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nConstraint.prototype.relax = function (weight, priority) {\r\n    this.relaxation = createRelaxationVariable(this.model, weight, priority);\r\n    this._relax(this.relaxation);\r\n};\r\n\r\nConstraint.prototype._relax = function (relaxationVariable) {\r\n    if (relaxationVariable === null) {\r\n        // Relaxation variable not created, priority was probably \"required\"\r\n        return;\r\n    }\r\n\r\n    if (this.isUpperBound) {\r\n        this.setVariableCoefficient(-1, relaxationVariable);\r\n    } else {\r\n        this.setVariableCoefficient(1, relaxationVariable);\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Equality(constraintUpper, constraintLower) {\r\n    this.upperBound = constraintUpper;\r\n    this.lowerBound = constraintLower;\r\n    this.model = constraintUpper.model;\r\n    this.rhs = constraintUpper.rhs;\r\n    this.relaxation = null;\r\n}\r\n\r\nEquality.prototype.isEquality = true;\r\n\r\nEquality.prototype.addTerm = function (coefficient, variable) {\r\n    this.upperBound.addTerm(coefficient, variable);\r\n    this.lowerBound.addTerm(coefficient, variable);\r\n    return this;\r\n};\r\n\r\nEquality.prototype.removeTerm = function (term) {\r\n    this.upperBound.removeTerm(term);\r\n    this.lowerBound.removeTerm(term);\r\n    return this;\r\n};\r\n\r\nEquality.prototype.setRightHandSide = function (rhs) {\r\n    this.upperBound.setRightHandSide(rhs);\r\n    this.lowerBound.setRightHandSide(rhs);\r\n    this.rhs = rhs;\r\n};\r\n\r\nEquality.prototype.relax = function (weight, priority) {\r\n    this.relaxation = createRelaxationVariable(this.model, weight, priority);\r\n    this.upperBound.relaxation = this.relaxation;\r\n    this.upperBound._relax(this.relaxation);\r\n    this.lowerBound.relaxation = this.relaxation;\r\n    this.lowerBound._relax(this.relaxation);\r\n};\r\n\r\n\r\nvar expressions = {\r\n    Constraint: Constraint,\r\n    Variable: Variable,\r\n    IntegerVariable: IntegerVariable,\r\n    SlackVariable: SlackVariable,\r\n    Equality: Equality,\r\n    Term: Term\r\n};\n\n/*global require*/\r\n\r\nvar SlackVariable$1 = expressions.SlackVariable;\r\n\r\nTableau_1.prototype.addCutConstraints = function (cutConstraints) {\r\n    var nCutConstraints = cutConstraints.length;\r\n\r\n    var height = this.height;\r\n    var heightWithCuts = height + nCutConstraints;\r\n\r\n    // Adding rows to hold cut constraints\r\n    for (var h = height; h < heightWithCuts; h += 1) {\r\n        if (this.matrix[h] === undefined) {\r\n            this.matrix[h] = this.matrix[h - 1].slice();\r\n        }\r\n    }\r\n\r\n    // Adding cut constraints\r\n    this.height = heightWithCuts;\r\n    this.nVars = this.width + this.height - 2;\r\n\r\n    var c;\r\n    var lastColumn = this.width - 1;\r\n    for (var i = 0; i < nCutConstraints; i += 1) {\r\n        var cut = cutConstraints[i];\r\n\r\n        // Constraint row index\r\n        var r = height + i;\r\n\r\n        var sign = (cut.type === \"min\") ? -1 : 1;\r\n\r\n        // Variable on which the cut is applied\r\n        var varIndex = cut.varIndex;\r\n        var varRowIndex = this.rowByVarIndex[varIndex];\r\n        var constraintRow = this.matrix[r];\r\n        if (varRowIndex === -1) {\r\n            // Variable is non basic\r\n            constraintRow[this.rhsColumn] = sign * cut.value;\r\n            for (c = 1; c <= lastColumn; c += 1) {\r\n                constraintRow[c] = 0;\r\n            }\r\n            constraintRow[this.colByVarIndex[varIndex]] = sign;\r\n        } else {\r\n            // Variable is basic\r\n            var varRow = this.matrix[varRowIndex];\r\n            var varValue = varRow[this.rhsColumn];\r\n            constraintRow[this.rhsColumn] = sign * (cut.value - varValue);\r\n            for (c = 1; c <= lastColumn; c += 1) {\r\n                constraintRow[c] = -sign * varRow[c];\r\n            }\r\n        }\r\n\r\n        // Creating slack variable\r\n        var slackVarIndex = this.getNewElementIndex();\r\n        this.varIndexByRow[r] = slackVarIndex;\r\n        this.rowByVarIndex[slackVarIndex] = r;\r\n        this.colByVarIndex[slackVarIndex] = -1;\r\n        this.variablesPerIndex[slackVarIndex] = new SlackVariable$1(\"s\"+slackVarIndex, slackVarIndex);\r\n        this.nVars += 1;\r\n    }\r\n};\r\n\r\nTableau_1.prototype._addLowerBoundMIRCut = function(rowIndex) {\r\n\r\n\tif(rowIndex === this.costRowIndex) {\r\n\t\t//console.log(\"! IN MIR CUTS : The index of the row corresponds to the cost row. !\");\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar model = this.model;\r\n\tvar matrix = this.matrix;\r\n\r\n\tvar intVar = this.variablesPerIndex[this.varIndexByRow[rowIndex]];\r\n\tif (!intVar.isInteger) {\r\n\t\treturn false;\r\n    }\r\n\r\n\tvar d = matrix[rowIndex][this.rhsColumn];\r\n\tvar frac_d = d - Math.floor(d);\r\n\r\n\tif (frac_d < this.precision || 1 - this.precision < frac_d) {\r\n\t\treturn false;\r\n    }\r\n\r\n\t//Adding a row\r\n\tvar r = this.height;\r\n\tmatrix[r] = matrix[r - 1].slice();\r\n\tthis.height += 1;\r\n\r\n\t// Creating slack variable\r\n\tthis.nVars += 1;\r\n\tvar slackVarIndex = this.getNewElementIndex();\r\n\tthis.varIndexByRow[r] = slackVarIndex;\r\n\tthis.rowByVarIndex[slackVarIndex] = r;\r\n\tthis.colByVarIndex[slackVarIndex] = -1;\r\n\tthis.variablesPerIndex[slackVarIndex] = new SlackVariable$1(\"s\"+slackVarIndex, slackVarIndex);\r\n\r\n\tmatrix[r][this.rhsColumn] = Math.floor(d);\r\n\r\n\tfor (var colIndex = 1; colIndex < this.varIndexByCol.length; colIndex += 1) {\r\n\t\tvar variable = this.variablesPerIndex[this.varIndexByCol[colIndex]];\r\n\r\n\t\tif (!variable.isInteger) {\r\n\t\t\tmatrix[r][colIndex] = Math.min(0, matrix[rowIndex][colIndex] / (1 - frac_d));\r\n\t\t} else {\r\n\t\t\tvar coef = matrix[rowIndex][colIndex];\r\n\t\t\tvar termCoeff = Math.floor(coef)+Math.max(0, coef - Math.floor(coef) - frac_d) / (1 - frac_d);\r\n\t\t\tmatrix[r][colIndex] = termCoeff;\r\n\t\t}\r\n\t}\r\n\r\n\tfor(var c = 0; c < this.width; c += 1) {\r\n\t\tmatrix[r][c] -= matrix[rowIndex][c];\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\nTableau_1.prototype._addUpperBoundMIRCut = function(rowIndex) {\r\n\r\n\tif (rowIndex === this.costRowIndex) {\r\n\t\t//console.log(\"! IN MIR CUTS : The index of the row corresponds to the cost row. !\");\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar model = this.model;\r\n\tvar matrix = this.matrix;\r\n\r\n\tvar intVar = this.variablesPerIndex[this.varIndexByRow[rowIndex]];\r\n\tif (!intVar.isInteger) {\r\n\t\treturn false;\r\n    }\r\n\r\n\tvar b = matrix[rowIndex][this.rhsColumn];\r\n\tvar f = b - Math.floor(b);\r\n\r\n\tif (f < this.precision || 1 - this.precision < f) {\r\n\t\treturn false;\r\n    }\r\n\r\n\t//Adding a row\r\n\tvar r = this.height;\r\n\tmatrix[r] = matrix[r - 1].slice();\r\n\tthis.height += 1;\r\n\r\n\t// Creating slack variable\r\n    \r\n\tthis.nVars += 1;\r\n\tvar slackVarIndex = this.getNewElementIndex();\r\n\tthis.varIndexByRow[r] = slackVarIndex;\r\n\tthis.rowByVarIndex[slackVarIndex] = r;\r\n\tthis.colByVarIndex[slackVarIndex] = -1;\r\n\tthis.variablesPerIndex[slackVarIndex] = new SlackVariable$1(\"s\"+slackVarIndex, slackVarIndex);\r\n\r\n\tmatrix[r][this.rhsColumn] = -f;\r\n\r\n\r\n\tfor(var colIndex = 1; colIndex < this.varIndexByCol.length; colIndex += 1) {\r\n\t\tvar variable = this.variablesPerIndex[this.varIndexByCol[colIndex]];\r\n\r\n\t\tvar aj = matrix[rowIndex][colIndex];\r\n\t\tvar fj = aj - Math.floor(aj);\r\n\r\n\t\tif(variable.isInteger) {\r\n\t\t\tif(fj <= f) {\r\n\t\t\t\tmatrix[r][colIndex] = -fj;\r\n            } else {\r\n\t\t\t\tmatrix[r][colIndex] = -(1 - fj) * f / fj;\r\n            }\r\n\t\t} else {\r\n\t\t\tif (aj >= 0) {\r\n\t\t\t\tmatrix[r][colIndex] = -aj;\r\n            } else {\r\n\t\t\t\tmatrix[r][colIndex] = aj * f / (1 - f);\r\n            }\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n//\r\n// THIS MAKES SOME MILP PROBLEMS PROVIDE INCORRECT\r\n// ANSWERS...\r\n//\r\n// QUICK FIX: MAKE THE FUNCTION EMPTY...\r\n//\r\nTableau_1.prototype.applyMIRCuts = function () {\r\n    \r\n    // var nRows = this.height;\r\n    // for (var cst = 0; cst < nRows; cst += 1) {\r\n    //    this._addUpperBoundMIRCut(cst);\r\n    // }\r\n\r\n\r\n    // // nRows = tableau.height;\r\n    // for (cst = 0; cst < nRows; cst += 1) {\r\n    //    this._addLowerBoundMIRCut(cst);\r\n    // }\r\n    \r\n};\n\n/*global require*/\r\n/*global console*/\r\n\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype._putInBase = function (varIndex) {\r\n    // Is varIndex in the base?\r\n    var r = this.rowByVarIndex[varIndex];\r\n    if (r === -1) {\r\n        // Outside the base\r\n        // pivoting to take it out\r\n        var c = this.colByVarIndex[varIndex];\r\n\r\n        // Selecting pivot row\r\n        // (Any row with coefficient different from 0)\r\n        for (var r1 = 1; r1 < this.height; r1 += 1) {\r\n            var coefficient = this.matrix[r1][c];\r\n            if (coefficient < -this.precision || this.precision < coefficient) {\r\n                r = r1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.pivot(r, c);\r\n    }\r\n\r\n    return r;\r\n};\r\n\r\nTableau_1.prototype._takeOutOfBase = function (varIndex) {\r\n    // Is varIndex in the base?\r\n    var c = this.colByVarIndex[varIndex];\r\n    if (c === -1) {\r\n        // Inside the base\r\n        // pivoting to take it out\r\n        var r = this.rowByVarIndex[varIndex];\r\n\r\n        // Selecting pivot column\r\n        // (Any column with coefficient different from 0)\r\n        var pivotRow = this.matrix[r];\r\n        for (var c1 = 1; c1 < this.height; c1 += 1) {\r\n            var coefficient = pivotRow[c1];\r\n            if (coefficient < -this.precision || this.precision < coefficient) {\r\n                c = c1;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.pivot(r, c);\r\n    }\r\n\r\n    return c;\r\n};\r\n\r\nTableau_1.prototype.updateVariableValues = function () {\r\n    var nVars = this.variables.length;\r\n    var roundingCoeff = Math.round(1 / this.precision);\r\n    for (var v = 0; v < nVars; v += 1) {\r\n        var variable = this.variables[v];\r\n        var varIndex = variable.index;\r\n\r\n        var r = this.rowByVarIndex[varIndex];\r\n        if (r === -1) {\r\n            // Variable is non basic\r\n            variable.value = 0;\r\n        } else {\r\n            // Variable is basic\r\n            var varValue = this.matrix[r][this.rhsColumn];\r\n            variable.value = Math.round((varValue + Number.EPSILON) * roundingCoeff) / roundingCoeff;\r\n        }\r\n    }\r\n};\r\n\r\nTableau_1.prototype.updateRightHandSide = function (constraint, difference) {\r\n    // Updates RHS of given constraint\r\n    var lastRow = this.height - 1;\r\n    var constraintRow = this.rowByVarIndex[constraint.index];\r\n    if (constraintRow === -1) {\r\n        // Slack is not in base\r\n        var slackColumn = this.colByVarIndex[constraint.index];\r\n\r\n        // Upading all the RHS values\r\n        for (var r = 0; r <= lastRow; r += 1) {\r\n            var row = this.matrix[r];\r\n            row[this.rhsColumn] -= difference * row[slackColumn];\r\n        }\r\n\r\n        var nOptionalObjectives = this.optionalObjectives.length;\r\n        if (nOptionalObjectives > 0) {\r\n            for (var o = 0; o < nOptionalObjectives; o += 1) {\r\n                var reducedCosts = this.optionalObjectives[o].reducedCosts;\r\n                reducedCosts[this.rhsColumn] -= difference * reducedCosts[slackColumn];\r\n            }\r\n        }\r\n    } else {\r\n        // Slack variable of constraint is in base\r\n        // Updating RHS with the difference between the old and the new one\r\n        this.matrix[constraintRow][this.rhsColumn] -= difference;\r\n    }\r\n};\r\n\r\nTableau_1.prototype.updateConstraintCoefficient = function (constraint, variable, difference) {\r\n    // Updates variable coefficient within a constraint\r\n    if (constraint.index === variable.index) {\r\n        throw new Error(\"[Tableau.updateConstraintCoefficient] constraint index should not be equal to variable index !\");\r\n    }\r\n\r\n    var r = this._putInBase(constraint.index);\r\n\r\n    var colVar = this.colByVarIndex[variable.index];\r\n    if (colVar === -1) {\r\n        var rowVar = this.rowByVarIndex[variable.index];\r\n        for (var c = 0; c < this.width; c += 1){\r\n            this.matrix[r][c] += difference * this.matrix[rowVar][c];\r\n        }\r\n    } else {\r\n        this.matrix[r][colVar] -= difference;\r\n    }\r\n};\r\n\r\nTableau_1.prototype.updateCost = function (variable, difference) {\r\n    // Updates variable coefficient within the objective function\r\n    var varIndex = variable.index;\r\n    var lastColumn = this.width - 1;\r\n    var varColumn = this.colByVarIndex[varIndex];\r\n    if (varColumn === -1) {\r\n        // Variable is in base\r\n        var variableRow = this.matrix[this.rowByVarIndex[varIndex]];\r\n\r\n        var c;\r\n        if (variable.priority === 0) {\r\n            var costRow = this.matrix[0];\r\n\r\n            // Upading all the reduced costs\r\n            for (c = 0; c <= lastColumn; c += 1) {\r\n                costRow[c] += difference * variableRow[c];\r\n            }\r\n        } else {\r\n            var reducedCosts = this.objectivesByPriority[variable.priority].reducedCosts;\r\n            for (c = 0; c <= lastColumn; c += 1) {\r\n                reducedCosts[c] += difference * variableRow[c];\r\n            }\r\n        }\r\n    } else {\r\n        // Variable is not in the base\r\n        // Updating coefficient with difference\r\n        this.matrix[0][varColumn] -= difference;\r\n    }\r\n};\r\n\r\nTableau_1.prototype.addConstraint = function (constraint) {\r\n    // Adds a constraint to the tableau\r\n    var sign = constraint.isUpperBound ? 1 : -1;\r\n    var lastRow = this.height;\r\n\r\n    var constraintRow = this.matrix[lastRow];\r\n    if (constraintRow === undefined) {\r\n        constraintRow = this.matrix[0].slice();\r\n        this.matrix[lastRow] = constraintRow;\r\n    }\r\n\r\n    // Setting all row cells to 0\r\n    var lastColumn = this.width - 1;\r\n    for (var c = 0; c <= lastColumn; c += 1) {\r\n        constraintRow[c] = 0;\r\n    }\r\n\r\n    // Initializing RHS\r\n    constraintRow[this.rhsColumn] = sign * constraint.rhs;\r\n\r\n    var terms = constraint.terms;\r\n    var nTerms = terms.length;\r\n    for (var t = 0; t < nTerms; t += 1) {\r\n        var term = terms[t];\r\n        var coefficient = term.coefficient;\r\n        var varIndex = term.variable.index;\r\n\r\n        var varRowIndex = this.rowByVarIndex[varIndex];\r\n        if (varRowIndex === -1) {\r\n            // Variable is non basic\r\n            constraintRow[this.colByVarIndex[varIndex]] += sign * coefficient;\r\n        } else {\r\n            // Variable is basic\r\n            var varRow = this.matrix[varRowIndex];\r\n            var varValue = varRow[this.rhsColumn];\r\n            for (c = 0; c <= lastColumn; c += 1) {\r\n                constraintRow[c] -= sign * coefficient * varRow[c];\r\n            }\r\n        }\r\n    }\r\n    // Creating slack variable\r\n    var slackIndex = constraint.index;\r\n    this.varIndexByRow[lastRow] = slackIndex;\r\n    this.rowByVarIndex[slackIndex] = lastRow;\r\n    this.colByVarIndex[slackIndex] = -1;\r\n\r\n    this.height += 1;\r\n};\r\n\r\nTableau_1.prototype.removeConstraint = function (constraint) {\r\n    var slackIndex = constraint.index;\r\n    var lastRow = this.height - 1;\r\n\r\n    // Putting the constraint's slack in the base\r\n    var r = this._putInBase(slackIndex);\r\n\r\n    // Removing constraint\r\n    // by putting the corresponding row at the bottom of the matrix\r\n    // and virtually reducing the height of the matrix by 1\r\n    var tmpRow = this.matrix[lastRow];\r\n    this.matrix[lastRow] = this.matrix[r];\r\n    this.matrix[r] = tmpRow;\r\n\r\n    // Removing associated slack variable from basic variables\r\n    this.varIndexByRow[r] = this.varIndexByRow[lastRow];\r\n    this.varIndexByRow[lastRow] = -1;\r\n    this.rowByVarIndex[slackIndex] = -1;\r\n\r\n    // Putting associated slack variable index in index manager\r\n    this.availableIndexes[this.availableIndexes.length] = slackIndex;\r\n\r\n    constraint.slack.index = -1;\r\n\r\n    this.height -= 1;\r\n};\r\n\r\nTableau_1.prototype.addVariable = function (variable) {\r\n    // Adds a variable to the tableau\r\n    // var sign = constraint.isUpperBound ? 1 : -1;\r\n\r\n    var lastRow = this.height - 1;\r\n    var lastColumn = this.width;\r\n    var cost = this.model.isMinimization === true ? -variable.cost : variable.cost;\r\n    var priority = variable.priority;\r\n\r\n    // Setting reduced costs\r\n    var nOptionalObjectives = this.optionalObjectives.length;\r\n    if (nOptionalObjectives > 0) {\r\n        for (var o = 0; o < nOptionalObjectives; o += 1) {\r\n            this.optionalObjectives[o].reducedCosts[lastColumn] = 0;\r\n        }\r\n    }\r\n\r\n    if (priority === 0) {\r\n        this.matrix[0][lastColumn] = cost;\r\n    } else {\r\n        this.setOptionalObjective(priority, lastColumn, cost);\r\n        this.matrix[0][lastColumn] = 0;\r\n    }\r\n\r\n    // Setting all other column cells to 0\r\n    for (var r = 1; r <= lastRow; r += 1) {\r\n        this.matrix[r][lastColumn] = 0;\r\n    }\r\n\r\n    // Adding variable to trackers\r\n    var varIndex = variable.index;\r\n    this.varIndexByCol[lastColumn] = varIndex;\r\n\r\n    this.rowByVarIndex[varIndex] = -1;\r\n    this.colByVarIndex[varIndex] = lastColumn;\r\n\r\n    this.width += 1;\r\n};\r\n\r\n\r\nTableau_1.prototype.removeVariable = function (variable) {\r\n    var varIndex = variable.index;\r\n\r\n    // Putting the variable out of the base\r\n    var c = this._takeOutOfBase(varIndex);\r\n    var lastColumn = this.width - 1;\r\n    if (c !== lastColumn) {\r\n        var lastRow = this.height - 1;\r\n        for (var r = 0; r <= lastRow; r += 1) {\r\n            var row = this.matrix[r];\r\n            row[c] = row[lastColumn];\r\n        }\r\n\r\n        var nOptionalObjectives = this.optionalObjectives.length;\r\n        if (nOptionalObjectives > 0) {\r\n            for (var o = 0; o < nOptionalObjectives; o += 1) {\r\n                var reducedCosts = this.optionalObjectives[o].reducedCosts;\r\n                reducedCosts[c] = reducedCosts[lastColumn];\r\n            }\r\n        }\r\n\r\n        var switchVarIndex = this.varIndexByCol[lastColumn];\r\n        this.varIndexByCol[c] = switchVarIndex;\r\n        this.colByVarIndex[switchVarIndex] = c;\r\n    }\r\n\r\n    // Removing variable from non basic variables\r\n    this.varIndexByCol[lastColumn] = -1;\r\n    this.colByVarIndex[varIndex] = -1;\r\n\r\n    // Adding index into index manager\r\n    this.availableIndexes[this.availableIndexes.length] = varIndex;\r\n\r\n    variable.index = -1;\r\n\r\n    this.width -= 1;\r\n};\n\n/*global require*/\r\n/*global console*/\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// Description: Display a tableau matrix\r\n//              and additional tableau information\r\n//\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype.log = function (message, force) {\r\n\r\n    console.log(\"****\", message, \"****\");\r\n    console.log(\"Nb Variables\", this.width - 1);\r\n    console.log(\"Nb Constraints\", this.height - 1);\r\n    // console.log(\"Variable Ids\", this.variablesPerIndex);\r\n    console.log(\"Basic Indexes\", this.varIndexByRow);\r\n    console.log(\"Non Basic Indexes\", this.varIndexByCol);\r\n    console.log(\"Rows\", this.rowByVarIndex);\r\n    console.log(\"Cols\", this.colByVarIndex);\r\n\r\n    var digitPrecision = 5;\r\n\r\n    // Variable declaration\r\n    var varNameRowString = \"\",\r\n        spacePerColumn = [\" \"],\r\n        j,\r\n        c,\r\n        r,\r\n        variable,\r\n        varIndex,\r\n        varName,\r\n        varNameLength,\r\n        valueSpace,\r\n        nameSpace;\r\n\r\n    var row,\r\n        rowString;\r\n\r\n    for (c = 1; c < this.width; c += 1) {\r\n        varIndex = this.varIndexByCol[c];\r\n        variable = this.variablesPerIndex[varIndex];\r\n        if (variable === undefined) {\r\n            varName = \"c\" + varIndex;\r\n        } else {\r\n            varName = variable.id;\r\n        }\r\n\r\n        varNameLength = varName.length;\r\n        valueSpace = \" \";\r\n        nameSpace = \"\\t\";\r\n\r\n        ///////////\r\n        /*valueSpace = \" \";\r\n        nameSpace = \" \";\r\n\r\n        for (s = 0; s < nSpaces; s += 1) {\r\n            if (varNameLength > 5) {\r\n                valueSpace += \" \";\r\n            } else {\r\n                nameSpace += \" \";\r\n            }\r\n        }*/\r\n\r\n        ///////////\r\n        if (varNameLength > 5) {\r\n            valueSpace += \" \";\r\n        } else {\r\n            nameSpace += \"\\t\";\r\n        }\r\n\r\n        spacePerColumn[c] = valueSpace;\r\n\r\n        varNameRowString += nameSpace + varName;\r\n    }\r\n    console.log(varNameRowString);\r\n\r\n    var signSpace;\r\n\r\n    // Displaying reduced costs\r\n    var firstRow = this.matrix[this.costRowIndex];\r\n    var firstRowString = \"\\t\";\r\n\r\n    ///////////\r\n    /*for (j = 1; j < this.width; j += 1) {\r\n        signSpace = firstRow[j] < 0 ? \"\" : \" \";\r\n        firstRowString += signSpace;\r\n        firstRowString += spacePerColumn[j];\r\n        firstRowString += firstRow[j].toFixed(2);\r\n    }\r\n    signSpace = firstRow[0] < 0 ? \"\" : \" \";\r\n    firstRowString += signSpace + spacePerColumn[0] +\r\n        firstRow[0].toFixed(2);\r\n    console.log(firstRowString + \" Z\");*/\r\n\r\n    ///////////\r\n    for (j = 1; j < this.width; j += 1) {\r\n        signSpace = \"\\t\";\r\n        firstRowString += signSpace;\r\n        firstRowString += spacePerColumn[j];\r\n        firstRowString += firstRow[j].toFixed(digitPrecision);\r\n    }\r\n    signSpace = \"\\t\";\r\n    firstRowString += signSpace + spacePerColumn[0] +\r\n        firstRow[0].toFixed(digitPrecision);\r\n    console.log(firstRowString + \"\\tZ\");\r\n\r\n\r\n    // Then the basic variable rowByVarIndex\r\n    for (r = 1; r < this.height; r += 1) {\r\n        row = this.matrix[r];\r\n        rowString = \"\\t\";\r\n\r\n        ///////////\r\n        /*for (c = 1; c < this.width; c += 1) {\r\n            signSpace = row[c] < 0 ? \"\" : \" \";\r\n            rowString += signSpace + spacePerColumn[c] + row[c].toFixed(2);\r\n        }\r\n        signSpace = row[0] < 0 ? \"\" : \" \";\r\n        rowString += signSpace + spacePerColumn[0] + row[0].toFixed(2);*/\r\n\r\n        ///////////\r\n        for (c = 1; c < this.width; c += 1) {\r\n            signSpace = \"\\t\";\r\n            rowString += signSpace + spacePerColumn[c] + row[c].toFixed(digitPrecision);\r\n        }\r\n        signSpace = \"\\t\";\r\n        rowString += signSpace + spacePerColumn[0] + row[0].toFixed(digitPrecision);\r\n\r\n\r\n        varIndex = this.varIndexByRow[r];\r\n        variable = this.variablesPerIndex[varIndex];\r\n        if (variable === undefined) {\r\n            varName = \"c\" + varIndex;\r\n        } else {\r\n            varName = variable.id;\r\n        }\r\n        console.log(rowString + \"\\t\" + varName);\r\n    }\r\n    console.log(\"\");\r\n\r\n    // Then reduced costs for optional objectives\r\n    var nOptionalObjectives = this.optionalObjectives.length;\r\n    if (nOptionalObjectives > 0) {\r\n        console.log(\"    Optional objectives:\");\r\n        for (var o = 0; o < nOptionalObjectives; o += 1) {\r\n            var reducedCosts = this.optionalObjectives[o].reducedCosts;\r\n            var reducedCostsString = \"\";\r\n            for (j = 1; j < this.width; j += 1) {\r\n                signSpace = reducedCosts[j] < 0 ? \"\" : \" \";\r\n                reducedCostsString += signSpace;\r\n                reducedCostsString += spacePerColumn[j];\r\n                reducedCostsString += reducedCosts[j].toFixed(digitPrecision);\r\n            }\r\n            signSpace = reducedCosts[0] < 0 ? \"\" : \" \";\r\n            reducedCostsString += signSpace + spacePerColumn[0] +\r\n                reducedCosts[0].toFixed(digitPrecision);\r\n            console.log(reducedCostsString + \" z\" + o);\r\n        }\r\n    }\r\n    console.log(\"Feasible?\", this.feasible);\r\n    console.log(\"evaluation\", this.evaluation);\r\n\r\n    return this;\r\n};\n\n/*global require*/\r\n\r\n\r\nTableau_1.prototype.copy = function () {\r\n    var copy = new Tableau_1(this.precision);\r\n\r\n    copy.width = this.width;\r\n    copy.height = this.height;\r\n\r\n    copy.nVars = this.nVars;\r\n    copy.model = this.model;\r\n\r\n    // Making a shallow copy of integer variable indexes\r\n    // and variable ids\r\n    copy.variables = this.variables;\r\n    copy.variablesPerIndex = this.variablesPerIndex;\r\n    copy.unrestrictedVars = this.unrestrictedVars;\r\n    copy.lastElementIndex = this.lastElementIndex;\r\n\r\n    // All the other arrays are deep copied\r\n    copy.varIndexByRow = this.varIndexByRow.slice();\r\n    copy.varIndexByCol = this.varIndexByCol.slice();\r\n\r\n    copy.rowByVarIndex = this.rowByVarIndex.slice();\r\n    copy.colByVarIndex = this.colByVarIndex.slice();\r\n\r\n    copy.availableIndexes = this.availableIndexes.slice();\r\n\r\n    var optionalObjectivesCopy = [];\r\n    for(var o = 0; o < this.optionalObjectives.length; o++){\r\n        optionalObjectivesCopy[o] = this.optionalObjectives[o].copy();\r\n    }\r\n    copy.optionalObjectives = optionalObjectivesCopy;\r\n\r\n\r\n    var matrix = this.matrix;\r\n    var matrixCopy = new Array(this.height);\r\n    for (var r = 0; r < this.height; r++) {\r\n        matrixCopy[r] = matrix[r].slice();\r\n    }\r\n\r\n    copy.matrix = matrixCopy;\r\n\r\n    return copy;\r\n};\r\n\r\nTableau_1.prototype.save = function () {\r\n    this.savedState = this.copy();\r\n};\r\n\r\nTableau_1.prototype.restore = function () {\r\n    if (this.savedState === null) {\r\n        return;\r\n    }\r\n\r\n    var save = this.savedState;\r\n    var savedMatrix = save.matrix;\r\n    this.nVars = save.nVars;\r\n    this.model = save.model;\r\n\r\n    // Shallow restore\r\n    this.variables = save.variables;\r\n    this.variablesPerIndex = save.variablesPerIndex;\r\n    this.unrestrictedVars = save.unrestrictedVars;\r\n    this.lastElementIndex = save.lastElementIndex;\r\n\r\n    this.width = save.width;\r\n    this.height = save.height;\r\n\r\n    // Restoring matrix\r\n    var r, c;\r\n    for (r = 0; r < this.height; r += 1) {\r\n        var savedRow = savedMatrix[r];\r\n        var row = this.matrix[r];\r\n        for (c = 0; c < this.width; c += 1) {\r\n            row[c] = savedRow[c];\r\n        }\r\n    }\r\n\r\n    // Restoring all the other structures\r\n    var savedBasicIndexes = save.varIndexByRow;\r\n    for (c = 0; c < this.height; c += 1) {\r\n        this.varIndexByRow[c] = savedBasicIndexes[c];\r\n    }\r\n\r\n    while (this.varIndexByRow.length > this.height) {\r\n        this.varIndexByRow.pop();\r\n    }\r\n\r\n    var savedNonBasicIndexes = save.varIndexByCol;\r\n    for (r = 0; r < this.width; r += 1) {\r\n        this.varIndexByCol[r] = savedNonBasicIndexes[r];\r\n    }\r\n\r\n    while (this.varIndexByCol.length > this.width) {\r\n        this.varIndexByCol.pop();\r\n    }\r\n\r\n    var savedRows = save.rowByVarIndex;\r\n    var savedCols = save.colByVarIndex;\r\n    for (var v = 0; v < this.nVars; v += 1) {\r\n        this.rowByVarIndex[v] = savedRows[v];\r\n        this.colByVarIndex[v] = savedCols[v];\r\n    }\r\n\r\n\r\n    if (save.optionalObjectives.length > 0 && this.optionalObjectives.length > 0) {\r\n        this.optionalObjectives = [];\r\n        this.optionalObjectivePerPriority = {};\r\n        for(var o = 0; o < save.optionalObjectives.length; o++){\r\n            var optionalObjectiveCopy = save.optionalObjectives[o].copy();\r\n            this.optionalObjectives[o] = optionalObjectiveCopy;\r\n            this.optionalObjectivePerPriority[optionalObjectiveCopy.priority] = optionalObjectiveCopy;\r\n        }\r\n    }\r\n};\n\n/*global require*/\r\n\r\n\r\nfunction VariableData(index, value) {\r\n    this.index = index;\r\n    this.value = value;\r\n}\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype.getMostFractionalVar = function () {\r\n    var biggestFraction = 0;\r\n    var selectedVarIndex = null;\r\n    var selectedVarValue = null;\r\n\r\n    var integerVariables = this.model.integerVariables;\r\n    var nIntegerVars = integerVariables.length;\r\n    for (var v = 0; v < nIntegerVars; v++) {\r\n        var varIndex = integerVariables[v].index;\r\n        var varRow = this.rowByVarIndex[varIndex];\r\n        if (varRow === -1) {\r\n            continue;\r\n        }\r\n\r\n        var varValue = this.matrix[varRow][this.rhsColumn];\r\n        var fraction = Math.abs(varValue - Math.round(varValue));\r\n        if (biggestFraction < fraction) {\r\n            biggestFraction = fraction;\r\n            selectedVarIndex = varIndex;\r\n            selectedVarValue = varValue;\r\n        }\r\n    }\r\n\r\n    return new VariableData(selectedVarIndex, selectedVarValue);\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype.getFractionalVarWithLowestCost = function () {\r\n    var highestCost = Infinity;\r\n    var selectedVarIndex = null;\r\n    var selectedVarValue = null;\r\n\r\n    var integerVariables = this.model.integerVariables;\r\n    var nIntegerVars = integerVariables.length;\r\n    for (var v = 0; v < nIntegerVars; v++) {\r\n        var variable = integerVariables[v];\r\n        var varIndex = variable.index;\r\n        var varRow = this.rowByVarIndex[varIndex];\r\n        if (varRow === -1) {\r\n            // Variable value is non basic\r\n            // its value is 0\r\n            continue;\r\n        }\r\n\r\n        var varValue = this.matrix[varRow][this.rhsColumn];\r\n        if (Math.abs(varValue - Math.round(varValue)) > this.precision) {\r\n            var cost = variable.cost;\r\n            if (highestCost > cost) {\r\n                highestCost = cost;\r\n                selectedVarIndex = varIndex;\r\n                selectedVarValue = varValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    return new VariableData(selectedVarIndex, selectedVarValue);\r\n};\n\n/*global require*/\r\n\r\n\r\nTableau_1.prototype.countIntegerValues = function(){\r\n    var count = 0;\r\n    for (var r = 1; r < this.height; r += 1) {\r\n        if (this.variablesPerIndex[this.varIndexByRow[r]].isInteger) {\r\n            var decimalPart = this.matrix[r][this.rhsColumn];\r\n            decimalPart = decimalPart - Math.floor(decimalPart);\r\n            if (decimalPart < this.precision && -decimalPart < this.precision) {\r\n                count += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    return count;\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype.isIntegral = function () {\r\n    var integerVariables = this.model.integerVariables;\r\n    var nIntegerVars = integerVariables.length;\r\n    for (var v = 0; v < nIntegerVars; v++) {\r\n        var varRow = this.rowByVarIndex[integerVariables[v].index];\r\n        if (varRow === -1) {\r\n            continue;\r\n        }\r\n\r\n        var varValue = this.matrix[varRow][this.rhsColumn];\r\n        if (Math.abs(varValue - Math.round(varValue)) > this.precision) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\n// Multiply all the fractional parts of variables supposed to be integer\r\nTableau_1.prototype.computeFractionalVolume = function(ignoreIntegerValues) {\r\n    var volume = -1;\r\n    // var integerVariables = this.model.integerVariables;\r\n    // var nIntegerVars = integerVariables.length;\r\n    // for (var v = 0; v < nIntegerVars; v++) {\r\n    //     var r = this.rowByVarIndex[integerVariables[v].index];\r\n    //     if (r === -1) {\r\n    //         continue;\r\n    //     }\r\n    //     var rhs = this.matrix[r][this.rhsColumn];\r\n    //     rhs = Math.abs(rhs);\r\n    //     var decimalPart = Math.min(rhs - Math.floor(rhs), Math.floor(rhs + 1));\r\n    //     if (decimalPart < this.precision) {\r\n    //         if (!ignoreIntegerValues) {\r\n    //             return 0;\r\n    //         }\r\n    //     } else {\r\n    //         if (volume === -1) {\r\n    //             volume = rhs;\r\n    //         } else {\r\n    //             volume *= rhs;\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    for (var r = 1; r < this.height; r += 1) {\r\n        if (this.variablesPerIndex[this.varIndexByRow[r]].isInteger) {\r\n            var rhs = this.matrix[r][this.rhsColumn];\r\n            rhs = Math.abs(rhs);\r\n            var decimalPart = Math.min(rhs - Math.floor(rhs), Math.floor(rhs + 1));\r\n            if (decimalPart < this.precision) {\r\n                if (!ignoreIntegerValues) {\r\n                    return 0;\r\n                }\r\n            } else {\r\n                if (volume === -1) {\r\n                    volume = rhs;\r\n                } else {\r\n                    volume *= rhs;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (volume === -1){\r\n        return 0;\r\n    }\r\n    return volume;\r\n};\n\n/*global require*/\r\n/*global module*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar Tableau$1 = Tableau_1;\n\n/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Cut(type, varIndex, value) {\r\n    this.type = type;\r\n    this.varIndex = varIndex;\r\n    this.value = value;\r\n}\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nfunction Branch(relaxedEvaluation, cuts) {\r\n    this.relaxedEvaluation = relaxedEvaluation;\r\n    this.cuts = cuts;\r\n}\r\n\r\n//-------------------------------------------------------------------\r\n// Branch sorting strategies\r\n//-------------------------------------------------------------------\r\nfunction sortByEvaluation(a, b) {\r\n    return b.relaxedEvaluation - a.relaxedEvaluation;\r\n}\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// Applying cuts on a tableau and resolving\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype.applyCuts = function (branchingCuts){\r\n    // Restoring initial solution\r\n    this.restore();\r\n\r\n    this.addCutConstraints(branchingCuts);\r\n    this.simplex();\r\n    // Adding MIR cuts\r\n    if (this.model.useMIRCuts){\r\n        var fractionalVolumeImproved = true;\r\n        while(fractionalVolumeImproved){\r\n            var fractionalVolumeBefore = this.computeFractionalVolume(true);\r\n            this.applyMIRCuts();\r\n            this.simplex();\r\n\r\n            var fractionalVolumeAfter = this.computeFractionalVolume(true);\r\n\r\n            // If the new fractional volume is bigger than 90% of the previous one\r\n            // we assume there is no improvement from the MIR cuts\r\n            if(fractionalVolumeAfter >= 0.9 * fractionalVolumeBefore){\r\n                fractionalVolumeImproved = false;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n// Function: MILP\r\n// Detail: Main function, my attempt at a mixed integer linear programming\r\n//         solver\r\n//-------------------------------------------------------------------\r\nTableau_1.prototype.branchAndCut = function () {\r\n    var branches = [];\r\n    var iterations = 0;\r\n    var tolerance = this.model.tolerance;\r\n    var toleranceFlag = true;\r\n    var terminalTime = 1e99;\r\n    \r\n    //\r\n    // Set Start Time on model...\r\n    // Let's build out a way to *gracefully* quit\r\n    // after {{time}} milliseconds\r\n    //\r\n    \r\n    // 1.) Check to see if there's a timeout on the model\r\n    //\r\n    if(this.model.timeout){\r\n        // 2.) Hooray! There is!\r\n        //     Calculate the final date\r\n        //\r\n        terminalTime = Date.now() + this.model.timeout;\r\n    }\r\n\r\n    // This is the default result\r\n    // If nothing is both *integral* and *feasible*\r\n    var bestEvaluation = Infinity;\r\n    var bestBranch = null;\r\n    var bestOptionalObjectivesEvaluations = [];\r\n    for (var oInit = 0; oInit < this.optionalObjectives.length; oInit += 1){\r\n        bestOptionalObjectivesEvaluations.push(Infinity);\r\n    }\r\n\r\n    // And here...we...go!\r\n\r\n    // 1.) Load a model into the queue\r\n    var branch = new Branch(-Infinity, []);\r\n    var acceptableThreshold;\r\n    \r\n    branches.push(branch);\r\n    // If all branches have been exhausted terminate the loop\r\n    while (branches.length > 0 && toleranceFlag === true && Date.now() < terminalTime) {\r\n        \r\n        if(this.model.isMinimization){\r\n            acceptableThreshold = this.bestPossibleEval * (1 + tolerance);\r\n        } else {\r\n            acceptableThreshold = this.bestPossibleEval * (1 - tolerance);\r\n        }\r\n        \r\n        // Abort while loop if termination tolerance is both specified and condition is met\r\n        if (tolerance > 0) {\r\n            if (bestEvaluation < acceptableThreshold) {\r\n                toleranceFlag = false;\r\n            }\r\n        }\r\n        \r\n        // Get a model from the queue\r\n        branch = branches.pop();\r\n        if (branch.relaxedEvaluation > bestEvaluation) {\r\n            continue;\r\n        }\r\n\r\n        // Solving from initial relaxed solution\r\n        // with additional cut constraints\r\n\r\n        // Adding cut constraints\r\n        var cuts = branch.cuts;\r\n        this.applyCuts(cuts);\r\n\r\n        iterations++;\r\n        if (this.feasible === false) {\r\n            continue;\r\n        }\r\n\r\n        var evaluation = this.evaluation;\r\n        if (evaluation > bestEvaluation) {\r\n            // This branch does not contain the optimal solution\r\n            continue;\r\n        }\r\n\r\n        // To deal with the optional objectives\r\n        if (evaluation === bestEvaluation){\r\n            var isCurrentEvaluationWorse = true;\r\n            for (var o = 0; o < this.optionalObjectives.length; o += 1){\r\n                if (this.optionalObjectives[o].reducedCosts[0] > bestOptionalObjectivesEvaluations[o]){\r\n                    break;\r\n                } else if (this.optionalObjectives[o].reducedCosts[0] < bestOptionalObjectivesEvaluations[o]) {\r\n                    isCurrentEvaluationWorse = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (isCurrentEvaluationWorse){\r\n                continue;\r\n            }\r\n        }\r\n\r\n        // Is the model both integral and feasible?\r\n        if (this.isIntegral() === true) {\r\n            \r\n            //\r\n            // Store the fact that we are integral\r\n            //\r\n            this.__isIntegral = true;\r\n            \r\n            \r\n            if (iterations === 1) {\r\n                this.branchAndCutIterations = iterations;\r\n                return;\r\n            }\r\n            // Store the solution as the bestSolution\r\n            bestBranch = branch;\r\n            bestEvaluation = evaluation;\r\n            for (var oCopy = 0; oCopy < this.optionalObjectives.length; oCopy += 1){\r\n                bestOptionalObjectivesEvaluations[oCopy] = this.optionalObjectives[oCopy].reducedCosts[0];\r\n            }\r\n        } else {\r\n            if (iterations === 1) {\r\n                // Saving the first iteration\r\n                // TODO: implement a better strategy for saving the tableau?\r\n                this.save();\r\n            }\r\n\r\n            // If the solution is\r\n            //  a. Feasible\r\n            //  b. Better than the current solution\r\n            //  c. but *NOT* integral\r\n\r\n            // So the solution isn't integral? How do we solve this.\r\n            // We create 2 new models, that are mirror images of the prior\r\n            // model, with 1 exception.\r\n\r\n            // Say we're trying to solve some stupid problem requiring you get\r\n            // animals for your daughter's kindergarten petting zoo party\r\n            // and you have to choose how many ducks, goats, and lambs to get.\r\n\r\n            // Say that the optimal solution to this problem if we didn't have\r\n            // to make it integral was {duck: 8, lambs: 3.5}\r\n            //\r\n            // To keep from traumatizing your daughter and the other children\r\n            // you're going to want to have whole animals\r\n\r\n            // What we would do is find the most fractional variable (lambs)\r\n            // and create new models from the old models, but with a new constraint\r\n            // on apples. The constraints on the low model would look like:\r\n            // constraints: {...\r\n            //   lamb: {max: 3}\r\n            //   ...\r\n            // }\r\n            //\r\n            // while the constraints on the high model would look like:\r\n            //\r\n            // constraints: {...\r\n            //   lamb: {min: 4}\r\n            //   ...\r\n            // }\r\n            // If neither of these models is feasible because of this constraint,\r\n            // the model is not integral at this point, and fails.\r\n\r\n            // Find out where we want to split the solution\r\n            var variable = this.getMostFractionalVar();\r\n\r\n            var varIndex = variable.index;\r\n\r\n            var cutsHigh = [];\r\n            var cutsLow = [];\r\n\r\n            var nCuts = cuts.length;\r\n            for (var c = 0; c < nCuts; c += 1) {\r\n                var cut = cuts[c];\r\n                if (cut.varIndex === varIndex) {\r\n                    if (cut.type === \"min\") {\r\n                        cutsLow.push(cut);\r\n                    } else {\r\n                        cutsHigh.push(cut);\r\n                    }\r\n                } else {\r\n                    cutsHigh.push(cut);\r\n                    cutsLow.push(cut);\r\n                }\r\n            }\r\n\r\n            var min = Math.ceil(variable.value);\r\n            var max = Math.floor(variable.value);\r\n\r\n            var cutHigh = new Cut(\"min\", varIndex, min);\r\n            cutsHigh.push(cutHigh);\r\n\r\n            var cutLow = new Cut(\"max\", varIndex, max);\r\n            cutsLow.push(cutLow);\r\n\r\n            branches.push(new Branch(evaluation, cutsHigh));\r\n            branches.push(new Branch(evaluation, cutsLow));\r\n\r\n            // Sorting branches\r\n            // Branches with the most promising lower bounds\r\n            // will be picked first\r\n            branches.sort(sortByEvaluation);\r\n        }\r\n    }\r\n\r\n    // Adding cut constraints for the optimal solution\r\n    if (bestBranch !== null) {\r\n        // The model is feasible\r\n        this.applyCuts(bestBranch.cuts);\r\n    }\r\n    this.branchAndCutIterations = iterations;\r\n};\n\nvar branchAndCut = {\n\n};\n\n/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n\r\n\r\n\r\n\r\nvar Constraint$1 = expressions.Constraint;\r\nvar Equality$1 = expressions.Equality;\r\nvar Variable$1 = expressions.Variable;\r\nvar IntegerVariable$1 = expressions.IntegerVariable;\r\n\r\n/*************************************************************\r\n * Class: Model\r\n * Description: Holds the model of a linear optimisation problem\r\n **************************************************************/\r\nfunction Model(precision, name) {\r\n    this.tableau = new Tableau_1(precision);\r\n\r\n    this.name = name;\r\n\r\n    this.variables = [];\r\n\r\n    this.integerVariables = [];\r\n\r\n    this.unrestrictedVariables = {};\r\n\r\n    this.constraints = [];\r\n\r\n    this.nConstraints = 0;\r\n\r\n    this.nVariables = 0;\r\n\r\n    this.isMinimization = true;\r\n\r\n    this.tableauInitialized = false;\r\n    \r\n    this.relaxationIndex = 1;\r\n\r\n    this.useMIRCuts = false;\r\n\r\n    this.checkForCycles = true;\r\n    \r\n    //\r\n    // Quick and dirty way to leave useful information\r\n    // for the end user without hitting the console\r\n    // or modifying the primary return object...\r\n    //\r\n    this.messages = [];\r\n}\r\nvar Model_1 = Model;\r\n\r\nModel.prototype.minimize = function () {\r\n    this.isMinimization = true;\r\n    return this;\r\n};\r\n\r\nModel.prototype.maximize = function () {\r\n    this.isMinimization = false;\r\n    return this;\r\n};\r\n\r\n// Model.prototype.addConstraint = function (constraint) {\r\n//     // TODO: make sure that the constraint does not belong do another model\r\n//     // and make\r\n//     this.constraints.push(constraint);\r\n//     return this;\r\n// };\r\n\r\nModel.prototype._getNewElementIndex = function () {\r\n    if (this.availableIndexes.length > 0) {\r\n        return this.availableIndexes.pop();\r\n    }\r\n\r\n    var index = this.lastElementIndex;\r\n    this.lastElementIndex += 1;\r\n    return index;\r\n};\r\n\r\nModel.prototype._addConstraint = function (constraint) {\r\n    var slackVariable = constraint.slack;\r\n    this.tableau.variablesPerIndex[slackVariable.index] = slackVariable;\r\n    this.constraints.push(constraint);\r\n    this.nConstraints += 1;\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.addConstraint(constraint);\r\n    }\r\n};\r\n\r\nModel.prototype.smallerThan = function (rhs) {\r\n    var constraint = new Constraint$1(rhs, true, this.tableau.getNewElementIndex(), this);\r\n    this._addConstraint(constraint);\r\n    return constraint;\r\n};\r\n\r\nModel.prototype.greaterThan = function (rhs) {\r\n    var constraint = new Constraint$1(rhs, false, this.tableau.getNewElementIndex(), this);\r\n    this._addConstraint(constraint);\r\n    return constraint;\r\n};\r\n\r\nModel.prototype.equal = function (rhs) {\r\n    var constraintUpper = new Constraint$1(rhs, true, this.tableau.getNewElementIndex(), this);\r\n    this._addConstraint(constraintUpper);\r\n\r\n    var constraintLower = new Constraint$1(rhs, false, this.tableau.getNewElementIndex(), this);\r\n    this._addConstraint(constraintLower);\r\n\r\n    return new Equality$1(constraintUpper, constraintLower);\r\n};\r\n\r\nModel.prototype.addVariable = function (cost, id, isInteger, isUnrestricted, priority) {\r\n    if (typeof priority === \"string\") {\r\n        switch (priority) {\r\n        case \"required\":\r\n            priority = 0;\r\n            break;\r\n        case \"strong\":\r\n            priority = 1;\r\n            break;\r\n        case \"medium\":\r\n            priority = 2;\r\n            break;\r\n        case \"weak\":\r\n            priority = 3;\r\n            break;\r\n        default:\r\n            priority = 0;\r\n            break;\r\n        }\r\n    }\r\n\r\n    var varIndex = this.tableau.getNewElementIndex();\r\n    if (id === null || id === undefined) {\r\n        id = \"v\" + varIndex;\r\n    }\r\n\r\n    if (cost === null || cost === undefined) {\r\n        cost = 0;\r\n    }\r\n\r\n    if (priority === null || priority === undefined) {\r\n        priority = 0;\r\n    }\r\n\r\n    var variable;\r\n    if (isInteger) {\r\n        variable = new IntegerVariable$1(id, cost, varIndex, priority);\r\n        this.integerVariables.push(variable);\r\n    } else {\r\n        variable = new Variable$1(id, cost, varIndex, priority);\r\n    }\r\n\r\n    this.variables.push(variable);\r\n    this.tableau.variablesPerIndex[varIndex] = variable;\r\n\r\n    if (isUnrestricted) {\r\n        this.unrestrictedVariables[varIndex] = true;\r\n    }\r\n\r\n    this.nVariables += 1;\r\n\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.addVariable(variable);\r\n    }\r\n\r\n    return variable;\r\n};\r\n\r\nModel.prototype._removeConstraint = function (constraint) {\r\n    var idx = this.constraints.indexOf(constraint);\r\n    if (idx === -1) {\r\n        console.warn(\"[Model.removeConstraint] Constraint not present in model\");\r\n        return;\r\n    }\r\n\r\n    this.constraints.splice(idx, 1);\r\n    this.nConstraints -= 1;\r\n\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.removeConstraint(constraint);\r\n    }\r\n\r\n    if (constraint.relaxation) {\r\n        this.removeVariable(constraint.relaxation);\r\n    }\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n// For dynamic model modification\r\n//-------------------------------------------------------------------\r\nModel.prototype.removeConstraint = function (constraint) {\r\n    if (constraint.isEquality) {\r\n        this._removeConstraint(constraint.upperBound);\r\n        this._removeConstraint(constraint.lowerBound);\r\n    } else {\r\n        this._removeConstraint(constraint);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nModel.prototype.removeVariable = function (variable) {\r\n    var idx = this.variables.indexOf(variable);\r\n    if (idx === -1) {\r\n        console.warn(\"[Model.removeVariable] Variable not present in model\");\r\n        return;\r\n    }\r\n    this.variables.splice(idx, 1);\r\n\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.removeVariable(variable);\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nModel.prototype.updateRightHandSide = function (constraint, difference) {\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.updateRightHandSide(constraint, difference);\r\n    }\r\n    return this;\r\n};\r\n\r\nModel.prototype.updateConstraintCoefficient = function (constraint, variable, difference) {\r\n    if (this.tableauInitialized === true) {\r\n        this.tableau.updateConstraintCoefficient(constraint, variable, difference);\r\n    }\r\n    return this;\r\n};\r\n\r\n\r\nModel.prototype.setCost = function (cost, variable) {\r\n    var difference = cost - variable.cost;\r\n    if (this.isMinimization === false) {\r\n        difference = -difference;\r\n    }\r\n\r\n    variable.cost = cost;\r\n    this.tableau.updateCost(variable, difference);\r\n    return this;\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nModel.prototype.loadJson = function (jsonModel) {\r\n    this.isMinimization = (jsonModel.opType !== \"max\");\r\n\r\n    var variables = jsonModel.variables;\r\n    var constraints = jsonModel.constraints;\r\n\r\n    var constraintsMin = {};\r\n    var constraintsMax = {};\r\n\r\n    // Instantiating constraints\r\n    var constraintIds = Object.keys(constraints);\r\n    var nConstraintIds = constraintIds.length;\r\n\r\n    for (var c = 0; c < nConstraintIds; c += 1) {\r\n        var constraintId = constraintIds[c];\r\n        var constraint = constraints[constraintId];\r\n        var equal = constraint.equal;\r\n\r\n        var weight = constraint.weight;\r\n        var priority = constraint.priority;\r\n        var relaxed = weight !== undefined || priority !== undefined;\r\n\r\n        var lowerBound, upperBound;\r\n        if (equal === undefined) {\r\n            var min = constraint.min;\r\n            if (min !== undefined) {\r\n                lowerBound = this.greaterThan(min);\r\n                constraintsMin[constraintId] = lowerBound;\r\n                if (relaxed) { lowerBound.relax(weight, priority); }\r\n            }\r\n\r\n            var max = constraint.max;\r\n            if (max !== undefined) {\r\n                upperBound = this.smallerThan(max);\r\n                constraintsMax[constraintId] = upperBound;\r\n                if (relaxed) { upperBound.relax(weight, priority); }\r\n            }\r\n        } else {\r\n            lowerBound = this.greaterThan(equal);\r\n            constraintsMin[constraintId] = lowerBound;\r\n\r\n            upperBound = this.smallerThan(equal);\r\n            constraintsMax[constraintId] = upperBound;\r\n\r\n            var equality = new Equality$1(lowerBound, upperBound);\r\n            if (relaxed) { equality.relax(weight, priority); }\r\n        }\r\n    }\r\n\r\n    var variableIds = Object.keys(variables);\r\n    var nVariables = variableIds.length;\r\n    \r\n    \r\n    \r\n//\r\n//\r\n// *** OPTIONS ***\r\n//\r\n//\r\n\r\n    this.tolerance = jsonModel.tolerance || 0;\r\n    \r\n    if(jsonModel.timeout){\r\n        this.timeout = jsonModel.timeout;\r\n    }\r\n    \r\n    //\r\n    //\r\n    // The model is getting too sloppy with options added to it...\r\n    // mebe it needs an \"options\" option...?\r\n    //\r\n    // YES! IT DOES!\r\n    // DO IT!\r\n    // NOW!\r\n    // HERE!!!\r\n    //\r\n    if(jsonModel.options){\r\n        \r\n        //\r\n        // TIMEOUT\r\n        //\r\n        if(jsonModel.options.timeout){\r\n            this.timeout = jsonModel.options.timeout;\r\n        }\r\n        \r\n        //\r\n        // TOLERANCE\r\n        //\r\n        if(this.tolerance === 0){\r\n            this.tolerance = jsonModel.options.tolerance || 0;\r\n        }\r\n        \r\n        //\r\n        // MIR CUTS - (NOT WORKING)\r\n        //\r\n        if(jsonModel.options.useMIRCuts){\r\n            this.useMIRCuts = jsonModel.options.useMIRCuts;\r\n        }\r\n        \r\n        //\r\n        // CYCLE CHECK...tricky because it defaults to false\r\n        //\r\n        //\r\n        // This should maybe be on by default...\r\n        //\r\n        if(typeof jsonModel.options.exitOnCycles === \"undefined\"){\r\n            this.checkForCycles = true;\r\n        } else {\r\n            this.checkForCycles = jsonModel.options.exitOnCycles;\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    \r\n//\r\n//\r\n// /// OPTIONS \\\\\\\r\n//\r\n//\r\n    \r\n    var integerVarIds = jsonModel.ints || {};\r\n    var binaryVarIds = jsonModel.binaries || {};\r\n    var unrestrictedVarIds = jsonModel.unrestricted || {};\r\n\r\n    // Instantiating variables and constraint terms\r\n    var objectiveName = jsonModel.optimize;\r\n    for (var v = 0; v < nVariables; v += 1) {\r\n        // Creation of the variables\r\n        var variableId = variableIds[v];\r\n        var variableConstraints = variables[variableId];\r\n        var cost = variableConstraints[objectiveName] || 0;\r\n        var isBinary = !!binaryVarIds[variableId];\r\n        var isInteger = !!integerVarIds[variableId] || isBinary;\r\n        var isUnrestricted = !!unrestrictedVarIds[variableId];\r\n        var variable = this.addVariable(cost, variableId, isInteger, isUnrestricted);\r\n\r\n        if (isBinary) {\r\n            // Creating an upperbound constraint for this variable\r\n            this.smallerThan(1).addTerm(1, variable);\r\n        }\r\n\r\n        var constraintNames = Object.keys(variableConstraints);\r\n        for (c = 0; c < constraintNames.length; c += 1) {\r\n            var constraintName = constraintNames[c];\r\n            if (constraintName === objectiveName) {\r\n                continue;\r\n            }\r\n\r\n            var coefficient = variableConstraints[constraintName];\r\n\r\n            var constraintMin = constraintsMin[constraintName];\r\n            if (constraintMin !== undefined) {\r\n                constraintMin.addTerm(coefficient, variable);\r\n            }\r\n\r\n            var constraintMax = constraintsMax[constraintName];\r\n            if (constraintMax !== undefined) {\r\n                constraintMax.addTerm(coefficient, variable);\r\n            }\r\n        }\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\n//-------------------------------------------------------------------\r\n//-------------------------------------------------------------------\r\nModel.prototype.getNumberOfIntegerVariables = function () {\r\n    return this.integerVariables.length;\r\n};\r\n\r\nModel.prototype.solve = function () {\r\n    // Setting tableau if not done\r\n    if (this.tableauInitialized === false) {\r\n        this.tableau.setModel(this);\r\n        this.tableauInitialized = true;\r\n    }\r\n\r\n    return this.tableau.solve();\r\n};\r\n\r\nModel.prototype.isFeasible = function () {\r\n    return this.tableau.feasible;\r\n};\r\n\r\nModel.prototype.save = function () {\r\n    return this.tableau.save();\r\n};\r\n\r\nModel.prototype.restore = function () {\r\n    return this.tableau.restore();\r\n};\r\n\r\nModel.prototype.activateMIRCuts = function (useMIRCuts) {\r\n    this.useMIRCuts = useMIRCuts;\r\n};\r\n\r\nModel.prototype.debug = function (debugCheckForCycles) {\r\n    this.checkForCycles = debugCheckForCycles;\r\n};\r\n\r\nModel.prototype.log = function (message) {\r\n    return this.tableau.log(message);\r\n};\n\n/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n/*global exports*/\r\n\r\n\r\n// All functions in this module that\r\n// get exported to main ***MUST***\r\n// return a functional LPSolve JSON style\r\n// model or throw an error\r\n\r\nvar CleanObjectiveAttributes = function(model){\r\n  // Test to see if the objective attribute\r\n  // is also used by one of the constraints\r\n  //\r\n  // If so...create a new attribute on each\r\n  // variable\r\n    var fakeAttr,\r\n        x, z;\r\n  \r\n    if(typeof model.optimize === \"string\"){\r\n        if(model.constraints[model.optimize]){\r\n            // Create the new attribute\r\n            fakeAttr = Math.random();\r\n\r\n            // Go over each variable and check\r\n            for(x in model.variables){\r\n                // Is it there?\r\n                if(model.variables[x][model.optimize]){\r\n                    model.variables[x][fakeAttr] = model.variables[x][model.optimize];\r\n                }\r\n            }\r\n\r\n        // Now that we've cleaned up the variables\r\n        // we need to clean up the constraints\r\n            model.constraints[fakeAttr] = model.constraints[model.optimize];\r\n            delete model.constraints[model.optimize];\r\n            return model;\r\n        } else {    \r\n            return model;\r\n        }  \r\n    } else {\r\n        // We're assuming its an object?\r\n        for(z in model.optimize){\r\n            if(model.constraints[z]){\r\n            // Make sure that the constraint\r\n            // being optimized isn't constrained\r\n            // by an equity collar\r\n                if(model.constraints[z] === \"equal\"){\r\n                    // Its constrained by an equal sign;\r\n                    // delete that objective and move on\r\n                    delete model.optimize[z];\r\n                \r\n                } else {\r\n                    // Create the new attribute\r\n                    fakeAttr = Math.random();\r\n\r\n                    // Go over each variable and check\r\n                    for(x in model.variables){\r\n                        // Is it there?\r\n                        if(model.variables[x][z]){\r\n                            model.variables[x][fakeAttr] = model.variables[x][z];\r\n                        }\r\n                    }\r\n                // Now that we've cleaned up the variables\r\n                // we need to clean up the constraints\r\n                    model.constraints[fakeAttr] = model.constraints[z];\r\n                    delete model.constraints[z];            \r\n                }\r\n            }    \r\n        }\r\n        return model;\r\n    }\r\n};\n\nvar Validation = {\n\tCleanObjectiveAttributes: CleanObjectiveAttributes\n};\n\n/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n/*jshint -W083 */\r\n\r\n /*************************************************************\r\n * Method: to_JSON\r\n * Scope: Public:\r\n * Agruments: input: Whatever the user gives us\r\n * Purpose: Convert an unfriendly formatted LP\r\n *          into something that our library can\r\n *          work with\r\n **************************************************************/\r\nfunction to_JSON(input){\r\n    var rxo = {\r\n        /* jshint ignore:start */\r\n        \"is_blank\": /^\\W{0,}$/,\r\n        \"is_objective\": /(max|min)(imize){0,}\\:/i,\r\n        \"is_int\": /^(?!\\/\\*)\\W{0,}int/i,\r\n        \"is_bin\": /^(?!\\/\\*)\\W{0,}bin/i,\r\n        \"is_constraint\": /(\\>|\\<){0,}\\=/i,\r\n        \"is_unrestricted\": /^\\S{0,}unrestricted/i,\r\n        \"parse_lhs\":  /(\\-|\\+){0,1}\\s{0,1}\\d{0,}\\.{0,}\\d{0,}\\s{0,}[A-Za-z]\\S{0,}/gi,\r\n        \"parse_rhs\": /(\\-|\\+){0,1}\\d{1,}\\.{0,}\\d{0,}\\W{0,}\\;{0,1}$/i,\r\n        \"parse_dir\": /(\\>|\\<){0,}\\=/gi,\r\n        \"parse_int\": /[^\\s|^\\,]+/gi,\r\n        \"parse_bin\": /[^\\s|^\\,]+/gi,\r\n        \"get_num\": /(\\-|\\+){0,1}(\\W|^)\\d+\\.{0,1}\\d{0,}/g,\r\n        \"get_word\": /[A-Za-z].*/\r\n        /* jshint ignore:end */\r\n    },\r\n    model = {\r\n        \"opType\": \"\",\r\n        \"optimize\": \"_obj\",\r\n        \"constraints\": {},\r\n        \"variables\": {}\r\n    },\r\n    constraints = {\r\n        \">=\": \"min\",\r\n        \"<=\": \"max\",\r\n        \"=\": \"equal\"\r\n    },\r\n    tmp = \"\", ary = null, hldr = \"\", hldr2 = \"\",\r\n    constraint = \"\", rhs = 0;\r\n\r\n    // Handle input if its coming\r\n    // to us as a hard string\r\n    // instead of as an array of\r\n    // strings\r\n    if(typeof input === \"string\"){\r\n        input = input.split(\"\\n\");\r\n    }\r\n\r\n    // Start iterating over the rows\r\n    // to see what all we have\r\n    for(var i = 0; i < input.length; i++){\r\n\r\n        constraint = \"__\" + i;\r\n\r\n        // Get the string we're working with\r\n        tmp = input[i];\r\n\r\n        // Reset the array\r\n        ary = null;\r\n\r\n        // Test to see if we're the objective\r\n        if(rxo.is_objective.test(tmp)){\r\n            // Set up in model the opType\r\n            model.opType = tmp.match(/(max|min)/gi)[0];\r\n\r\n            // Pull apart lhs\r\n            ary = tmp.match(rxo.parse_lhs).map(function(d){\r\n                return d.replace(/\\s+/,\"\");\r\n            }).slice(1);\r\n\r\n\r\n\r\n            // *** STEP 1 *** ///\r\n            // Get the variables out\r\n            ary.forEach(function(d){\r\n\r\n                // Get the number if its there\r\n                hldr = d.match(rxo.get_num);\r\n\r\n                // If it isn't a number, it might\r\n                // be a standalone variable\r\n                if(hldr === null){\r\n                    if(d.substr(0,1) === \"-\"){\r\n                        hldr = -1;\r\n                    } else {\r\n                        hldr = 1;\r\n                    }\r\n                } else {\r\n                    hldr = hldr[0];\r\n                }\r\n\r\n                hldr = parseFloat(hldr);\r\n\r\n                // Get the variable type\r\n                hldr2 = d.match(rxo.get_word)[0].replace(/\\;$/,\"\");\r\n\r\n                // Make sure the variable is in the model\r\n                model.variables[hldr2] = model.variables[hldr2] || {};\r\n                model.variables[hldr2]._obj = hldr;\r\n\r\n            });\r\n        ////////////////////////////////////\r\n        }else if(rxo.is_int.test(tmp)){\r\n            // Get the array of ints\r\n            ary = tmp.match(rxo.parse_int).slice(1);\r\n\r\n            // Since we have an int, our model should too\r\n            model.ints = model.ints || {};\r\n\r\n            ary.forEach(function(d){\r\n                d = d.replace(\";\",\"\");\r\n                model.ints[d] = 1;\r\n            });\r\n        ////////////////////////////////////\r\n        } else if(rxo.is_bin.test(tmp)){\r\n            // Get the array of bins\r\n            ary = tmp.match(rxo.parse_bin).slice(1);\r\n\r\n            // Since we have an binary, our model should too\r\n            model.binaries = model.binaries || {};\r\n\r\n            ary.forEach(function(d){\r\n                d = d.replace(\";\",\"\");\r\n                model.binaries[d] = 1;\r\n            });\r\n        ////////////////////////////////////\r\n        } else if(rxo.is_constraint.test(tmp)){\r\n            var separatorIndex = tmp.indexOf(\":\");\r\n            var constraintExpression = (separatorIndex === -1) ? tmp : tmp.slice(separatorIndex + 1);\r\n\r\n            // Pull apart lhs\r\n            ary = constraintExpression.match(rxo.parse_lhs).map(function(d){\r\n                return d.replace(/\\s+/,\"\");\r\n            });\r\n\r\n            // *** STEP 1 *** ///\r\n            // Get the variables out\r\n            ary.forEach(function(d){\r\n                // Get the number if its there\r\n                hldr = d.match(rxo.get_num);\r\n\r\n                if(hldr === null){\r\n                    if(d.substr(0,1) === \"-\"){\r\n                        hldr = -1;\r\n                    } else {\r\n                        hldr = 1;\r\n                    }\r\n                } else {\r\n                    hldr = hldr[0];\r\n                }\r\n\r\n                hldr = parseFloat(hldr);\r\n\r\n\r\n                // Get the variable name\r\n                hldr2 = d.match(rxo.get_word)[0];\r\n\r\n                // Make sure the variable is in the model\r\n                model.variables[hldr2] = model.variables[hldr2] || {};\r\n                model.variables[hldr2][constraint] = hldr;\r\n\r\n            });\r\n\r\n            // *** STEP 2 *** ///\r\n            // Get the RHS out\r\n            rhs = parseFloat(tmp.match(rxo.parse_rhs)[0]);\r\n\r\n            // *** STEP 3 *** ///\r\n            // Get the Constrainer out\r\n            tmp = constraints[tmp.match(rxo.parse_dir)[0]];\r\n            model.constraints[constraint] = model.constraints[constraint] || {};\r\n            model.constraints[constraint][tmp] = rhs;\r\n        ////////////////////////////////////\r\n        } else if(rxo.is_unrestricted.test(tmp)){\r\n            // Get the array of unrestricted\r\n            ary = tmp.match(rxo.parse_int).slice(1);\r\n\r\n            // Since we have an int, our model should too\r\n            model.unrestricted = model.unrestricted || {};\r\n\r\n            ary.forEach(function(d){\r\n                d = d.replace(\";\",\"\");\r\n                model.unrestricted[d] = 1;\r\n            });\r\n        }\r\n    }\r\n    return model;\r\n}\r\n\r\n\r\n /*************************************************************\r\n * Method: from_JSON\r\n * Scope: Public:\r\n * Agruments: model: The model we want solver to operate on\r\n * Purpose: Convert a friendly JSON model into a model for a\r\n *          real solving library...in this case\r\n *          lp_solver\r\n **************************************************************/\r\nfunction from_JSON(model){\r\n    // Make sure we at least have a model\r\n    if (!model) {\r\n        throw new Error(\"Solver requires a model to operate on\");\r\n    }\r\n\r\n    var output = \"\",\r\n        lookup = {\r\n            \"max\": \"<=\",\r\n            \"min\": \">=\",\r\n            \"equal\": \"=\"\r\n        },\r\n        rxClean = new RegExp(\"[^A-Za-z0-9_\\[\\{\\}\\/\\.\\&\\#\\$\\%\\~\\'\\@\\^]\", \"gi\");\r\n\r\n    // Build the objective statement\r\n    \r\n    if(model.opType){\r\n        \r\n        output += model.opType + \":\";\r\n\r\n        // Iterate over the variables\r\n        for(var x in model.variables){\r\n            // Give each variable a self of 1 unless\r\n            // it exists already\r\n            model.variables[x][x] = model.variables[x][x] ? model.variables[x][x] : 1;\r\n\r\n            // Does our objective exist here?\r\n            if(model.variables[x][model.optimize]){\r\n                output += \" \" + model.variables[x][model.optimize] + \" \" + x.replace(rxClean,\"_\");\r\n            }\r\n        }\r\n    } else {\r\n        output += \"max:\";\r\n    }\r\n    \r\n\r\n\r\n    // Add some closure to our line thing\r\n    output += \";\\n\\n\";\r\n\r\n    // And now... to iterate over the constraints\r\n    for(var xx in model.constraints){\r\n        for(var y in model.constraints[xx]){\r\n            if(typeof lookup[y] !== \"undefined\"){\r\n                \r\n                for(var z in model.variables){\r\n\r\n                    // Does our Constraint exist here?\r\n                    if(typeof model.variables[z][xx] !== \"undefined\"){\r\n                        output += \" \" + model.variables[z][xx] + \" \" + z.replace(rxClean,\"_\");\r\n                    }\r\n                }\r\n                // Add the constraint type and value...\r\n\r\n                output += \" \" + lookup[y] + \" \" + model.constraints[xx][y];\r\n                output += \";\\n\";\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    // Are there any ints?\r\n    if(model.ints){\r\n        output += \"\\n\\n\";\r\n        for(var xxx in model.ints){\r\n            output += \"int \" + xxx.replace(rxClean,\"_\") + \";\\n\";\r\n        }\r\n    }\r\n\r\n    // Are there any unrestricted?\r\n    if(model.unrestricted){\r\n        output += \"\\n\\n\";\r\n        for(var xxxx in model.unrestricted){\r\n            output += \"unrestricted \" + xxxx.replace(rxClean,\"_\") + \";\\n\";\r\n        }\r\n    }\r\n\r\n    // And kick the string back\r\n    return output;\r\n\r\n}\r\n\r\n\r\nvar Reformat = function (model) {\r\n    // If the user is giving us an array\r\n    // or a string, convert it to a JSON Model\r\n    // otherwise, spit it out as a string\r\n    if(model.length){\r\n        return to_JSON(model);\r\n    } else {\r\n        return from_JSON(model);\r\n    }\r\n};\n\nvar empty = {};\n\nvar empty$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  'default': empty\n});\n\nfunction getAugmentedNamespace(n) {\n\tif (n.__esModule) return n;\n\tvar a = Object.defineProperty({}, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nvar require$$2 = /*@__PURE__*/getAugmentedNamespace(empty$1);\n\n/*global describe*/\r\n/*global require*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n/*global exports*/\r\n/*global Promise*/\r\n\r\n\r\n// LP SOLVE CLI REFERENCE:\r\n// http://lpsolve.sourceforge.net/5.5/lp_solve.htm\r\n//\r\n//\r\n\r\n// var reformat = require(\"./Reformat.js\");\r\n\r\nvar reformat = Reformat;\r\n\r\nfunction clean_data(data){\r\n\r\n    //\r\n    // Clean Up\r\n    // And Reformatting...\r\n    //\r\n    data = data.replace(\"\\\\r\\\\n\",\"\\r\\n\");\r\n\r\n\r\n    data = data.split(\"\\r\\n\");\r\n    data = data.filter(function(x){\r\n        \r\n        var rx;\r\n        \r\n        //\r\n        // Test 1\r\n        rx = new RegExp(\" 0$\",\"gi\");\r\n        if(rx.test(x) === true){\r\n            return false;\r\n        }\r\n\r\n        //\r\n        // Test 2\r\n        rx = new RegExp(\"\\\\d$\",\"gi\");\r\n        if(rx.test(x) === false){\r\n            return false;\r\n        }\r\n        \r\n\r\n        return true;\r\n    })\r\n    .map(function(x){\r\n        return x.split(/\\:{0,1} +(?=\\d)/);\r\n    })\r\n    .reduce(function(o,k,i){\r\n        o[k[0]] = k[1];\r\n        return o;\r\n    },{});\r\n    \r\n    return data;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nvar solve$1 = function(model){\r\n    //\r\n    return new Promise(function(res, rej){\r\n        //\r\n        // Exit if we're in the browser...\r\n        //\r\n        if(typeof window !== \"undefined\"){\r\n            rej(\"Function Not Available in Browser\");\r\n        }\r\n        //\r\n        // Convert JSON model to lp_solve format\r\n        //\r\n        var data = Reformat(model);\r\n        \r\n        \r\n        if(!model.external){\r\n            rej(\"Data for this function must be contained in the 'external' attribute. Not seeing anything there.\");\r\n        }\r\n        \r\n        // \r\n        // In the args, they *SHALL* have provided an executable\r\n        // path to the solver they're piping the data into\r\n        //\r\n        if(!model.external.binPath){\r\n            rej(\"No Executable | Binary path provided in arguments as 'binPath'\");\r\n        }\r\n        \r\n        //\r\n        // They also need to provide an arg_array\r\n        //\r\n        if(!model.external.args){\r\n            rej(\"No arguments array for cli | bash provided on 'args' attribute\");\r\n        }\r\n        \r\n        //\r\n        // They also need a tempName so we know where to store\r\n        // the temp file we're creating...\r\n        //\r\n        if(!model.external.tempName){\r\n            rej(\"No 'tempName' given. This is necessary to produce a staging file for the solver to operate on\");\r\n        }\r\n        \r\n        \r\n        \r\n        //\r\n        // To my knowledge, in Windows, you cannot directly pipe text into\r\n        // an exe...\r\n        //\r\n        // Thus, our process looks like this...\r\n        //\r\n        // 1.) Convert a model to something an external solver can use\r\n        // 2.) Save the results from step 1 as a temp-text file\r\n        // 3.) Pump the results into an exe | whatever-linux-uses\r\n        // 4.) \r\n        // \r\n        //\r\n        \r\n        var fs = require$$2;\r\n        \r\n        fs.writeFile(model.external.tempName, data, function(fe, fd){\r\n            if(fe){\r\n                rej(fe);\r\n            } else {\r\n                //\r\n                // So it looks like we wrote to a file and closed it.\r\n                // Neat.\r\n                //\r\n                // Now we need to execute our CLI...\r\n                var exec = require$$2.execFile;\r\n                \r\n                //\r\n                // Put the temp file name in the args array...\r\n                //\r\n                model.external.args.push(model.external.tempName);\r\n                \r\n                exec(model.external.binPath, model.external.args, function(e,data){\r\n                    if(e){\r\n                        \r\n                        if(e.code === 1){\r\n                            res(clean_data(data));\r\n                        } else {\r\n                            \r\n                            var codes = {\r\n                                \"-2\": \"Out of Memory\",\r\n                                \"1\": \"SUBOPTIMAL\",\r\n                                \"2\": \"INFEASIBLE\",\r\n                                \"3\": \"UNBOUNDED\",\r\n                                \"4\": \"DEGENERATE\",\r\n                                \"5\": \"NUMFAILURE\",\r\n                                \"6\": \"USER-ABORT\",\r\n                                \"7\": \"TIMEOUT\",\r\n                                \"9\": \"PRESOLVED\",\r\n                                \"25\": \"ACCURACY ERROR\",\r\n                                \"255\": \"FILE-ERROR\"\r\n                            };\r\n                            \r\n                            var ret_obj = {\r\n                                \"code\": e.code,\r\n                                \"meaning\": codes[e.code],\r\n                                \"data\": data\r\n                            };\r\n                            \r\n                            rej(ret_obj);\r\n                        }\r\n\r\n                    } else {\r\n                        // And finally...return it.\r\n                        res(clean_data(data));\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nmodel.external = {\r\n    \"binPath\": \"C:/lpsolve/lp_solve.exe\",\r\n    \"tempName\": \"C:/temp/out.txt\",\r\n    \"args\": [\r\n        \"-S2\"\r\n    ]\r\n    \r\n}\r\n\r\n*/\n\nvar main = {\n\treformat: reformat,\n\tsolve: solve$1\n};\n\n/*global describe*/\r\n/*global require*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n/*global exports*/\r\n/*global Promise*/\r\n/*global module*/\r\n\r\nvar main$1 = {\r\n    \"lpsolve\": main\r\n};\n\n/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n\r\n    /***************************************************************\r\n     * Method: polyopt\r\n     * Scope: private\r\n     * Agruments:\r\n     *        model: The model we want solver to operate on.\r\n                     Because we're in here, we're assuming that\r\n                     we're solving a multi-objective optimization\r\n                     problem. Poly-Optimization. polyopt.\r\n\r\n                     This model has to be formed a little differently\r\n                     because it has multiple objective functions.\r\n                     Normally, a model has 2 attributes: opType (string,\r\n                     \"max\" or \"min\"), and optimize (string, whatever\r\n                     attribute we're optimizing.\r\n\r\n                     Now, there is no opType attribute on the model,\r\n                     and optimize is an object of attributes to be\r\n                     optimized, and how they're to be optimized.\r\n                     For example:\r\n\r\n                     ...\r\n                     \"optimize\": {\r\n                        \"pancakes\": \"max\",\r\n                        \"cost\": \"minimize\"\r\n                     }\r\n                     ...\r\n\r\n\r\n     **************************************************************/\r\n\r\nvar Polyopt = function(solver, model){\r\n\r\n    // I have no idea if this is actually works, or what,\r\n    // but here is my algorithm to solve linear programs\r\n    // with multiple objective functions\r\n\r\n    // 1. Optimize for each constraint\r\n    // 2. The results for each solution is a vector\r\n    //    representing a vertex on the polytope we're creating\r\n    // 3. The results for all solutions describes the shape\r\n    //    of the polytope (would be nice to have the equation\r\n    //    representing this)\r\n    // 4. Find the mid-point between all vertices by doing the\r\n    //    following (a_1 + a_2 ... a_n) / n;\r\n    var objectives = model.optimize,\r\n        new_constraints = JSON.parse(JSON.stringify(model.optimize)),\r\n        keys = Object.keys(model.optimize),\r\n        tmp,\r\n        counter = 0,\r\n        vectors = {},\r\n        vector_key = \"\",\r\n        obj = {},\r\n        pareto = [],\r\n        i,j,x,y;\r\n\r\n    // Delete the optimize object from the model\r\n    delete model.optimize;\r\n\r\n    // Iterate and Clear\r\n    for(i = 0; i < keys.length; i++){\r\n        // Clean up the new_constraints\r\n        new_constraints[keys[i]] = 0;\r\n    }\r\n\r\n    // Solve and add\r\n    for(i = 0; i < keys.length; i++){\r\n\r\n        // Prep the model\r\n        model.optimize = keys[i];\r\n        model.opType = objectives[keys[i]];\r\n\r\n        // solve the model\r\n        tmp = solver.Solve(model, undefined, undefined, true);\r\n\r\n        // Only the variables make it into the solution;\r\n        // not the attributes.\r\n        //\r\n        // Because of this, we have to add the attributes\r\n        // back onto the solution so we can do math with\r\n        // them later...\r\n\r\n        // Loop over the keys\r\n        for(y in keys){\r\n            // We're only worried about attributes, not variables\r\n            if(!model.variables[keys[y]]){\r\n                // Create space for the attribute in the tmp object\r\n                tmp[keys[y]] = tmp[keys[y]] ? tmp[keys[y]] : 0;\r\n                // Go over each of the variables\r\n                for(x in model.variables){\r\n                    // Does the variable exist in tmp *and* does attribute exist in this model?\r\n                    if(model.variables[x][keys[y]] && tmp[x]){\r\n                        // Add it to tmp\r\n                        tmp[keys[y]] += tmp[x] * model.variables[x][keys[y]];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // clear our key\r\n        vector_key = \"base\";\r\n        // this makes sure that if we get\r\n        // the same vector more than once,\r\n        // we only count it once when finding\r\n        // the midpoint\r\n        for(j = 0; j < keys.length; j++){\r\n            if(tmp[keys[j]]){\r\n                vector_key += \"-\" + ((tmp[keys[j]] * 1000) | 0) / 1000;\r\n            } else {\r\n                vector_key += \"-0\";\r\n            }\r\n        }\r\n\r\n        // Check here to ensure it doesn't exist\r\n        if(!vectors[vector_key]){\r\n            // Add the vector-key in\r\n            vectors[vector_key] = 1;\r\n            counter++;\r\n            \r\n            // Iterate over the keys\r\n            // and update our new constraints\r\n            for(j = 0; j < keys.length; j++){\r\n                if(tmp[keys[j]]){\r\n                    new_constraints[keys[j]] += tmp[keys[j]];\r\n                }\r\n            }\r\n            \r\n            // Push the solution into the paretos\r\n            // array after cleaning it of some\r\n            // excess data markers\r\n            \r\n            delete tmp.feasible;\r\n            delete tmp.result;            \r\n            pareto.push(tmp);\r\n        }\r\n    }\r\n\r\n    // Trying to find the mid-point\r\n    // divide each constraint by the\r\n    // number of constraints\r\n    // *midpoint formula*\r\n    // (x1 + x2 + x3) / 3\r\n    for(i = 0; i < keys.length; i++){\r\n        model.constraints[keys[i]] = {\"equal\": new_constraints[keys[i]] / counter};\r\n    }\r\n\r\n    // Give the model a fake thing to optimize on\r\n    model.optimize = \"cheater-\" + Math.random();\r\n    model.opType = \"max\";\r\n\r\n    // And add the fake attribute to the variables\r\n    // in the model\r\n    for(i in model.variables){\r\n        model.variables[i].cheater = 1;\r\n    }\r\n    \r\n    // Build out the object with all attributes\r\n    for(i in pareto){\r\n        for(x in pareto[i]){\r\n            obj[x] = obj[x] || {min: 1e99, max: -1e99};\r\n        }\r\n    }\r\n    \r\n    // Give each pareto a full attribute list\r\n    // while getting the max and min values\r\n    // for each attribute\r\n    for(i in obj){\r\n        for(x in pareto){\r\n            if(pareto[x][i]){\r\n                if(pareto[x][i] > obj[i].max){\r\n                    obj[i].max = pareto[x][i];\r\n                } \r\n                if(pareto[x][i] < obj[i].min){\r\n                    obj[i].min = pareto[x][i];\r\n                }\r\n            } else {\r\n                pareto[x][i] = 0;\r\n                obj[i].min = 0;\r\n            }\r\n        }\r\n    }\r\n    // Solve the model for the midpoints\r\n    tmp =  solver.Solve(model, undefined, undefined, true);\r\n    \r\n    return {\r\n        midpoint: tmp,\r\n        vertices: pareto,\r\n        ranges: obj\r\n    };    \r\n\r\n};\n\n/*global describe*/\r\n/*global require*/\r\n/*global module*/\r\n/*global it*/\r\n/*global console*/\r\n/*global process*/\r\n/*global setTimeout*/\r\n/*global self*/\r\n\r\n\r\n//-------------------------------------------------------------------\r\n// SimplexJS\r\n// https://github.com/\r\n// An Object-Oriented Linear Programming Solver\r\n//\r\n// By Justin Wolcott (c)\r\n// Licensed under the MIT License.\r\n//-------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar Constraint$2 = expressions.Constraint;\r\nvar Variable$2 = expressions.Variable;\r\nvar Numeral = expressions.Numeral;\r\nvar Term$1 = expressions.Term;\r\n\r\n\r\n// Place everything under the Solver Name Space\r\nvar Solver = function () {\r\n\r\n    this.Model = Model_1;\r\n    this.branchAndCut = branchAndCut;\r\n    this.Constraint = Constraint$2;\r\n    this.Variable = Variable$2;\r\n    this.Numeral = Numeral;\r\n    this.Term = Term$1;\r\n    this.Tableau = Tableau$1;\r\n    this.lastSolvedModel = null;\r\n\r\n    this.External = main$1;\r\n\r\n    /*************************************************************\r\n     * Method: Solve\r\n     * Scope: Public:\r\n     * Agruments:\r\n     *        model: The model we want solver to operate on\r\n     *        precision: If we're solving a MILP, how tight\r\n     *                   do we want to define an integer, given\r\n     *                   that 20.000000000000001 is not an integer.\r\n     *                   (defaults to 1e-9)\r\n     *            full: *get better description*\r\n     *        validate: if left blank, it will get ignored; otherwise\r\n     *                  it will run the model through all validation\r\n     *                  functions in the *Validate* module\r\n     **************************************************************/\r\n    this.Solve = function (model, precision, full, validate) {\r\n        //\r\n        // Run our validations on the model\r\n        // if the model doesn't have a validate\r\n        // attribute set to false\r\n        //\r\n        if(validate){\r\n            for(var test in Validation){\r\n                model = Validation[test](model);\r\n            }\r\n        }\r\n\r\n        // Make sure we at least have a model\r\n        if (!model) {\r\n            throw new Error(\"Solver requires a model to operate on\");\r\n        }\r\n\r\n        //\r\n        // If the objective function contains multiple objectives,\r\n        // pass it to the multi-solver thing...\r\n        //\r\n        if(typeof model.optimize === \"object\"){\r\n            if(Object.keys(model.optimize > 1)){\r\n                return Polyopt(this, model);\r\n            }\r\n        }\r\n\r\n// /////////////////////////////////////////////////////////////////////\r\n// *********************************************************************\r\n// START\r\n// Try our hand at handling external solvers...\r\n// START\r\n// *********************************************************************\r\n// /////////////////////////////////////////////////////////////////////\r\n        if(model.external){\r\n\r\n            var solvers = Object.keys(main$1);\r\n            solvers = JSON.stringify(solvers);\r\n            \r\n            //\r\n            // The model needs to have a \"solver\" attribute if nothing else\r\n            // for us to pass data into\r\n            //\r\n            if(!model.external.solver){\r\n                throw new Error(\"The model you provided has an 'external' object that doesn't have a solver attribute. Use one of the following:\" + solvers);\r\n            }\r\n            \r\n            //\r\n            // If the solver they request doesn't exist; provide them\r\n            // with a list of possible options:\r\n            //\r\n            if(!main$1[model.external.solver]){\r\n                throw new Error(\"No support (yet) for \" + model.external.solver + \". Please use one of these instead:\" + solvers);\r\n            }\r\n            \r\n            return main$1[model.external.solver].solve(model);\r\n            \r\n\r\n// /////////////////////////////////////////////////////////////////////\r\n// *********************************************************************\r\n//  END\r\n// Try our hand at handling external solvers...\r\n//  END\r\n// *********************************************************************\r\n// /////////////////////////////////////////////////////////////////////\r\n\r\n        } else {\r\n\r\n            if (model instanceof Model_1 === false) {\r\n                model = new Model_1(precision).loadJson(model);\r\n            }\r\n\r\n            var solution = model.solve();\r\n            this.lastSolvedModel = model;\r\n            solution.solutionSet = solution.generateSolutionSet();\r\n\r\n            // If the user asks for a full breakdown\r\n            // of the tableau (e.g. full === true)\r\n            // this will return it\r\n            if (full) {\r\n                return solution;\r\n            } else {\r\n                // Otherwise; give the user the bare\r\n                // minimum of info necessary to carry on\r\n\r\n                var store = {};\r\n\r\n                // 1.) Add in feasibility to store;\r\n                store.feasible = solution.feasible;\r\n\r\n                // 2.) Add in the objective value\r\n                store.result = solution.evaluation;\r\n\r\n                store.bounded = solution.bounded;\r\n                \r\n                if(solution._tableau.__isIntegral){\r\n                    store.isIntegral = true;\r\n                }\r\n\r\n                // 3.) Load all of the variable values\r\n                Object.keys(solution.solutionSet)\r\n                    .forEach(function (d) {\r\n                        //\r\n                        // When returning data in standard format,\r\n                        // Remove all 0's\r\n                        //\r\n                        if(solution.solutionSet[d] !== 0){\r\n                            store[d] = solution.solutionSet[d];\r\n                        }\r\n                        \r\n                    });\r\n\r\n                return store;\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n    /*************************************************************\r\n     * Method: ReformatLP\r\n     * Scope: Public:\r\n     * Agruments: model: The model we want solver to operate on\r\n     * Purpose: Convert a friendly JSON model into a model for a\r\n     *          real solving library...in this case\r\n     *          lp_solver\r\n     **************************************************************/\r\n    this.ReformatLP = Reformat;\r\n\r\n\r\n     /*************************************************************\r\n     * Method: MultiObjective\r\n     * Scope: Public:\r\n     * Agruments:\r\n     *        model: The model we want solver to operate on\r\n     *        detail: if false, or undefined; it will return the\r\n     *                result of using the mid-point formula; otherwise\r\n     *                it will return an object containing:\r\n     *\r\n     *                1. The results from the mid point formula\r\n     *                2. The solution for each objective solved\r\n     *                   in isolation (pareto)\r\n     *                3. The min and max of each variable along\r\n     *                   the frontier of the polytope (ranges)\r\n     * Purpose: Solve a model with multiple objective functions.\r\n     *          Since a potential infinite number of solutions exist\r\n     *          this naively returns the mid-point between\r\n     *\r\n     * Note: The model has to be changed a little to work with this.\r\n     *       Before an *opType* was required. No more. The objective\r\n     *       attribute of the model is now an object instead of a\r\n     *       string.\r\n     *\r\n     *  *EXAMPLE MODEL*\r\n     *\r\n     *   model = {\r\n     *       optimize: {scotch: \"max\", soda: \"max\"},\r\n     *       constraints: {fluid: {equal: 100}},\r\n     *       variables: {\r\n     *           scotch: {fluid: 1, scotch: 1},\r\n     *           soda: {fluid: 1, soda: 1}\r\n     *       }\r\n     *   }\r\n     *\r\n     **************************************************************/\r\n    this.MultiObjective = function(model){\r\n        return Polyopt(this, model);\r\n    };\r\n};\r\n\r\n// var define = define || undefined;\r\n// var window = window || undefined;\r\n\r\n// If the project is loading through require.js, use `define` and exit\r\nif (typeof window === \"object\"){\r\n    window.solver = new Solver();\r\n} else if (typeof self === \"object\"){\r\n    self.solver = new Solver();\r\n}\r\n// Ensure that its available in node.js env\r\nvar main$2 = new Solver();\n\n/**\r\n * Assigns every node a layer with the goal of minimizing the number of dummy\r\n * nodes (long edges) inserted. Computing this layering requires solving an\r\n * integer linear program, which may take a long time, although in practice is\r\n * often quite fast. This is often known as the network simplex layering from\r\n * [Gansner et al. [1993]](https://www.graphviz.org/Documentation/TSE93.pdf).\r\n *\r\n * Create a new [[SimplexOperator]] with [[simplex]].\r\n *\r\n * <img alt=\"simplex example\" src=\"media://simplex.png\" width=\"400\">\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal */\r\nfunction buildOperator$4(ranker, debugVal) {\r\n    // use null prefixes to prevent clash\r\n    const prefix = debugVal ? \"\" : \"\\0\";\r\n    const rankPrefix = debugVal ? \"rank: \" : \"\\0\";\r\n    const delim = debugVal ? \" -> \" : \"\\0\";\r\n    /** node id */\r\n    function n(node) {\r\n        return `${prefix}${node.id}`;\r\n    }\r\n    /** link id */\r\n    function l(link) {\r\n        return `${link.source.id}${delim}${link.target.id}`;\r\n    }\r\n    /** rank constraint */\r\n    function r(low, high) {\r\n        return `${rankPrefix}${low.id}${delim}${high.id}`;\r\n    }\r\n    function simplexCall(dag) {\r\n        const variables = Object.create(null);\r\n        const ints = Object.create(null);\r\n        const constraints = Object.create(null);\r\n        const ranks = [];\r\n        // Add node variables and fetch ranks\r\n        for (const node of dag) {\r\n            const nid = n(node);\r\n            ints[nid] = 1;\r\n            variables[nid] = {\r\n                opt: node.children.length\r\n            };\r\n            const rank = ranker(node);\r\n            if (rank !== undefined) {\r\n                ranks.push([rank, node]);\r\n            }\r\n        }\r\n        // Add link constraints\r\n        for (const link of dag.ilinks()) {\r\n            const source = variables[n(link.source)];\r\n            const target = variables[n(link.target)];\r\n            const edge = l(link);\r\n            constraints[edge] = { min: 1 };\r\n            source[edge] = -1;\r\n            source.opt++;\r\n            target[edge] = 1;\r\n            target.opt--;\r\n        }\r\n        // Add rank constraints\r\n        let [first, ...rest] = ranks.sort(([a], [b]) => a - b);\r\n        for (const second of rest) {\r\n            const [frank, fnode] = first;\r\n            const [srank, snode] = second;\r\n            const low = variables[n(fnode)];\r\n            const high = variables[n(snode)];\r\n            const cons = r(fnode, snode);\r\n            if (frank < srank) {\r\n                // inequality constraint\r\n                constraints[cons] = { min: 1 };\r\n                low[cons] = -1;\r\n                high[cons] = 1;\r\n            }\r\n            else {\r\n                // equality constraint\r\n                const rcons = r(snode, fnode);\r\n                constraints[cons] = { min: 0 };\r\n                constraints[rcons] = { min: 0 };\r\n                low[cons] = -1;\r\n                low[rcons] = 1;\r\n                high[cons] = 1;\r\n                high[rcons] = -1;\r\n            }\r\n            first = second;\r\n        }\r\n        const _a = main$2.Solve({\r\n            optimize: \"opt\",\r\n            opType: \"max\",\r\n            constraints: constraints,\r\n            variables: variables,\r\n            ints: ints\r\n        }), { feasible } = _a, assignment = __rest(_a, [\"feasible\"]);\r\n        if (!feasible) {\r\n            /* istanbul ignore else */\r\n            if (ranks.length) {\r\n                throw new Error(\"could not find a feasbile simplex layout, check that rank accessors are not ill-defined\");\r\n            }\r\n            else {\r\n                throw new Error(\"could not find feasbile simplex layout, this should not happen\");\r\n            }\r\n        }\r\n        // lp solver doesn't assign some zeros\r\n        for (const node of dag) {\r\n            node.layer = assignment[n(node)] || 0;\r\n        }\r\n    }\r\n    function rank(newRank) {\r\n        if (newRank === undefined) {\r\n            return ranker;\r\n        }\r\n        else {\r\n            return buildOperator$4(newRank, debugVal);\r\n        }\r\n    }\r\n    simplexCall.rank = rank;\r\n    function debug(val) {\r\n        if (val === undefined) {\r\n            return debugVal;\r\n        }\r\n        else {\r\n            return buildOperator$4(ranker, val);\r\n        }\r\n    }\r\n    simplexCall.debug = debug;\r\n    return simplexCall;\r\n}\r\n/** @internal */\r\nfunction defaultRank() {\r\n    return undefined;\r\n}\r\n/** Create a default [[SimplexOperator]]. */\r\nfunction simplex(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to simplex(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$4(defaultRank, false);\r\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nfunction* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n\nfunction max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n\nfunction min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n\n// Based on https://github.com/mourner/quickselect\n// ISC license, Copyright 2018 Vladimir Agafonkin.\nfunction quickselect(array, k, left = 0, right = array.length - 1, compare = ascending) {\n  while (right > left) {\n    if (right - left > 600) {\n      const n = right - left + 1;\n      const m = k - left + 1;\n      const z = Math.log(n);\n      const s = 0.5 * Math.exp(2 * z / 3);\n      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n      quickselect(array, k, newLeft, newRight, compare);\n    }\n\n    const t = array[k];\n    let i = left;\n    let j = right;\n\n    swap(array, left, k);\n    if (compare(array[right], t) > 0) swap(array, left, right);\n\n    while (i < j) {\n      swap(array, i, j), ++i, --j;\n      while (compare(array[i], t) < 0) ++i;\n      while (compare(array[j], t) > 0) --j;\n    }\n\n    if (compare(array[left], t) === 0) swap(array, left, j);\n    else ++j, swap(array, j, right);\n\n    if (j <= k) left = j + 1;\n    if (k <= j) right = j - 1;\n  }\n  return array;\n}\n\nfunction swap(array, i, j) {\n  const t = array[i];\n  array[i] = array[j];\n  array[j] = t;\n}\n\nfunction quantile(values, p, valueof) {\n  values = Float64Array.from(numbers(values, valueof));\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return min(values);\n  if (p >= 1) return max(values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = max(quickselect(values, i0).subarray(0, i0 + 1)),\n      value1 = min(values.subarray(i0 + 1));\n  return value0 + (value1 - value0) * (i - i0);\n}\n\nfunction arrayMedian(values, valueof) {\n  return quantile(values, 0.5, valueof);\n}\n\n/** Create a median two layer ordering operator. */\r\nfunction median(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to median(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    function medianCall(topLayer, bottomLayer) {\r\n        const positions = new SafeMap();\r\n        for (const [i, node] of topLayer.entries()) {\r\n            for (const child of node.ichildren()) {\r\n                positions.setIfAbsent(child.id, []).push(i);\r\n            }\r\n        }\r\n        const medians = new SafeMap();\r\n        let otherwise = -1;\r\n        for (const node of bottomLayer) {\r\n            const med = arrayMedian(positions.getDefault(node.id, []));\r\n            if (med === undefined) {\r\n                medians.set(node.id, otherwise);\r\n                otherwise =\r\n                    +!((otherwise + 1) / (topLayer.length + 1)) * (topLayer.length + 1) -\r\n                        1;\r\n            }\r\n            else {\r\n                medians.set(node.id, med);\r\n            }\r\n        }\r\n        bottomLayer.sort((a, b) => medians.getThrow(a.id) - medians.getThrow(b.id));\r\n    }\r\n    return medianCall;\r\n}\n\n/**\r\n * Create a decrossing operator that minimizes the number of decrossings\r\n * heuristically by looking at each pair of layers. This method is very fast and very general and pften produces good results. It is also highly customizable, and can be parametrized by any [[\"sugiyama/twolayer/index\" | two layer operator]].\r\n *\r\n * Create a new [[TwoLayerOperator]] with [[twoLayer]].\r\n *\r\n * <img alt=\"two layer example\" src=\"media://two_layer_greedy.png\" width=\"400\">\r\n *\r\n * @packageDocumentation\r\n */\r\n// TODO Add number of passes, with 0 being keep passing up and down until no changes (is this guaranteed to never change?, maybe always terminate if no changes, so this can be set very high to almost achieve that effect)\r\n// TODO Add optional greedy swapping of nodes after assignment\r\n// TODO Add two layer noop. This only makes sense if there's a greedy swapping ability\r\n/** @internal */\r\nfunction buildOperator$5(orderOp) {\r\n    function twoLayerCall(layers) {\r\n        layers\r\n            .slice(0, layers.length - 1)\r\n            .forEach((layer, i) => orderOp(layer, layers[i + 1]));\r\n    }\r\n    function order(ord) {\r\n        if (ord === undefined) {\r\n            return orderOp;\r\n        }\r\n        else {\r\n            const localOrder = ord;\r\n            return buildOperator$5(localOrder);\r\n        }\r\n    }\r\n    twoLayerCall.order = order;\r\n    return twoLayerCall;\r\n}\r\n/** Create a default [[TwoLayerOperator]]. */\r\nfunction twoLayer(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to twoLayer(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$5(median());\r\n}\n\n/**\r\n * A checked and cached node size accessor wrapper.\r\n *\r\n * @internal\r\n */\r\nfunction cachedNodeSize(nodeSize) {\r\n    const cache = new Map();\r\n    function cached(node) {\r\n        let val = cache.get(node.id);\r\n        if (val === undefined) {\r\n            val = nodeSize(node);\r\n            const [width, height] = val;\r\n            if (width < 0 || height < 0) {\r\n                throw new Error(`all node sizes must be non-negative, but got width ${width} and height ${height} for node id: ${node.id}`);\r\n            }\r\n            cache.set(node.id, val);\r\n        }\r\n        return val;\r\n    }\r\n    return cached;\r\n}\n\n/**\r\n * This module contains methods for constructing a layered representation of\r\n * the DAG meant for visualization.  The algorithm is based off ideas presented\r\n * in K. Sugiyama et al. [1979], but described by [S.\r\n * Hong](http://www.it.usyd.edu.au/~shhong/fab.pdf).  The sugiyama layout can\r\n * be configured with different algorithms for each stage of the layout.  For\r\n * each stage there should be adecuate choices for methods that balance speed\r\n * and quality for your desired layout, but any function that meets the\r\n * interface for that stage is valid, but custom methods can also be provided,\r\n * assuming they do what's necessary in that step.\r\n *\r\n * The method [[sugiyama]] is used to create a new [[SugiyamaOperator]]. This\r\n * can be customized with all of the methods available, but in particular the\r\n * method is broken down into three steps:\r\n * 1. [[\"sugiyama/layering/index\" | layering]] - in this step, every node is\r\n *    assigned an integer later such that children are guaranteed to have\r\n *    higher layers than their parents.\r\n * 2. [[\"sugiyama/decross/index\" | decrossing]] - in the step, nodes in each\r\n *    layer are reordered to minimize the number of crossings.\r\n * 3. [[\"sugiyama/coord/index\" | coordinate assignment]] - in the step, the\r\n *    nodes are assigned x and y coordinates that respect their layer, and\r\n *    layer ordering.\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal */\r\nfunction buildOperator$6(layeringOp, decrossOp, coordOp, sizeVal, nodeSizeAcc, debugVal) {\r\n    function createLayers(dag) {\r\n        // every time\r\n        const layers = [];\r\n        // NOTE copy here is explicit so that modifying the graph doesn't change how we iterate\r\n        for (const node of dag.descendants()) {\r\n            // add node to layer\r\n            const nlayer = node.layer;\r\n            const layer = layers[nlayer] || (layers[nlayer] = []);\r\n            layer.push(node);\r\n            // add dummy nodes in place of children\r\n            node.dataChildren = node.dataChildren.map((link) => {\r\n                const clayer = link.child.layer;\r\n                if (clayer <= nlayer) {\r\n                    throw new Error(`layering left child node \"${link.child.id}\" (${clayer}) ` +\r\n                        `with a greater or equal layer to parent node \"${node.id}\" (${nlayer})`);\r\n                }\r\n                // NOTE this cast breaks the type system, but sugiyama basically\r\n                // needs to do that, so...\r\n                let last = link.child;\r\n                for (let l = clayer - 1; l > nlayer; l--) {\r\n                    let dummyId;\r\n                    if (debugVal) {\r\n                        dummyId = `${node.id}->${link.child.id} (${l})`;\r\n                    }\r\n                    else {\r\n                        dummyId = `${node.id}\\0${link.child.id}\\0${l}`;\r\n                    }\r\n                    const dummy = new DummyNode(dummyId);\r\n                    dummy.dataChildren.push(new LayoutChildLink(last, undefined));\r\n                    (layers[l] || (layers[l] = [])).push(dummy);\r\n                    last = dummy;\r\n                }\r\n                // NOTE this cast breaks the type system, but sugiyama basically\r\n                // needs to do that, so...\r\n                return new LayoutChildLink(last, link.data);\r\n            });\r\n        }\r\n        return layers;\r\n    }\r\n    function removeDummies(dag) {\r\n        for (const node of dag) {\r\n            /* istanbul ignore next */\r\n            if (!(node instanceof DummyNode)) {\r\n                node.dataChildren = node.dataChildren.map((link) => {\r\n                    let child = link.child;\r\n                    const points = [{ x: node.x, y: node.y }];\r\n                    while (child instanceof DummyNode) {\r\n                        points.push({ x: child.x, y: child.y });\r\n                        [child] = child.ichildren();\r\n                    }\r\n                    points.push({ x: child.x, y: child.y });\r\n                    return new LayoutChildLink(child, link.data, points);\r\n                });\r\n            }\r\n        }\r\n    }\r\n    function sugiyama(dag) {\r\n        // compute layers\r\n        layeringOp(dag);\r\n        // create layers\r\n        for (const node of dag) {\r\n            const layer = node.layer;\r\n            if (layer === undefined) {\r\n                throw new Error(`layering did not assign layer to node '${node.id}'`);\r\n            }\r\n            else if (layer < 0) {\r\n                throw new Error(`layering assigned a negative layer (${layer}) to node '${node.id}'`);\r\n            }\r\n        }\r\n        const layers = createLayers(dag);\r\n        const nodeSize = cachedNodeSize(nodeSizeAcc);\r\n        // assign y\r\n        let height = 0;\r\n        for (const layer of layers) {\r\n            const layerHeight = Math.max(...layer.map((n) => nodeSize(n)[1]));\r\n            for (const node of layer) {\r\n                node.y = height + layerHeight / 2;\r\n            }\r\n            height += layerHeight;\r\n        }\r\n        if (height <= 0) {\r\n            throw new Error(\"at least one node must have positive height, but total height was zero\");\r\n        }\r\n        // minimize edge crossings\r\n        decrossOp(layers);\r\n        // assign coordinates\r\n        let width = coordOp(layers, nodeSize);\r\n        // scale x\r\n        for (const layer of layers) {\r\n            for (const node of layer) {\r\n                if (node.x === undefined) {\r\n                    throw new Error(`coord didn't assign an x to node '${node.id}'`);\r\n                }\r\n                else if (node.x < 0 || node.x > width) {\r\n                    throw new Error(`coord assgined an x (${node.x}) outside of [0, ${width}]`);\r\n                }\r\n            }\r\n        }\r\n        const exed = layers;\r\n        if (sizeVal !== null) {\r\n            const [newWidth, newHeight] = sizeVal;\r\n            for (const layer of exed) {\r\n                for (const node of layer) {\r\n                    node.x *= newWidth / width;\r\n                    node.y *= newHeight / height;\r\n                }\r\n            }\r\n            width = newWidth;\r\n            height = newHeight;\r\n        }\r\n        // Remove dummy nodes and update edge data\r\n        const sugied = dag;\r\n        removeDummies(sugied);\r\n        // laidout dag\r\n        return { dag: sugied, width, height };\r\n    }\r\n    function layering(layer) {\r\n        if (layer === undefined) {\r\n            return layeringOp;\r\n        }\r\n        else {\r\n            const localLayering = layer;\r\n            return buildOperator$6(localLayering, decrossOp, coordOp, sizeVal, nodeSizeAcc, debugVal);\r\n        }\r\n    }\r\n    sugiyama.layering = layering;\r\n    function decross(dec) {\r\n        if (dec === undefined) {\r\n            return decrossOp;\r\n        }\r\n        else {\r\n            return buildOperator$6(layeringOp, dec, coordOp, sizeVal, nodeSizeAcc, debugVal);\r\n        }\r\n    }\r\n    sugiyama.decross = decross;\r\n    function coord(crd) {\r\n        if (crd === undefined) {\r\n            return coordOp;\r\n        }\r\n        else {\r\n            return buildOperator$6(layeringOp, decrossOp, crd, sizeVal, nodeSizeAcc, debugVal);\r\n        }\r\n    }\r\n    sugiyama.coord = coord;\r\n    function size(sz) {\r\n        if (sz !== undefined) {\r\n            return buildOperator$6(layeringOp, decrossOp, coordOp, sz, nodeSizeAcc, debugVal);\r\n        }\r\n        else {\r\n            return sizeVal;\r\n        }\r\n    }\r\n    sugiyama.size = size;\r\n    function nodeSize(sz) {\r\n        if (sz !== undefined) {\r\n            return buildOperator$6(layeringOp, decrossOp, coordOp, sizeVal, sz, debugVal);\r\n        }\r\n        else {\r\n            return nodeSizeAcc;\r\n        }\r\n    }\r\n    sugiyama.nodeSize = nodeSize;\r\n    function debug(deb) {\r\n        if (deb === undefined) {\r\n            return debugVal;\r\n        }\r\n        else {\r\n            return buildOperator$6(layeringOp, decrossOp, coordOp, sizeVal, nodeSizeAcc, deb);\r\n        }\r\n    }\r\n    sugiyama.debug = debug;\r\n    return sugiyama;\r\n}\r\n/** @internal */\r\nfunction defaultNodeSize(node) {\r\n    const size = +!(node instanceof DummyNode);\r\n    return [size, size];\r\n}\r\n/**\r\n * Construct a new [[SugiyamaOperator]] with the default settings.\r\n */\r\nfunction sugiyama(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to sugiyama(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$6(simplex(), twoLayer(), quad(), null, defaultNodeSize, false);\r\n}\n\n/**\r\n * Assigns every node a distinct layer. This layering operator is often only\r\n * useful in conjunction with topological coordinate assignment. This layering\r\n * is very fast, but it may make other steps take longer due to the many\r\n * created dummy nodes.\r\n *\r\n * Create a new [[TopologicalOperator]] with [[topological]].\r\n *\r\n * <img alt=\"topological example\" src=\"media://topological.png\" width=\"400\">\r\n *\r\n * @packageDocumentation\r\n */\r\n/**\r\n * Create a topological layering.\r\n */\r\nfunction topological(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to topological(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    function topologicalCall(dag) {\r\n        for (const [layer, node] of dag.idescendants(\"before\").entries()) {\r\n            node.layer = layer;\r\n        }\r\n    }\r\n    return topologicalCall;\r\n}\n\n/** @internal */\r\nfunction buildOperator$7(topDownVal) {\r\n    function bottomUp(dag) {\r\n        const maxHeight = Math.max(...dag.iroots().map((d) => d.value));\r\n        for (const node of dag) {\r\n            node.layer = maxHeight - node.value;\r\n        }\r\n    }\r\n    function longestPathCall(dag) {\r\n        if (topDownVal) {\r\n            for (const node of dag.depth()) {\r\n                node.layer = node.value;\r\n            }\r\n        }\r\n        else {\r\n            bottomUp(dag.height());\r\n        }\r\n    }\r\n    function topDown(val) {\r\n        if (val === undefined) {\r\n            return topDownVal;\r\n        }\r\n        else {\r\n            return buildOperator$7(val);\r\n        }\r\n    }\r\n    longestPathCall.topDown = topDown;\r\n    return longestPathCall;\r\n}\r\n/** Create a default [[LongestPathOperator]]. */\r\nfunction longestPath(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to longestPath(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$7(true);\r\n}\n\n/**\n * FastPriorityQueue.js : a fast heap-based priority queue  in JavaScript.\n * (c) the authors\n * Licensed under the Apache License, Version 2.0.\n *\n * Speed-optimized heap-based priority queue for modern browsers and JavaScript engines.\n *\n * Usage :\n         Installation (in shell, if you use node):\n         $ npm install fastpriorityqueue\n\n         Running test program (in JavaScript):\n\n         // var FastPriorityQueue = require(\"fastpriorityqueue\");// in node\n         var x = new FastPriorityQueue();\n         x.add(1);\n         x.add(0);\n         x.add(5);\n         x.add(4);\n         x.add(3);\n         x.peek(); // should return 0, leaves x unchanged\n         x.size; // should return 5, leaves x unchanged\n         while(!x.isEmpty()) {\n           console.log(x.poll());\n         } // will print 0 1 3 4 5\n         x.trim(); // (optional) optimizes memory usage\n */\n\nvar defaultcomparator = function(a, b) {\n  return a < b;\n};\n\n// the provided comparator function should take a, b and return *true* when a < b\nfunction FastPriorityQueue(comparator) {\n  if (!(this instanceof FastPriorityQueue)) return new FastPriorityQueue(comparator);\n  this.array = [];\n  this.size = 0;\n  this.compare = comparator || defaultcomparator;\n}\n\n// copy the priority queue into another, and return it. Queue items are shallow-copied.\n// Runs in `O(n)` time.\nFastPriorityQueue.prototype.clone = function() {\n  var fpq = new FastPriorityQueue(this.compare);\n  fpq.size = this.size;\n  for (var i = 0; i < this.size; i++) {\n    fpq.array.push(this.array[i]);\n  }\n  return fpq;\n};\n\n// Add an element into the queue\n// runs in O(log n) time\nFastPriorityQueue.prototype.add = function(myval) {\n  var i = this.size;\n  this.array[this.size] = myval;\n  this.size += 1;\n  var p;\n  var ap;\n  while (i > 0) {\n    p = (i - 1) >> 1;\n    ap = this.array[p];\n    if (!this.compare(myval, ap)) {\n      break;\n    }\n    this.array[i] = ap;\n    i = p;\n  }\n  this.array[i] = myval;\n};\n\n// replace the content of the heap by provided array and \"heapify it\"\nFastPriorityQueue.prototype.heapify = function(arr) {\n  this.array = arr;\n  this.size = arr.length;\n  var i;\n  for (i = this.size >> 1; i >= 0; i--) {\n    this._percolateDown(i);\n  }\n};\n\n// for internal use\nFastPriorityQueue.prototype._percolateUp = function(i, force) {\n  var myval = this.array[i];\n  var p;\n  var ap;\n  while (i > 0) {\n    p = (i - 1) >> 1;\n    ap = this.array[p];\n    // force will skip the compare\n    if (!force && !this.compare(myval, ap)) {\n      break;\n    }\n    this.array[i] = ap;\n    i = p;\n  }\n  this.array[i] = myval;\n};\n\n// for internal use\nFastPriorityQueue.prototype._percolateDown = function(i) {\n  var size = this.size;\n  var hsize = this.size >>> 1;\n  var ai = this.array[i];\n  var l;\n  var r;\n  var bestc;\n  while (i < hsize) {\n    l = (i << 1) + 1;\n    r = l + 1;\n    bestc = this.array[l];\n    if (r < size) {\n      if (this.compare(this.array[r], bestc)) {\n        l = r;\n        bestc = this.array[r];\n      }\n    }\n    if (!this.compare(bestc, ai)) {\n      break;\n    }\n    this.array[i] = bestc;\n    i = l;\n  }\n  this.array[i] = ai;\n};\n\n// internal\n// _removeAt(index) will remove the item at the given index from the queue,\n// retaining balance. returns the removed item, or undefined if nothing is removed.\nFastPriorityQueue.prototype._removeAt = function(index) {\n  if (index > this.size - 1 || index < 0) return undefined;\n\n  // impl1:\n  //this.array.splice(index, 1);\n  //this.heapify(this.array);\n  // impl2:\n  this._percolateUp(index, true);\n  return this.poll();\n};\n\n// remove(myval) will remove an item matching the provided value from the\n// queue, checked for equality by using the queue's comparator.\n// return true if removed, false otherwise.\nFastPriorityQueue.prototype.remove = function(myval) {\n  for (var i = 0; i < this.size; i++) {\n    if (!this.compare(this.array[i], myval) && !this.compare(myval, this.array[i])) {\n      // items match, comparator returns false both ways, remove item\n      this._removeAt(i);\n      return true;\n    }\n  }\n  return false;\n};\n\n// internal\n// removes and returns items for which the callback returns true.\nFastPriorityQueue.prototype._batchRemove = function(callback, limit) {\n  // initialize return array with max size of the limit or current queue size\n  var retArr = new Array(limit ? limit : this.size);\n  var count = 0;\n\n  if (typeof callback === 'function' && this.size) {\n    var i = 0;\n    while (i < this.size && count < retArr.length) {\n      if (callback(this.array[i])) {\n        retArr[count] = this._removeAt(i);\n        count++;\n        // move up a level in the heap if we remove an item\n        i = i >> 1;\n      } else {\n        i++;\n      }\n    } \n  }\n  retArr.length = count;\n  return retArr;\n};\n\n// removeOne(callback) will execute the callback function for each item of the queue\n// and will remove the first item for which the callback will return true.\n// return the removed item, or undefined if nothing is removed.\nFastPriorityQueue.prototype.removeOne = function(callback) {\n  var arr = this._batchRemove(callback, 1);\n  return arr.length > 0 ? arr[0] : undefined;\n};\n\n// remove(callback[, limit]) will execute the callback function for each item of\n// the queue and will remove each item for which the callback returns true, up to\n// a max limit of removed items if specified or no limit if unspecified.\n// return an array containing the removed items.\nFastPriorityQueue.prototype.removeMany = function(callback, limit) {\n  return this._batchRemove(callback, limit);\n};\n\n// Look at the top of the queue (one of the smallest elements) without removing it\n// executes in constant time\n//\n// Calling peek on an empty priority queue returns\n// the \"undefined\" value.\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/undefined\n//\nFastPriorityQueue.prototype.peek = function() {\n  if (this.size == 0) return undefined;\n  return this.array[0];\n};\n\n// remove the element on top of the heap (one of the smallest elements)\n// runs in logarithmic time\n//\n// If the priority queue is empty, the function returns the\n// \"undefined\" value.\n// https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/undefined\n//\n// For long-running and large priority queues, or priority queues\n// storing large objects, you may  want to call the trim function\n// at strategic times to recover allocated memory.\nFastPriorityQueue.prototype.poll = function() {\n  if (this.size == 0) return undefined;\n  var ans = this.array[0];\n  if (this.size > 1) {\n    this.array[0] = this.array[--this.size];\n    this._percolateDown(0);\n  } else {\n    this.size -= 1;\n  }\n  return ans;\n};\n\n// This function adds the provided value to the heap, while removing\n// and returning one of the smallest elements (like poll). The size of the queue\n// thus remains unchanged.\nFastPriorityQueue.prototype.replaceTop = function(myval) {\n  if (this.size == 0) return undefined;\n  var ans = this.array[0];\n  this.array[0] = myval;\n  this._percolateDown(0);\n  return ans;\n};\n\n// recover unused memory (for long-running priority queues)\nFastPriorityQueue.prototype.trim = function() {\n  this.array = this.array.slice(0, this.size);\n};\n\n// Check whether the heap is empty\nFastPriorityQueue.prototype.isEmpty = function() {\n  return this.size === 0;\n};\n\n// iterate over the items in order, pass a callback that receives (item, index) as args.\n// TODO once we transpile, uncomment\n// if (Symbol && Symbol.iterator) {\n//   FastPriorityQueue.prototype[Symbol.iterator] = function*() {\n//     if (this.isEmpty()) return;\n//     var fpq = this.clone();\n//     while (!fpq.isEmpty()) {\n//       yield fpq.poll();\n//     }\n//   };\n// }\nFastPriorityQueue.prototype.forEach = function(callback) {\n  if (this.isEmpty() || typeof callback != 'function') return;\n  var i = 0;\n  var fpq = this.clone();\n  while (!fpq.isEmpty()) {\n    callback(fpq.poll(), i++);\n  }\n};\n\n// return the k 'smallest' elements of the queue\n// runs in O(k log k) time\n// this is the equivalent of repeatedly calling poll, but\n// it has a better computational complexity, which can be\n// important for large data sets.\nFastPriorityQueue.prototype.kSmallest = function(k) {\n  if (this.size == 0) return [];\n  var comparator = this.compare;\n  var arr = this.array;\n  var fpq = new FastPriorityQueue(function(a,b){\n   return comparator(arr[a],arr[b]);\n  });\n  k = Math.min(this.size, k);\n  var smallest = new Array(k);\n  var j = 0;\n  fpq.add(0);\n  while (j < k) {\n    var small = fpq.poll();\n    smallest[j++] = this.array[small];\n    var l = (small << 1) + 1;\n    var r = l + 1;\n    if (l < this.size) fpq.add(l);\n    if (r < this.size) fpq.add(r);\n  }\n  return smallest;\n};\n\nvar FastPriorityQueue_1 = FastPriorityQueue;\n\n/**\r\n * Assigns every node a layer such that the width, not counting dummy nodes, is\r\n * always less than some constant. This can result in tall graphs, but is also\r\n * reasonably fast. If the max width is set to zero (the default), the width\r\n * will instead be set to the square root of the number of nodes.\r\n *\r\n * Create a new [[CoffmanGrahamOperator]] with [[coffmanGraham]].\r\n *\r\n * <img alt=\"Coffman-Graham example\" src=\"media://coffman_graham.png\" width=\"400\">\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal */\r\nclass Data {\r\n    constructor() {\r\n        this.before = [];\r\n        this.parents = [];\r\n    }\r\n}\r\n/** @internal */\r\nfunction buildOperator$8(maxWidthVal) {\r\n    function coffmanGrahamCall(dag) {\r\n        const maxWidth = maxWidthVal || Math.floor(Math.sqrt(dag.size() + 0.5));\r\n        // initialize node data\r\n        const data = new SafeMap(dag.idescendants().map((node) => [node.id, new Data()]));\r\n        for (const node of dag) {\r\n            for (const child of node.ichildren()) {\r\n                data.getThrow(child.id).parents.push(node);\r\n            }\r\n        }\r\n        // create queue\r\n        function comp(left, right) {\r\n            const leftBefore = data.getThrow(left.id).before;\r\n            const rightBefore = data.getThrow(right.id).before;\r\n            for (const [i, leftb] of leftBefore.entries()) {\r\n                const rightb = rightBefore[i];\r\n                if (rightb === undefined) {\r\n                    return false;\r\n                }\r\n                else if (leftb < rightb) {\r\n                    return true;\r\n                }\r\n                else if (rightb < leftb) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        const queue = new FastPriorityQueue_1(comp);\r\n        // start with root nodes\r\n        for (const root of dag.iroots()) {\r\n            queue.add(root);\r\n        }\r\n        let i = 0; // node index\r\n        let layer = 0; // layer assigning\r\n        let width = 0; // current width\r\n        let node;\r\n        while ((node = queue.poll())) {\r\n            if (width < maxWidth &&\r\n                data.getThrow(node.id).parents.every((p) => def(p.layer) < layer)) {\r\n                node.layer = layer;\r\n                width++;\r\n            }\r\n            else {\r\n                node.layer = ++layer;\r\n                width = 1;\r\n            }\r\n            for (const child of node.ichildren()) {\r\n                const { before, parents } = data.getThrow(child.id);\r\n                before.push(i);\r\n                if (before.length === parents.length) {\r\n                    before.sort((a, b) => b - a);\r\n                    queue.add(child);\r\n                }\r\n            }\r\n            i++;\r\n        }\r\n    }\r\n    function width(maxWidth) {\r\n        if (maxWidth === undefined) {\r\n            return maxWidthVal;\r\n        }\r\n        else if (maxWidth < 0) {\r\n            throw new Error(`width must be non-negative: ${maxWidth}`);\r\n        }\r\n        else {\r\n            return buildOperator$8(maxWidth);\r\n        }\r\n    }\r\n    coffmanGrahamCall.width = width;\r\n    return coffmanGrahamCall;\r\n}\r\n/** Create a default [[CoffmanGrahamOperator]]. */\r\nfunction coffmanGraham(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to coffmanGraham(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$8(0);\r\n}\n\n/**\r\n * Create a decrossing operator that minimizes the the number of edge\r\n * crossings. This method solves an np-complete integer program, and as such\r\n * can take a very long time for large DAGs.\r\n *\r\n * Create a new [[OptOperator]] with [[opt]].\r\n *\r\n * <img alt=\"optimal decross example\" src=\"media://simplex.png\" width=\"400\">\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal */\r\nfunction buildOperator$9(debugVal) {\r\n    // TODO optimize this for disconnected graphs by breaking them apart, solving\r\n    // each, then mushing them back together\r\n    const joiner = debugVal ? \" => \" : \"\\0\\0\";\r\n    const slackJoiner = debugVal ? \" \" : \"\\0\\0\\0\";\r\n    function key(...nodes) {\r\n        return nodes\r\n            .map((n) => n.id)\r\n            .sort()\r\n            .join(joiner);\r\n    }\r\n    function perms(model, layer) {\r\n        layer.sort((n1, n2) => +(n1.id > n2.id) || -1);\r\n        // add variables for each pair of bottom later nodes indicating if they\r\n        // should be flipped\r\n        for (const [i, n1] of layer.slice(0, layer.length - 1).entries()) {\r\n            for (const n2 of layer.slice(i + 1)) {\r\n                const pair = key(n1, n2);\r\n                model.ints[pair] = 1;\r\n                model.constraints[pair] = Object.assign(Object.create(null), {\r\n                    max: 1\r\n                });\r\n                model.variables[pair] = Object.assign(Object.create(null), {\r\n                    opt: 0,\r\n                    [pair]: 1\r\n                });\r\n            }\r\n        }\r\n        // add constraints to enforce triangle inequality, e.g. that if a -> b is 1\r\n        // and b -> c is 1 then a -> c must also be one\r\n        for (const [i, n1] of layer.slice(0, layer.length - 1).entries()) {\r\n            for (const [j, n2] of layer.slice(i + 1).entries()) {\r\n                for (const n3 of layer.slice(i + j + 2)) {\r\n                    const pair1 = key(n1, n2);\r\n                    const pair2 = key(n1, n3);\r\n                    const pair3 = key(n2, n3);\r\n                    const triangle = key(n1, n2, n3);\r\n                    const triangleUp = triangle + \"+\";\r\n                    model.constraints[triangleUp] = Object.assign(Object.create(null), {\r\n                        max: 1\r\n                    });\r\n                    model.variables[pair1][triangleUp] = 1;\r\n                    model.variables[pair2][triangleUp] = -1;\r\n                    model.variables[pair3][triangleUp] = 1;\r\n                    const triangleDown = triangle + \"-\";\r\n                    model.constraints[triangleDown] = Object.assign(Object.create(null), {\r\n                        min: 0\r\n                    });\r\n                    model.variables[pair1][triangleDown] = 1;\r\n                    model.variables[pair2][triangleDown] = -1;\r\n                    model.variables[pair3][triangleDown] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function cross(model, layer) {\r\n        for (const [i, p1] of layer.slice(0, layer.length - 1).entries()) {\r\n            for (const p2 of layer.slice(i + 1)) {\r\n                const pairp = key(p1, p2);\r\n                for (const c1 of p1.ichildren()) {\r\n                    for (const c2 of p2.ichildren()) {\r\n                        if (c1 === c2) {\r\n                            continue;\r\n                        }\r\n                        const pairc = key(c1, c2);\r\n                        const slack = debugVal\r\n                            ? `slack (${pairp}) (${pairc})`\r\n                            : `${pairp}\\0\\0\\0${pairc}`;\r\n                        const slackUp = `${slack}${slackJoiner}+`;\r\n                        const slackDown = `${slack}${slackJoiner}-`;\r\n                        model.variables[slack] = Object.assign(Object.create(null), {\r\n                            opt: 1,\r\n                            [slackUp]: 1,\r\n                            [slackDown]: 1\r\n                        });\r\n                        const flip = +(c1.id > c2.id);\r\n                        const sign = flip || -1;\r\n                        model.constraints[slackUp] = Object.assign(Object.create(null), {\r\n                            min: flip\r\n                        });\r\n                        model.variables[pairp][slackUp] = 1;\r\n                        model.variables[pairc][slackUp] = sign;\r\n                        model.constraints[slackDown] = Object.assign(Object.create(null), {\r\n                            min: -flip\r\n                        });\r\n                        model.variables[pairp][slackDown] = -1;\r\n                        model.variables[pairc][slackDown] = -sign;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function optCall(layers) {\r\n        // initialize model\r\n        const model = {\r\n            optimize: \"opt\",\r\n            opType: \"min\",\r\n            constraints: Object.create(null),\r\n            variables: Object.create(null),\r\n            ints: Object.create(null)\r\n        };\r\n        // add variables and permutation invariants\r\n        for (const layer of layers) {\r\n            perms(model, layer);\r\n        }\r\n        // add crossing minimization\r\n        for (const layer of layers.slice(0, layers.length - 1)) {\r\n            cross(model, layer);\r\n        }\r\n        // solve objective\r\n        const ordering = main$2.Solve(model);\r\n        // sort layers\r\n        for (const layer of layers) {\r\n            layer.sort(\r\n            /* istanbul ignore next */\r\n            (n1, n2) => (+(n1.id > n2.id) || -1) * (ordering[key(n1, n2)] || -1));\r\n        }\r\n    }\r\n    function debug(val) {\r\n        if (val === undefined) {\r\n            return debugVal;\r\n        }\r\n        else {\r\n            return buildOperator$9(val);\r\n        }\r\n    }\r\n    optCall.debug = debug;\r\n    return optCall;\r\n}\r\n/** Create a default [[OptOperator]]. */\r\nfunction opt(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to opt(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$9(false);\r\n}\n\n/**\r\n * The center coordinate assignment operator centers all of the nodes as\r\n * compatly as possible. It produces generally ppor layouts, but is very fast.\r\n *\r\n * <img alt=\"center example\" src=\"media://center_coordinate.png\" width=\"400\">\r\n *\r\n * @packageDocumentation\r\n */\r\n/** Create a new center assignment operator. */\r\nfunction center(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to center(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    function centerCall(layers, nodeSize) {\r\n        const widths = layers.map((layer) => {\r\n            let width = 0;\r\n            for (const node of layer) {\r\n                const nodeWidth = nodeSize(node)[0];\r\n                node.x = width + nodeWidth / 2;\r\n                width += nodeWidth;\r\n            }\r\n            return width;\r\n        });\r\n        const maxWidth = Math.max(...widths);\r\n        if (maxWidth <= 0) {\r\n            throw new Error(\"must assign nonzero width to at least one node\");\r\n        }\r\n        for (const [i, layer] of layers.entries()) {\r\n            const width = widths[i];\r\n            const offset = (maxWidth - width) / 2;\r\n            for (const node of layer) {\r\n                node.x = def(node.x) + offset;\r\n            }\r\n        }\r\n        return maxWidth;\r\n    }\r\n    return centerCall;\r\n}\n\n/** @internal */\r\nfunction buildOperator$a(weightVal) {\r\n    function minCurveCall(layers, nodeSize) {\r\n        return quad()\r\n            .vertical([(1 - weightVal) / 2, (1 - weightVal) / 2])\r\n            .curve([weightVal, weightVal])\r\n            .component(0.5)(layers, nodeSize);\r\n    }\r\n    function weight(val) {\r\n        if (val === undefined) {\r\n            return weightVal;\r\n        }\r\n        else if (val < 0 || val >= 1) {\r\n            throw new Error(`weight must be in [0, 1), but was ${weightVal}`);\r\n        }\r\n        else {\r\n            return buildOperator$a(val);\r\n        }\r\n    }\r\n    minCurveCall.weight = weight;\r\n    return minCurveCall;\r\n}\r\n/**\r\n * Create a default [[MinCurveOperator]].\r\n * @deprecated\r\n * */\r\nfunction minCurve(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to minCurve(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$a(0.5);\r\n}\n\n/**\r\n * This accessor assigns coordinates as the mean of their parents and then\r\n * spaces them out to respect their separation. Nodes with higher degree that\r\n * aren't dummy nodes are given higher priority for shifting order, i.e. are\r\n * less likely to be moved from the mean of their parents. This solution\r\n * results in a layout that is more pleaseing than center, but much faster to\r\n * compute than vert or minCurve.\r\n *\r\n * <img alt=\"greedy example\" src=\"media://greedy_coordinate.png\" width=\"400\">\r\n *\r\n * @packageDocumentation\r\n */\r\n/** Create a greedy coordinate assignment operator. */\r\nfunction greedy(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to greedy(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    function greedyCall(layers, nodeSize) {\r\n        // TODO other initial assignments\r\n        const assignment = meanAssignment;\r\n        // assign degrees\r\n        const degrees = new SafeMap();\r\n        for (const layer of layers) {\r\n            for (const node of layer) {\r\n                // the -3 at the end ensures that dummy nodes have the lowest priority,\r\n                // as dummy nodes always have degree 2, degree -1 ensures they are\r\n                // below any other valid node\r\n                degrees.set(node.id, node.ichildren().length + (node instanceof DummyNode ? -3 : 0));\r\n            }\r\n        }\r\n        for (const layer of layers) {\r\n            for (const node of layer) {\r\n                for (const child of node.ichildren()) {\r\n                    degrees.set(child.id, degrees.getThrow(child.id) + 1);\r\n                }\r\n            }\r\n        }\r\n        // set first layer\r\n        let [lastLayer, ...restLayers] = layers;\r\n        let start = 0;\r\n        let finish = 0;\r\n        for (const node of lastLayer) {\r\n            const size = nodeSize(node)[0];\r\n            node.x = finish + size / 2;\r\n            finish += size;\r\n        }\r\n        // assign the rest of nodes\r\n        for (const layer of restLayers) {\r\n            // initial greedy assignment\r\n            assignment(lastLayer, layer);\r\n            // order nodes nodes by degree and start with highest degree\r\n            const ordered = layer\r\n                .map((node, j) => [j, node])\r\n                .sort(([aj, anode], [bj, bnode]) => {\r\n                const adeg = degrees.getThrow(anode.id);\r\n                const bdeg = degrees.getThrow(bnode.id);\r\n                return adeg === bdeg ? aj - bj : bdeg - adeg;\r\n            });\r\n            // Iterate over nodes in degree order\r\n            for (const [j, node] of ordered) {\r\n                // first push nodes over to left\r\n                // TODO we do left than right, but really we should do both and average\r\n                const nwidth = nodeSize(node)[0];\r\n                let end = def(node.x) + nwidth / 2;\r\n                for (const next of layer.slice(j + 1)) {\r\n                    const hsize = nodeSize(next)[0] / 2;\r\n                    const nx = (next.x = Math.max(def(next.x), end + hsize));\r\n                    end = nx + hsize;\r\n                }\r\n                finish = Math.max(finish, end);\r\n                // then push from the right\r\n                let begin = def(node.x) - nwidth / 2;\r\n                for (const next of layer.slice(0, j).reverse()) {\r\n                    const hsize = nodeSize(next)[0] / 2;\r\n                    const nx = (next.x = Math.min(def(next.x), begin - hsize));\r\n                    begin = nx - hsize;\r\n                }\r\n                start = Math.min(start, begin);\r\n            }\r\n            lastLayer = layer;\r\n        }\r\n        // separate for zero based\r\n        for (const layer of layers) {\r\n            for (const node of layer) {\r\n                node.x = def(node.x) - start;\r\n            }\r\n        }\r\n        const width = finish - start;\r\n        if (width <= 0) {\r\n            throw new Error(\"must assign nonzero width to at least one node\");\r\n        }\r\n        return width;\r\n    }\r\n    return greedyCall;\r\n}\r\n// TODO this is very similar to the twolayerMean method, there might be a\r\n// clever way to combine then, but it's not immediately obvious since twolayer\r\n// uses the index of toplayer, and this uses the x value\r\n/** @internal */\r\nfunction meanAssignment(topLayer, bottomLayer) {\r\n    for (const node of bottomLayer) {\r\n        node.x = 0.0;\r\n    }\r\n    const counts = new SafeMap();\r\n    for (const node of topLayer) {\r\n        for (const child of node.ichildren()) {\r\n            /* istanbul ignore next */\r\n            if (child.x === undefined) {\r\n                throw new Error(`unexpected undefined x for '${child.id}'`);\r\n            }\r\n            const newCount = counts.getDefault(child.id, 0) + 1;\r\n            counts.set(child.id, newCount);\r\n            child.x += (def(node.x) - child.x) / newCount;\r\n        }\r\n    }\r\n}\n\n/** Create a topological coordinate assignment operator. */\r\nfunction topological$1(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to topological(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    function topologicalCall(layers, nodeSize) {\r\n        for (const layer of layers) {\r\n            const numNodes = layer.reduce((count, node) => count + +!(node instanceof DummyNode), 0);\r\n            if (numNodes !== 1) {\r\n                throw new Error(\"topological() only works with a topological layering\");\r\n            }\r\n        }\r\n        const inds = new SafeMap();\r\n        let i = 0;\r\n        for (const layer of layers) {\r\n            for (const node of layer) {\r\n                if (node instanceof DummyNode) {\r\n                    inds.set(node.id, i++);\r\n                }\r\n            }\r\n        }\r\n        // we assign all real nodes the last index, knowing that the optimization\r\n        // always assigns them the same coord: 0.\r\n        for (const layer of layers) {\r\n            for (const node of layer) {\r\n                if (!(node instanceof DummyNode)) {\r\n                    inds.set(node.id, i);\r\n                }\r\n            }\r\n        }\r\n        const [Q, c, A, b] = init(layers, inds, nodeSize);\r\n        for (const layer of layers) {\r\n            for (const par of layer) {\r\n                const pind = inds.getThrow(par.id);\r\n                for (const node of par.ichildren()) {\r\n                    const nind = inds.getThrow(node.id);\r\n                    if (node instanceof DummyNode) {\r\n                        for (const child of node.ichildren()) {\r\n                            const cind = inds.getThrow(child.id);\r\n                            minBend(Q, pind, nind, cind, 1);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        const solution = solve(Q, c, A, b);\r\n        const width = layout(layers, nodeSize, inds, solution);\r\n        if (width <= 0) {\r\n            throw new Error(\"must assign nonzero width to at least one node\");\r\n        }\r\n        return width;\r\n    }\r\n    return topologicalCall;\r\n}\n\n/** @internal */\r\nclass Mean {\r\n    constructor() {\r\n        this.mean = 0.0;\r\n        this.count = 0;\r\n    }\r\n    add(val) {\r\n        this.mean += (val - this.mean) / ++this.count;\r\n    }\r\n}\r\n/** Create a mean two layer ordering operator. */\r\nfunction mean(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to mean(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    function meanCall(topLayer, bottomLayer) {\r\n        const means = new SafeMap(bottomLayer.map((node) => [node.id, new Mean()]));\r\n        for (const [i, node] of topLayer.entries()) {\r\n            for (const child of node.ichildren()) {\r\n                means.getThrow(child.id).add(i);\r\n            }\r\n        }\r\n        bottomLayer.sort((a, b) => means.getThrow(a.id).mean - means.getThrow(b.id).mean);\r\n    }\r\n    return meanCall;\r\n}\n\n/**\r\n * The opt order operator orders the bottom layer to minimize the number of\r\n * crossings. This is expensive, but not nearly as expensive as optimizing all\r\n * crossings initially.\r\n *\r\n * <img alt=\"two layer opt example\" src=\"media://two_layer_opt.png\" width=\"400\">\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal */\r\nfunction buildOperator$b(debugVal) {\r\n    const joiner = debugVal ? \" => \" : \"\\0\\0\";\r\n    function key(...nodes) {\r\n        return nodes\r\n            .map((n) => n.id)\r\n            .sort()\r\n            .join(joiner);\r\n    }\r\n    function optCall(topLayer, bottomLayer) {\r\n        // initialize model\r\n        const model = {\r\n            optimize: \"opt\",\r\n            opType: \"min\",\r\n            constraints: Object.create(null),\r\n            variables: Object.create(null),\r\n            ints: Object.create(null)\r\n        };\r\n        // sort bottom layer so ids can be used to see if one node was originally\r\n        // before another one\r\n        bottomLayer.sort((n1, n2) => +(n1.id > n2.id) || -1);\r\n        // add variables for each pair of bottom later nodes indicating if they\r\n        // should be flipped\r\n        for (const [i, n1] of bottomLayer\r\n            .slice(0, bottomLayer.length - 1)\r\n            .entries()) {\r\n            for (const n2 of bottomLayer.slice(i + 1)) {\r\n                const pair = key(n1, n2);\r\n                model.ints[pair] = 1;\r\n                model.constraints[pair] = Object.assign(Object.create(null), {\r\n                    max: 1\r\n                });\r\n                model.variables[pair] = Object.assign(Object.create(null), {\r\n                    opt: 0,\r\n                    [pair]: 1\r\n                });\r\n            }\r\n        }\r\n        // add constraints to enforce triangle inequality, e.g. that if a -> b is 1\r\n        // and b -> c is 1 then a -> c must also be one\r\n        for (const [i, n1] of bottomLayer\r\n            .slice(0, bottomLayer.length - 1)\r\n            .entries()) {\r\n            for (const [j, n2] of bottomLayer.slice(i + 1).entries()) {\r\n                for (const n3 of bottomLayer.slice(i + j + 2)) {\r\n                    const pair1 = key(n1, n2);\r\n                    const pair2 = key(n1, n3);\r\n                    const pair3 = key(n2, n3);\r\n                    const triangle = key(n1, n2, n3);\r\n                    const triangleUp = triangle + \"+\";\r\n                    model.constraints[triangleUp] = Object.assign(Object.create(null), {\r\n                        max: 1\r\n                    });\r\n                    model.variables[pair1][triangleUp] = 1;\r\n                    model.variables[pair2][triangleUp] = -1;\r\n                    model.variables[pair3][triangleUp] = 1;\r\n                    const triangleDown = triangle + \"-\";\r\n                    model.constraints[triangleDown] = Object.assign(Object.create(null), {\r\n                        min: 0\r\n                    });\r\n                    model.variables[pair1][triangleDown] = 1;\r\n                    model.variables[pair2][triangleDown] = -1;\r\n                    model.variables[pair3][triangleDown] = 1;\r\n                }\r\n            }\r\n        }\r\n        // add crossing minimization\r\n        for (const [i, p1] of topLayer.slice(0, topLayer.length - 1).entries()) {\r\n            for (const p2 of topLayer.slice(i + 1)) {\r\n                for (const c1 of p1.ichildren()) {\r\n                    for (const c2 of p2.ichildren()) {\r\n                        if (c1 === c2) {\r\n                            continue;\r\n                        }\r\n                        const pair = key(c1, c2);\r\n                        model.variables[pair].opt += +(c1.id > c2.id) || -1;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // solve objective\r\n        const ordering = main$2.Solve(model);\r\n        // sort layers\r\n        bottomLayer.sort(\r\n        /* istanbul ignore next */\r\n        (n1, n2) => (+(n1.id > n2.id) || -1) * (+ordering[key(n1, n2)] || -1));\r\n    }\r\n    function debug(val) {\r\n        if (val === undefined) {\r\n            return debugVal;\r\n        }\r\n        else {\r\n            return buildOperator$b(val);\r\n        }\r\n    }\r\n    optCall.debug = debug;\r\n    return optCall;\r\n}\r\n/** Create a default [[OptOperator]]. */\r\nfunction opt$1(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to opt(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$b(false);\r\n}\n\n// TODO turn this into an operator for zherebko\r\n// TODO Add debug option for link indices\r\nfunction firstAvailable(inds, target) {\r\n    const index = inds.findIndex((i) => i <= target);\r\n    if (index >= 0) {\r\n        return index;\r\n    }\r\n    else {\r\n        return inds.length;\r\n    }\r\n}\r\nfunction greedy$1(nodes) {\r\n    const indices = new Map();\r\n    const pos = [];\r\n    const neg = [];\r\n    for (const node of nodes) {\r\n        for (const child of node.children().sort((a, b) => a.layer - b.layer)) {\r\n            const linkId = `${node.id}\\0${child.id}`;\r\n            if (child.layer > node.layer + 1) {\r\n                const negIndex = firstAvailable(neg, node.layer);\r\n                const posIndex = firstAvailable(pos, node.layer);\r\n                if (negIndex < posIndex) {\r\n                    // tie-break right\r\n                    indices.set(linkId, -negIndex - 1);\r\n                    neg[negIndex] = child.layer - 1;\r\n                }\r\n                else {\r\n                    indices.set(linkId, posIndex + 1);\r\n                    pos[posIndex] = child.layer - 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return indices;\r\n}\n\n/** @internal */\r\nfunction buildOperator$c(width, height) {\r\n    /** topological layering */\r\n    function layer(dag) {\r\n        const ordered = [...dag.idescendants(\"before\")];\r\n        for (const [layer, node] of ordered.entries()) {\r\n            node.layer = layer;\r\n        }\r\n        return ordered;\r\n    }\r\n    function zherebkoCall(dag) {\r\n        // topological sort\r\n        const ordered = layer(dag);\r\n        const maxLayer = ordered.length - 1;\r\n        if (maxLayer === 0) {\r\n            // center if only one node\r\n            const [node] = ordered;\r\n            node.x = width / 2;\r\n            node.y = height / 2;\r\n        }\r\n        else {\r\n            // get link indices\r\n            const indices = greedy$1(ordered);\r\n            // assign points to links\r\n            assignPositions(dag, indices, maxLayer);\r\n        }\r\n        return dag;\r\n    }\r\n    function assignPositions(dag, indices, maxLayer) {\r\n        // map to coordinates\r\n        let minIndex = 0;\r\n        let maxIndex = 0;\r\n        for (const { source, target } of dag.ilinks()) {\r\n            if (target.layer > source.layer + 1) {\r\n                const index = indices.get(`${source.id}\\0${target.id}`);\r\n                /* istanbul ignore next */\r\n                if (index === undefined) {\r\n                    throw new Error(`indexer didn't index ${source.id} -> ${target.id}`);\r\n                }\r\n                minIndex = Math.min(minIndex, index);\r\n                maxIndex = Math.max(maxIndex, index);\r\n            }\r\n        }\r\n        if (minIndex === maxIndex) {\r\n            // center if graph is a line\r\n            minIndex = -1;\r\n            maxIndex = 1;\r\n        }\r\n        for (const node of dag) {\r\n            node.x = (-minIndex / (maxIndex - minIndex)) * width;\r\n            node.y = (node.layer / maxLayer) * height;\r\n        }\r\n        assignPoints(dag, indices, maxLayer, minIndex, maxIndex);\r\n    }\r\n    function assignPoints(dag, indices, maxLayer, minIndex, maxIndex) {\r\n        for (const { source, target, points } of dag.ilinks()) {\r\n            points.length = 0;\r\n            points.push({ x: source.x, y: source.y });\r\n            if (target.layer - source.layer > 1) {\r\n                const index = indices.get(`${source.id}\\0${target.id}`);\r\n                /* istanbul ignore next */\r\n                if (index === undefined) {\r\n                    throw new Error(`indexer didn't index ${source.id} -> ${target.id}`);\r\n                }\r\n                const x = ((index - minIndex) / (maxIndex - minIndex)) * width;\r\n                const y1 = ((source.layer + 1) / maxLayer) * height;\r\n                const y2 = ((target.layer - 1) / maxLayer) * height;\r\n                if (target.layer - source.layer > 2) {\r\n                    points.push({ x: x, y: y1 }, { x: x, y: y2 });\r\n                }\r\n                else {\r\n                    points.push({ x: x, y: y1 });\r\n                }\r\n            }\r\n            points.push({ x: target.x, y: target.y });\r\n        }\r\n    }\r\n    function size(sz) {\r\n        if (sz === undefined) {\r\n            return [width, height];\r\n        }\r\n        else {\r\n            const [newWidth, newHeight] = sz;\r\n            return buildOperator$c(newWidth, newHeight);\r\n        }\r\n    }\r\n    zherebkoCall.size = size;\r\n    return zherebkoCall;\r\n}\r\n/** Create a new [[ZherebkoOperator]] with default settings. */\r\nfunction zherebko(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to zherebko(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$c(1, 1);\r\n}\n\n/** @internal */\r\nfunction buildOperator$d(centerVal) {\r\n    function complexCall(layers) {\r\n        // find all root nodes and subtree widths\r\n        const rootMap = new SafeMap();\r\n        const subtreeWidths = new SafeMap();\r\n        for (const layer of layers.slice().reverse()) {\r\n            for (const node of layer) {\r\n                rootMap.set(node.id, node);\r\n                let subtreeWidth = 0;\r\n                for (const child of node.ichildren()) {\r\n                    rootMap.delete(child.id);\r\n                    subtreeWidth += subtreeWidths.getThrow(child.id);\r\n                }\r\n                subtreeWidths.set(node.id, Math.max(subtreeWidth, 1));\r\n            }\r\n        }\r\n        // iterate over each root and assign column indices to each node in its\r\n        // subtree.  if a node already has a columnIndex, do not change it, this\r\n        // case can occur if the node has more than one predecessor\r\n        // TODO I think this would be more elegant with simple iteration, but it's\r\n        // not clear how that would look\r\n        let startColumnIndex = 0;\r\n        for (const node of rootMap.values()) {\r\n            const subtreeWidth = subtreeWidths.getThrow(node.id);\r\n            node.columnIndex =\r\n                startColumnIndex + (centerVal ? Math.floor((subtreeWidth - 1) / 2) : 0);\r\n            assignColumnIndexToChildren(node, startColumnIndex);\r\n            startColumnIndex += subtreeWidth;\r\n        }\r\n        function assignColumnIndexToChildren(node, startColumnIndex) {\r\n            let childColumnIndex = startColumnIndex;\r\n            for (const child of node.ichildren()) {\r\n                if (child.columnIndex !== undefined) {\r\n                    // stop recursion, this child was already visited\r\n                    return;\r\n                }\r\n                const width = subtreeWidths.getThrow(child.id);\r\n                child.columnIndex =\r\n                    childColumnIndex + (centerVal ? Math.floor((width - 1) / 2) : 0);\r\n                assignColumnIndexToChildren(child, childColumnIndex);\r\n                childColumnIndex += width;\r\n            }\r\n        }\r\n    }\r\n    function center(val) {\r\n        if (val === undefined) {\r\n            return centerVal;\r\n        }\r\n        else {\r\n            return buildOperator$d(val);\r\n        }\r\n    }\r\n    complexCall.center = center;\r\n    return complexCall;\r\n}\r\n/** Create a complex operator with default settings. */\r\nfunction complex(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to center(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$d(false);\r\n}\n\n/**\r\n * Compute x0 and x1 coordinates for nodes that maximizes the spread of nodes\r\n * in [0, 1].  It uses columnIndex that has to be present in each node. Due to\r\n * the varying height of the nodes, nodes from different layers might be\r\n * present at the same y coordinate therefore, nodes should not be centered in\r\n * their layer but centering should be considered over all layers.\r\n *\r\n * @packageDocumentation\r\n */\r\n/** Create a spread coord operator. */\r\nfunction spread(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to spread(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    function spreadCall(layers, columnWidthFunction, columnSeparationFunction) {\r\n        // calculate the number of columns\r\n        const maxColumns = Math.max(...layers.map((layer) => Math.max(...layer.map((node) => node.columnIndex)))) + 1;\r\n        // call columnWidthFunction for each column index to get an array with the width of each column index:\r\n        const columnWidths = [];\r\n        for (let i = 0; i < maxColumns; ++i) {\r\n            columnWidths.push(columnWidthFunction(i));\r\n        }\r\n        // similarly for the separation of the columns, where columnSeparation[0] is the separation between column 0 and 1:\r\n        const columnStarts = [0];\r\n        for (let i = 0; i < maxColumns - 1; ++i) {\r\n            const start = columnStarts[i] + columnWidths[i] + columnSeparationFunction(i);\r\n            columnStarts.push(start);\r\n        }\r\n        const maxWidth = columnStarts[maxColumns - 1] + columnWidths[maxColumns - 1];\r\n        for (const layer of layers) {\r\n            for (const node of layer) {\r\n                const start = columnStarts[node.columnIndex];\r\n                const width = columnWidths[node.columnIndex];\r\n                node.x0 = start / maxWidth;\r\n                node.x1 = (start + width) / maxWidth;\r\n            }\r\n        }\r\n    }\r\n    return spreadCall;\r\n}\n\nclass DummyNode$1 extends LayoutDagNode {\r\n    constructor(id) {\r\n        super(id, undefined);\r\n    }\r\n}\n\n/**\r\n * This layout algorithm treats nodes not as points (i.e. producing x & y\r\n * coordinates) but as rectangles. An accessor is supplied to extract a\r\n * *heightRatio* from each node, specifying its height in comparison to other\r\n * nodes. The implementation was contributed by the author [L.\r\n * Arquint](https://linardarquint.com) and provides different algorithms to\r\n * distribute the nodes along the x-axis.\r\n *\r\n * In the following example, the default options were used and *node*.heightRatio was set to Number(*node*.id)+1:\r\n * <img alt=\"arquint example\" src=\"media://arquint.png\" width=\"400\">\r\n *\r\n * @packageDocumentation\r\n */\r\n/** @internal */\r\nfunction buildOperator$e(debugVal, width, height, layeringOp, decrossOp, columnOp, coordOp, layerSep, colWidth, colSep, heightRatioOp) {\r\n    // TODO it'd be good to see this wrapped up in height somehow\r\n    function getLongestPaths(dag) {\r\n        const longestPaths = new SafeMap();\r\n        for (const node of dag.idescendants(\"after\")) {\r\n            const childPaths = Math.max(0, ...node.ichildren().map((child) => longestPaths.getThrow(child.id)));\r\n            longestPaths.set(node.id, heightRatioOp(node) + childPaths);\r\n        }\r\n        return longestPaths;\r\n    }\r\n    // TODO it'd be good to see this wrapped up in depth somehow\r\n    function getLongestPathsRoot(dag) {\r\n        const longestPaths = new SafeMap();\r\n        for (const node of dag.idescendants(\"before\")) {\r\n            const pathLength = longestPaths.getDefault(node.id, 0) + heightRatioOp(node);\r\n            longestPaths.set(node.id, pathLength);\r\n            for (const child of node.ichildren()) {\r\n                const childLength = Math.max(pathLength, longestPaths.getDefault(child.id, 0));\r\n                longestPaths.set(child.id, childLength);\r\n            }\r\n        }\r\n        return longestPaths;\r\n    }\r\n    // Takes a dag where nodes have a layer attribute, and adds dummy nodes so each\r\n    // layer is adjacent and each path ends in the last layer, and returns an array of each layer of nodes.\r\n    function createLayers(dag) {\r\n        const layers = [];\r\n        const maxLayer = Math.max(...dag.idescendants().map((node) => node.layer));\r\n        for (const node of dag) {\r\n            const nlayer = node.layer;\r\n            const layer = layers[nlayer] || (layers[nlayer] = []);\r\n            layer.push(node);\r\n            // add dummy nodes in place of children\r\n            node.dataChildren = node.dataChildren.map((link) => {\r\n                const clayer = link.child.layer;\r\n                if (clayer <= nlayer) {\r\n                    throw new Error(`layering left child node \"${link.child.id}\" (${clayer}) ` +\r\n                        `with a greater or equal layer to parent node \"${node.id}\" (${nlayer})`);\r\n                }\r\n                // NOTE this cast breaks the type system, but sugiyama basically\r\n                // needs to do that, so...\r\n                let last = link.child;\r\n                for (let l = clayer - 1; l > nlayer; l--) {\r\n                    let dummyId;\r\n                    if (debugVal) {\r\n                        dummyId = `${node.id}->${link.child.id} (${l})`;\r\n                    }\r\n                    else {\r\n                        dummyId = `${node.id}\\0${link.child.id}\\0${l}`;\r\n                    }\r\n                    const dummy = new DummyNode$1(dummyId);\r\n                    dummy.dataChildren.push(new LayoutChildLink(last, undefined));\r\n                    (layers[l] || (layers[l] = [])).push(dummy);\r\n                    last = dummy;\r\n                }\r\n                // NOTE this cast breaks the type system, but sugiyama basically\r\n                // needs to do that, so...\r\n                return new LayoutChildLink(last, link.data);\r\n            });\r\n            if (node.dataChildren.length === 0 && nlayer < maxLayer) {\r\n                // insert a dummy node per layer\r\n                let last = new DummyNode$1(debugVal ? `${node.id} (${maxLayer})` : `${node.id}\\0${maxLayer}`);\r\n                (layers[maxLayer] || (layers[maxLayer] = [])).push(last);\r\n                for (let l = maxLayer - 1; l > node.layer; l--) {\r\n                    const dummy = new DummyNode$1(debugVal ? `${node.id} (${maxLayer})` : `${node.id}\\0${maxLayer}`);\r\n                    dummy.dataChildren.push(new LayoutChildLink(last, undefined));\r\n                    (layers[l] || (layers[l] = [])).push(dummy);\r\n                    last = dummy;\r\n                }\r\n                node.dataChildren = [new LayoutChildLink(last, undefined)];\r\n            }\r\n        }\r\n        return layers;\r\n    }\r\n    function scale(dag, totalPathLength) {\r\n        for (const node of dag) {\r\n            node.x0 *= width;\r\n            node.x1 *= width;\r\n            node.y0 *= height / totalPathLength;\r\n            node.y1 *= height / totalPathLength;\r\n        }\r\n    }\r\n    function removeDummies(dag) {\r\n        for (const node of dag) {\r\n            /* istanbul ignore next */\r\n            if (!(node instanceof DummyNode$1)) {\r\n                const newDataChildren = [];\r\n                for (const link of node.dataChildren) {\r\n                    let child = link.child;\r\n                    const points = [{ x: (node.x0 + node.x1) / 2, y: node.y1 }];\r\n                    while (child !== undefined && child instanceof DummyNode$1) {\r\n                        // dummies have height 0, so it should not matter whether\r\n                        // getCenterTop or getCenterBottom is used\r\n                        points.push({ x: (child.x0 + child.x1) / 2, y: child.y0 });\r\n                        [child] = child.ichildren();\r\n                    }\r\n                    if (child !== undefined) {\r\n                        points.push({ x: (child.x0 + child.x1) / 2, y: child.y0 });\r\n                        const newLink = new LayoutChildLink(child, link.data, points);\r\n                        newDataChildren.push(newLink);\r\n                    }\r\n                }\r\n                node.dataChildren = newDataChildren;\r\n            }\r\n        }\r\n    }\r\n    function arquintCall(dag) {\r\n        const longestPaths = getLongestPaths(dag);\r\n        // compute layers\r\n        layeringOp(dag);\r\n        // verify layering\r\n        for (const node of dag) {\r\n            const layer = node.layer;\r\n            if (layer === undefined) {\r\n                throw new Error(`layering did not assign layer to node '${node.id}'`);\r\n            }\r\n            else if (layer < 0) {\r\n                throw new Error(`layering assigned a negative layer (${layer}) to node '${node.id}'`);\r\n            }\r\n        }\r\n        const layers = createLayers(dag);\r\n        // assign y\r\n        let totalPathLength;\r\n        if (layers.length === 1) {\r\n            const [layer] = layers;\r\n            for (const node of layer) {\r\n                node.y0 = 0;\r\n                node.y1 = 1;\r\n            }\r\n            totalPathLength = 1;\r\n        }\r\n        else {\r\n            const longestToRoot = getLongestPathsRoot(dag);\r\n            let last = layers[0];\r\n            const maxPathLength = Math.max(...last.map((node) => longestPaths.getThrow(node.id)));\r\n            for (const node of last) {\r\n                const y1 = (node.y1 = longestToRoot.getThrow(node.id));\r\n                node.y0 = y1 - heightRatioOp(node);\r\n            }\r\n            totalPathLength = 0;\r\n            for (const [i, layer] of layers.slice(1).entries()) {\r\n                totalPathLength += layerSep(last, layer, i);\r\n                for (const node of layer) {\r\n                    const y1 = (node.y1 =\r\n                        totalPathLength + longestToRoot.getThrow(node.id));\r\n                    node.y0 = y1 - heightRatioOp(node);\r\n                }\r\n                last = layer;\r\n            }\r\n            totalPathLength += maxPathLength;\r\n        }\r\n        // minimize edge crossings\r\n        decrossOp(layers);\r\n        // assign an index to each node indicating the \"column\" in which it should be placed\r\n        columnOp(layers);\r\n        // verify indexing\r\n        for (const layer of layers) {\r\n            for (const node of layer) {\r\n                if (node.columnIndex === undefined) {\r\n                    throw new Error(`column did not assign an index to node '${node.id}'`);\r\n                }\r\n                else if (node.columnIndex < 0) {\r\n                    throw new Error(`column assigned a negative index (${node.columnIndex}) to node '${node.id}'`);\r\n                }\r\n            }\r\n        }\r\n        // assign coordinates\r\n        coordOp(layers, colWidth, colSep);\r\n        // verify xes\r\n        for (const layer of layers) {\r\n            for (const node of layer) {\r\n                if (node.x0 === undefined || node.x1 === undefined) {\r\n                    throw new Error(`coord did not assign both x coordinates to node '${node.id}'`);\r\n                }\r\n                else if (node.x0 > node.x1) {\r\n                    throw new Error(`coord did not assign valid x coordinates to node '${node.id}'`);\r\n                }\r\n            }\r\n        }\r\n        const finished = dag;\r\n        // scale x and y\r\n        scale(finished, totalPathLength);\r\n        // remove dummy nodes and update edge data\r\n        removeDummies(finished);\r\n        return finished;\r\n    }\r\n    function size(val) {\r\n        if (val === undefined) {\r\n            return [width, height];\r\n        }\r\n        else {\r\n            const [newWidth, newHeight] = val;\r\n            return buildOperator$e(debugVal, newWidth, newHeight, layeringOp, decrossOp, columnOp, coordOp, layerSep, colWidth, colSep, heightRatioOp);\r\n        }\r\n    }\r\n    arquintCall.size = size;\r\n    function layering(newLayering) {\r\n        if (newLayering === undefined) {\r\n            return layeringOp;\r\n        }\r\n        else {\r\n            return buildOperator$e(debugVal, width, height, newLayering, decrossOp, columnOp, coordOp, layerSep, colWidth, colSep, heightRatioOp);\r\n        }\r\n    }\r\n    arquintCall.layering = layering;\r\n    function decross(newDecross) {\r\n        if (newDecross === undefined) {\r\n            return decrossOp;\r\n        }\r\n        else {\r\n            return buildOperator$e(debugVal, width, height, layeringOp, newDecross, columnOp, coordOp, layerSep, colWidth, colSep, heightRatioOp);\r\n        }\r\n    }\r\n    arquintCall.decross = decross;\r\n    function column(newColumn) {\r\n        if (newColumn === undefined) {\r\n            return columnOp;\r\n        }\r\n        else {\r\n            return buildOperator$e(debugVal, width, height, layeringOp, decrossOp, newColumn, coordOp, layerSep, colWidth, colSep, heightRatioOp);\r\n        }\r\n    }\r\n    arquintCall.column = column;\r\n    function coord(newCoord) {\r\n        if (newCoord === undefined) {\r\n            return coordOp;\r\n        }\r\n        else {\r\n            return buildOperator$e(debugVal, width, height, layeringOp, decrossOp, columnOp, newCoord, layerSep, colWidth, colSep, heightRatioOp);\r\n        }\r\n    }\r\n    arquintCall.coord = coord;\r\n    function layerSeparation(newSep) {\r\n        if (newSep === undefined) {\r\n            return layerSep;\r\n        }\r\n        else {\r\n            return buildOperator$e(debugVal, width, height, layeringOp, decrossOp, columnOp, coordOp, newSep, colWidth, colSep, heightRatioOp);\r\n        }\r\n    }\r\n    arquintCall.layerSeparation = layerSeparation;\r\n    function columnWidth(newWidth) {\r\n        if (newWidth === undefined) {\r\n            return colWidth;\r\n        }\r\n        else {\r\n            return buildOperator$e(debugVal, width, height, layeringOp, decrossOp, columnOp, coordOp, layerSep, newWidth, colSep, heightRatioOp);\r\n        }\r\n    }\r\n    arquintCall.columnWidth = columnWidth;\r\n    function columnSeparation(newSep) {\r\n        if (newSep === undefined) {\r\n            return colSep;\r\n        }\r\n        else {\r\n            return buildOperator$e(debugVal, width, height, layeringOp, decrossOp, columnOp, coordOp, layerSep, colWidth, newSep, heightRatioOp);\r\n        }\r\n    }\r\n    arquintCall.columnSeparation = columnSeparation;\r\n    return arquintCall;\r\n}\r\n/** @internal */\r\nfunction defaultLayerSeparation() {\r\n    return 1;\r\n}\r\n/** @internal */\r\nfunction defaultColumnWidth() {\r\n    return 10;\r\n}\r\n/** @internal */\r\nfunction defaultColumnSeparation() {\r\n    return 1;\r\n}\r\n/** @internal */\r\nfunction hasHeightRatio(node) {\r\n    const heightRatio = node.heightRatio;\r\n    return heightRatio === undefined || typeof heightRatio === \"number\";\r\n}\r\n/** @internal */\r\nfunction defaultHeightRatio(node) {\r\n    if (node instanceof DummyNode$1) {\r\n        return 0;\r\n    }\r\n    else if (hasHeightRatio(node)) {\r\n        return node.heightRatio || 0;\r\n    }\r\n    else {\r\n        throw new Error(`default height ratio expects node with heightRatio property but got nothing`);\r\n    }\r\n}\r\n/**\r\n * Construct a new Arquint layout operator with the default settings.\r\n */\r\nfunction arquint() {\r\n    return buildOperator$e(false, 1, 1, longestPath().topDown(false), twoLayer(), complex(), spread(), defaultLayerSeparation, defaultColumnWidth, defaultColumnSeparation, defaultHeightRatio);\r\n}\n\n/** @interal */\r\nfunction buildOperator$f(centerVal) {\r\n    function adjacentCall(layers) {\r\n        // assigns column indices to the layer with most nodes first.\r\n        // afterwards starting from the layer with most nodes, column indices are assigned\r\n        // to nodes in adjacent layers. Column indices are assigned with respect to the\r\n        // node's parents or children while maintaining the same ordering in the layer.\r\n        // overlapping nodes can occur because nodes can be placed in the same column\r\n        // although they do not have a children/parents relation with each other\r\n        // create parents\r\n        const parentMap = new SafeMap();\r\n        for (const layer of layers) {\r\n            for (const node of layer) {\r\n                for (const child of node.ichildren()) {\r\n                    parentMap.setIfAbsent(child.id, []).push(node);\r\n                }\r\n            }\r\n        }\r\n        // find layer index with most entries:\r\n        const maxNodesCount = Math.max(...layers.map((layer) => layer.length));\r\n        const maxNodesLayerIndex = layers.findIndex((layer) => layer.length === maxNodesCount);\r\n        // layer with most nodes simply assign columnIndex to the node's index:\r\n        for (const [index, node] of layers[maxNodesLayerIndex].entries()) {\r\n            node.columnIndex = index;\r\n        }\r\n        // layer with most nodes stays unchanged\r\n        // first, visit each layer above the layer with most nodes\r\n        for (const layer of layers.slice(0, maxNodesLayerIndex).reverse()) {\r\n            fillLayerBackward(layer);\r\n        }\r\n        // then, visit each layer below the layer with most nodes\r\n        for (const layer of layers.slice(maxNodesLayerIndex + 1)) {\r\n            fillLayerForward(layer);\r\n        }\r\n        function fillLayerBackward(layer) {\r\n            if (layer.length === maxNodesCount) {\r\n                // leave layer unchanged\r\n                for (const [index, node] of layer.entries()) {\r\n                    node.columnIndex = index;\r\n                }\r\n            }\r\n            else {\r\n                // map each node to its desired location:\r\n                const desiredColumnIndices = layer.map((node, index) => {\r\n                    if (node.dataChildren.length === 0) {\r\n                        return index;\r\n                    }\r\n                    const childrenColumnIndices = [\r\n                        ...node.ichildren().map((child) => def(child.columnIndex))\r\n                    ];\r\n                    if (centerVal) {\r\n                        // return column index of middle child\r\n                        return childrenColumnIndices.sort((a, b) => a - b)[Math.floor((childrenColumnIndices.length - 1) / 2)];\r\n                    }\r\n                    else {\r\n                        return Math.min(...childrenColumnIndices);\r\n                    }\r\n                });\r\n                // based on the desired column index, the actual column index needs to\r\n                // be assigned however, the column indices have to be strictly\r\n                // monotonically increasing and have to be greater or equal 0 and\r\n                // smaller than maxNodesCount!\r\n                const indices = optimizeColumnIndices(desiredColumnIndices);\r\n                for (const [index, node] of layer.entries()) {\r\n                    node.columnIndex = indices[index];\r\n                }\r\n            }\r\n        }\r\n        function fillLayerForward(layer) {\r\n            if (layer.length === maxNodesCount) {\r\n                // leave layer unchanged\r\n                for (const [index, node] of layer.entries()) {\r\n                    node.columnIndex = index;\r\n                }\r\n            }\r\n            else {\r\n                // map each node to its desired location:\r\n                const desiredColumnIndices = layer.map((node, index) => {\r\n                    const parents = parentMap.getDefault(node.id, []);\r\n                    if (parents.length === 0) {\r\n                        return index;\r\n                    }\r\n                    const parentColumnIndices = parents.map((par) => def(par.columnIndex));\r\n                    if (centerVal) {\r\n                        // return column index of middle parent\r\n                        return parentColumnIndices[Math.floor((parentColumnIndices.length - 1) / 2)];\r\n                    }\r\n                    else {\r\n                        return Math.min(...parentColumnIndices);\r\n                    }\r\n                });\r\n                // based on the desired column index, the actual column index needs to\r\n                // be assigned however, the column indices have to be strictly\r\n                // monotonically increasing and have to be greater or equal 0 and\r\n                // smaller than maxNodesCount!\r\n                const indices = optimizeColumnIndices(desiredColumnIndices);\r\n                for (const [index, node] of layer.entries()) {\r\n                    node.columnIndex = indices[index];\r\n                }\r\n            }\r\n        }\r\n        function optimizeColumnIndices(desiredColumnIndices) {\r\n            for (const columnIndex of desiredColumnIndices) {\r\n                if (!isFinite(columnIndex)) {\r\n                    throw new Error(`columnComplex: non-finite column index encountered`);\r\n                }\r\n            }\r\n            // step 1: reorder indices such that they are strictly monotonically increasing\r\n            let largestIndex = -1;\r\n            desiredColumnIndices = desiredColumnIndices.map((columnIndex) => {\r\n                if (columnIndex <= largestIndex) {\r\n                    columnIndex = largestIndex + 1;\r\n                }\r\n                largestIndex = columnIndex;\r\n                return columnIndex;\r\n            });\r\n            // step 2: shift indices such that they are larger or equal 0 and smaller than maxNodesCount\r\n            const max = Math.max(...desiredColumnIndices);\r\n            const downShift = max - (maxNodesCount - 1);\r\n            if (downShift > 0) {\r\n                // nodes need to be shifted by that amount\r\n                desiredColumnIndices = desiredColumnIndices.map((columnIndex, index) => Math.max(columnIndex - downShift, index));\r\n            }\r\n            return desiredColumnIndices;\r\n        }\r\n    }\r\n    function center(val) {\r\n        if (val === undefined) {\r\n            return centerVal;\r\n        }\r\n        else {\r\n            return buildOperator$f(val);\r\n        }\r\n    }\r\n    adjacentCall.center = center;\r\n    return adjacentCall;\r\n}\r\n/** Create a default adjacent operator. */\r\nfunction adjacent(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to adjacent(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    return buildOperator$f(false);\r\n}\n\n/** Create a center column operator. */\r\nfunction center$1(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to center(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    function centerCall(layers) {\r\n        const maxNodesPerLayer = Math.max(...layers.map((layer) => layer.length));\r\n        for (const layer of layers) {\r\n            const startColumnIndex = Math.floor((maxNodesPerLayer - layer.length) / 2);\r\n            for (const [index, node] of layer.entries()) {\r\n                node.columnIndex = startColumnIndex + index;\r\n            }\r\n        }\r\n    }\r\n    return centerCall;\r\n}\n\n/** Construct a left operator. */\r\nfunction left(...args) {\r\n    if (args.length) {\r\n        throw new Error(`got arguments to left(${args}), but constructor takes no aruguments.`);\r\n    }\r\n    function leftCall(layers) {\r\n        for (const layer of layers) {\r\n            for (const [index, node] of layer.entries()) {\r\n                node.columnIndex = index;\r\n            }\r\n        }\r\n    }\r\n    return leftCall;\r\n}\n\nexport { DummyNode$1 as ArqDummyNode, DummyNode as SugiDummyNode, spread as arqcoordSpread, arquint, adjacent as columnAdjacent, center$1 as columnCenter, complex as columnComplex, left as columnLeft, center as coordCenter, greedy as coordGreedy, minCurve as coordMinCurve, quad as coordQuad, topological$1 as coordTopological, quad as coordVert, connect as dagConnect, hierarchy as dagHierarchy, stratify as dagStratify, opt as decrossOpt, twoLayer as decrossTwoLayer, coffmanGraham as layeringCoffmanGraham, longestPath as layeringLongestPath, simplex as layeringSimplex, topological as layeringTopological, sugiyama, mean as twolayerMean, median as twolayerMedian, opt$1 as twolayerOpt, zherebko };\n","import Delaunator from \"delaunator\";\nimport Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nimport Voronoi from \"./voronoi.js\";\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nexport default class Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n","export {default as Delaunay} from \"./delaunay.js\";\nexport {default as Voronoi} from \"./voronoi.js\";\n","const epsilon = 1e-6;\n\nexport default class Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n","export default class Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n","import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export {default as dispatch} from \"./dispatch.js\";\n","export default x => () => x;\n","import {dispatch} from \"d3-dispatch\";\nimport {select, pointer} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\nimport constant from \"./constant.js\";\nimport DragEvent from \"./event.js\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(event, d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned(event, d) {\n    if (touchending || !filter.call(this, event, d)) return;\n    var gesture = beforestart(this, container.call(this, event, d), event, d, \"mouse\");\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation(event);\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\", event);\n  }\n\n  function mousemoved(event) {\n    noevent(event);\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\", event);\n  }\n\n  function mouseupped(event) {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent(event);\n    gestures.mouse(\"end\", event);\n  }\n\n  function touchstarted(event, d) {\n    if (!filter.call(this, event, d)) return;\n    var touches = event.changedTouches,\n        c = container.call(this, event, d),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(this, c, event, d, touches[i].identifier, touches[i])) {\n        nopropagation(event);\n        gesture(\"start\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchmoved(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent(event);\n        gesture(\"drag\", event, touches[i]);\n      }\n    }\n  }\n\n  function touchended(event) {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation(event);\n        gesture(\"end\", event, touches[i]);\n      }\n    }\n  }\n\n  function beforestart(that, container, event, d, identifier, touch) {\n    var dispatch = listeners.copy(),\n        p = pointer(touch || event, container), dx, dy,\n        s;\n\n    if ((s = subject.call(that, new DragEvent(\"beforestart\", {\n        sourceEvent: event,\n        target: drag,\n        identifier,\n        active,\n        x: p[0],\n        y: p[1],\n        dx: 0,\n        dy: 0,\n        dispatch\n      }), d)) == null) return;\n\n    dx = s.x - p[0] || 0;\n    dy = s.y - p[1] || 0;\n\n    return function gesture(type, event, touch) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[identifier] = gesture, n = active++; break;\n        case \"end\": delete gestures[identifier], --active; // nobreak\n        case \"drag\": p = pointer(touch || event, container), n = active; break;\n      }\n      dispatch.call(\n        type,\n        that,\n        new DragEvent(type, {\n          sourceEvent: event,\n          subject: s,\n          target: drag,\n          identifier,\n          active: n,\n          x: p[0] + dx,\n          y: p[1] + dy,\n          dx: p[0] - p0[0],\n          dy: p[1] - p0[1],\n          dispatch\n        }),\n        d\n      );\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function DragEvent(type, {\n  sourceEvent,\n  subject,\n  target,\n  identifier,\n  active,\n  x, y, dx, dy,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    subject: {value: subject, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    identifier: {value: identifier, enumerable: true, configurable: true},\n    active: {value: active, enumerable: true, configurable: true},\n    x: {value: x, enumerable: true, configurable: true},\n    y: {value: y, enumerable: true, configurable: true},\n    dx: {value: dx, enumerable: true, configurable: true},\n    dy: {value: dy, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","export {default as drag} from \"./drag.js\";\nexport {default as dragDisable, yesdrag as dragEnable} from \"./nodrag.js\";\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number, m;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (m = value.match(/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/)) {\n      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, \"/\").replace(/T/, \" \");\n      value = new Date(value);\n    }\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n\n// https://github.com/d3/d3-dsv/issues/45\nconst fixtz = new Date(\"2019-01-01T00:00\").getHours() || new Date(\"2019-07-01T00:00\").getHours();","import dsv from \"./dsv.js\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\nexport var csvFormatRow = csv.formatRow;\nexport var csvFormatValue = csv.formatValue;\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"] || \\\"\\\"\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows,\n    formatRow: formatRow,\n    formatValue: formatValue\n  };\n}\n","export {default as dsvFormat} from \"./dsv.js\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows, csvFormatRow, csvFormatValue} from \"./csv.js\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows, tsvFormatRow, tsvFormatValue} from \"./tsv.js\";\nexport {default as autoType} from \"./autoType.js\";\n","import dsv from \"./dsv.js\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\nexport var tsvFormatRow = tsv.formatRow;\nexport var tsvFormatValue = tsv.formatValue;\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return (t = +t) * t * (s * (t - 1) + t);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((t + 1) * s + t) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {tpmt} from \"./math.js\";\n\nvar tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * tpmt(-(--t)) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * tpmt(t = +t) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * tpmt(-t) * Math.sin((s - t) / p)\n        : 2 - a * tpmt(t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {tpmt} from \"./math.js\";\n\nexport function expIn(t) {\n  return tpmt(1 - +t);\n}\n\nexport function expOut(t) {\n  return 1 - tpmt(t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? tpmt(1 - t) : 2 - tpmt(t - 1)) / 2;\n}\n","export {\n  linear as easeLinear\n} from \"./linear.js\";\n\nexport {\n  quadInOut as easeQuad,\n  quadIn as easeQuadIn,\n  quadOut as easeQuadOut,\n  quadInOut as easeQuadInOut\n} from \"./quad.js\";\n\nexport {\n  cubicInOut as easeCubic,\n  cubicIn as easeCubicIn,\n  cubicOut as easeCubicOut,\n  cubicInOut as easeCubicInOut\n} from \"./cubic.js\";\n\nexport {\n  polyInOut as easePoly,\n  polyIn as easePolyIn,\n  polyOut as easePolyOut,\n  polyInOut as easePolyInOut\n} from \"./poly.js\";\n\nexport {\n  sinInOut as easeSin,\n  sinIn as easeSinIn,\n  sinOut as easeSinOut,\n  sinInOut as easeSinInOut\n} from \"./sin.js\";\n\nexport {\n  expInOut as easeExp,\n  expIn as easeExpIn,\n  expOut as easeExpOut,\n  expInOut as easeExpInOut\n} from \"./exp.js\";\n\nexport {\n  circleInOut as easeCircle,\n  circleIn as easeCircleIn,\n  circleOut as easeCircleOut,\n  circleInOut as easeCircleInOut\n} from \"./circle.js\";\n\nexport {\n  bounceOut as easeBounce,\n  bounceIn as easeBounceIn,\n  bounceOut as easeBounceOut,\n  bounceInOut as easeBounceInOut\n} from \"./bounce.js\";\n\nexport {\n  backInOut as easeBack,\n  backIn as easeBackIn,\n  backOut as easeBackOut,\n  backInOut as easeBackInOut\n} from \"./back.js\";\n\nexport {\n  elasticOut as easeElastic,\n  elasticIn as easeElasticIn,\n  elasticOut as easeElasticOut,\n  elasticInOut as easeElasticInOut\n} from \"./elastic.js\";\n","export const linear = t => +t;\n","// tpmt is two power minus ten times t scaled to [0,1]\nexport function tpmt(x) {\n  return (Math.pow(2, -10 * x) - 0.0009765625) * 1.0009775171065494;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return (+t === 1) ? 1 : 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","export {default as blob} from \"./blob.js\";\nexport {default as buffer} from \"./buffer.js\";\nexport {default as dsv, csv, tsv} from \"./dsv.js\";\nexport {default as image} from \"./image.js\";\nexport {default as json} from \"./json.js\";\nexport {default as text} from \"./text.js\";\nexport {default as xml, html, svg} from \"./xml.js\";\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  if (response.status === 204 || response.status === 205) return;\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import text from \"./text.js\";\n\nfunction parser(type) {\n  return (input, init) => text(input, init)\n    .then(text => (new DOMParser).parseFromString(text, type));\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes, strength = 1;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = (sx / n - x) * strength, sy = (sy / n - y) * strength, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      random,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(random), l += x * x;\n            if (y === 0) y = jiggle(random), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export {default as forceCenter} from \"./center.js\";\nexport {default as forceCollide} from \"./collide.js\";\nexport {default as forceLink} from \"./link.js\";\nexport {default as forceManyBody} from \"./manyBody.js\";\nexport {default as forceRadial} from \"./radial.js\";\nexport {default as forceSimulation} from \"./simulation.js\";\nexport {default as forceX} from \"./x.js\";\nexport {default as forceY} from \"./y.js\";\n","export default function(random) {\n  return (random() - 0.5) * 1e-6;\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      random,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(random), l += x * x;\n        if (y === 0) y = jiggle(random), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(random), l += x * x;\n      if (y === 0) y = jiggle(random), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\nimport lcg from \"./lcg.js\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\"),\n      random = lcg();\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(0.5 + i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes, random);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    randomSource: function(_) {\n      return arguments.length ? (random = _, forces.forEach(initializeForce), simulation) : random;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","export {default as formatDefaultLocale, format, formatPrefix} from \"./defaultLocale.js\";\nexport {default as formatLocale} from \"./locale.js\";\nexport {default as formatSpecifier, FormatSpecifier} from \"./formatSpecifier.js\";\nexport {default as precisionFixed} from \"./precisionFixed.js\";\nexport {default as precisionPrefix} from \"./precisionPrefix.js\";\nexport {default as precisionRound} from \"./precisionRound.js\";\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import clipRectangle from \"./rectangle.js\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {default as polygonContains} from \"./polygonContains.js\";\nimport {default as distance} from \"./distance.js\";\nimport {epsilon2, radians} from \"./math.js\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","export default x => x;\n","export {default as geoArea} from \"./area.js\";\nexport {default as geoBounds} from \"./bounds.js\";\nexport {default as geoCentroid} from \"./centroid.js\";\nexport {default as geoCircle} from \"./circle.js\";\nexport {default as geoClipAntimeridian} from \"./clip/antimeridian.js\";\nexport {default as geoClipCircle} from \"./clip/circle.js\";\nexport {default as geoClipExtent} from \"./clip/extent.js\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\nexport {default as geoClipRectangle} from \"./clip/rectangle.js\";\nexport {default as geoContains} from \"./contains.js\";\nexport {default as geoDistance} from \"./distance.js\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./graticule.js\";\nexport {default as geoInterpolate} from \"./interpolate.js\";\nexport {default as geoLength} from \"./length.js\";\nexport {default as geoPath} from \"./path/index.js\";\nexport {default as geoAlbers} from \"./projection/albers.js\";\nexport {default as geoAlbersUsa} from \"./projection/albersUsa.js\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./projection/azimuthalEqualArea.js\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./projection/azimuthalEquidistant.js\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./projection/conicConformal.js\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./projection/conicEqualArea.js\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./projection/conicEquidistant.js\";\nexport {default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw} from \"./projection/equalEarth.js\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./projection/equirectangular.js\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./projection/gnomonic.js\";\nexport {default as geoIdentity} from \"./projection/identity.js\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./projection/index.js\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./projection/mercator.js\";\nexport {default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw} from \"./projection/naturalEarth1.js\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./projection/orthographic.js\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./projection/stereographic.js\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./projection/transverseMercator.js\";\nexport {default as geoRotation} from \"./rotation.js\";\nexport {default as geoStream} from \"./stream.js\";\nexport {default as geoTransform} from \"./transform.js\";\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export {default as cluster} from \"./cluster.js\";\nexport {default as hierarchy} from \"./hierarchy/index.js\";\nexport {default as pack} from \"./pack/index.js\";\nexport {default as packSiblings} from \"./pack/siblings.js\";\nexport {default as packEnclose} from \"./pack/enclose.js\";\nexport {default as partition} from \"./partition.js\";\nexport {default as stratify} from \"./stratify.js\";\nexport {default as tree} from \"./tree.js\";\nexport {default as treemap} from \"./treemap/index.js\";\nexport {default as treemapBinary} from \"./treemap/binary.js\";\nexport {default as treemapDice} from \"./treemap/dice.js\";\nexport {default as treemapSlice} from \"./treemap/slice.js\";\nexport {default as treemapSliceDice} from \"./treemap/sliceDice.js\";\nexport {default as treemapSquarify} from \"./treemap/squarify.js\";\nexport {default as treemapResquarify} from \"./treemap/resquarify.js\";\n","import {shuffle} from \"../array.js\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(Array.from(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import {packEnclose} from \"./siblings.js\";\nimport {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","import array from \"../array.js\";\nimport enclose from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","import roundNode from \"./treemap/round.js\";\nimport treemapDice from \"./treemap/dice.js\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        n = nodes.length,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map;\n\n    for (i = 0; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = parentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index.js\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\nimport {phi, squarifyRatio} from \"./squarify.js\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += (y1 - y0) * row.value / value : y1);\n        else treemapSlice(row, x0, y0, value ? x0 += (x1 - x0) * row.value / value : x1, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","export default x => () => x;\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {hue} from \"./color.js\";\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n","export {default as interpolate} from \"./value.js\";\nexport {default as interpolateArray} from \"./array.js\";\nexport {default as interpolateBasis} from \"./basis.js\";\nexport {default as interpolateBasisClosed} from \"./basisClosed.js\";\nexport {default as interpolateDate} from \"./date.js\";\nexport {default as interpolateDiscrete} from \"./discrete.js\";\nexport {default as interpolateHue} from \"./hue.js\";\nexport {default as interpolateNumber} from \"./number.js\";\nexport {default as interpolateNumberArray} from \"./numberArray.js\";\nexport {default as interpolateObject} from \"./object.js\";\nexport {default as interpolateRound} from \"./round.js\";\nexport {default as interpolateString} from \"./string.js\";\nexport {interpolateTransformCss, interpolateTransformSvg} from \"./transform/index.js\";\nexport {default as interpolateZoom} from \"./zoom.js\";\nexport {default as interpolateRgb, rgbBasis as interpolateRgbBasis, rgbBasisClosed as interpolateRgbBasisClosed} from \"./rgb.js\";\nexport {default as interpolateHsl, hslLong as interpolateHslLong} from \"./hsl.js\";\nexport {default as interpolateLab} from \"./lab.js\";\nexport {default as interpolateHcl, hclLong as interpolateHclLong} from \"./hcl.js\";\nexport {default as interpolateCubehelix, cubehelixLong as interpolateCubehelixLong} from \"./cubehelix.js\";\nexport {default as piecewise} from \"./piecewise.js\";\nexport {default as quantize} from \"./quantize.js\";\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color.js\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import {default as value} from \"./value.js\";\n\nexport default function piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n","export {default as path} from \"./path.js\";\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross.js\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  const n = points.length,\n      indexes = [0, 1];\n  let size = 2, i;\n\n  for (i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export {default as polygonArea} from \"./area.js\";\nexport {default as polygonCentroid} from \"./centroid.js\";\nexport {default as polygonHull} from \"./hull.js\";\nexport {default as polygonContains} from \"./contains.js\";\nexport {default as polygonLength} from \"./length.js\";\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.hypot(xa, ya);\n  }\n\n  return perimeter;\n}\n","export default function(d) {\n  const x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0 || 1,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad.js\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export {default as quadtree} from \"./quadtree.js\";\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add.js\";\nimport tree_cover from \"./cover.js\";\nimport tree_data from \"./data.js\";\nimport tree_extent from \"./extent.js\";\nimport tree_find from \"./find.js\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove.js\";\nimport tree_root from \"./root.js\";\nimport tree_size from \"./size.js\";\nimport tree_visit from \"./visit.js\";\nimport tree_visitAfter from \"./visitAfter.js\";\nimport tree_x, {defaultX} from \"./x.js\";\nimport tree_y, {defaultY} from \"./y.js\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import defaultSource from \"./defaultSource.js\";\nimport irwinHall from \"./irwinHall.js\";\n\nexport default (function sourceRandomBates(source) {\n  var I = irwinHall.source(source);\n\n  function randomBates(n) {\n    // use limiting distribution at n === 0\n    if ((n = +n) === 0) return source;\n    var randomIrwinHall = I(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomBernoulli(source) {\n  function randomBernoulli(p) {\n    if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\n    return function() {\n      return Math.floor(source() + p);\n    };\n  }\n\n  randomBernoulli.source = sourceRandomBernoulli;\n\n  return randomBernoulli;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\nimport gamma from \"./gamma.js\";\n\nexport default (function sourceRandomBeta(source) {\n  var G = gamma.source(source);\n\n  function randomBeta(alpha, beta) {\n    var X = G(alpha),\n        Y = G(beta);\n    return function() {\n      var x = X();\n      return x === 0 ? 0 : x / (x + Y());\n    };\n  }\n\n  randomBeta.source = sourceRandomBeta;\n\n  return randomBeta;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\nimport beta from \"./beta.js\";\nimport geometric from \"./geometric.js\";\n\nexport default (function sourceRandomBinomial(source) {\n  var G = geometric.source(source),\n      B = beta.source(source);\n\n  function randomBinomial(n, p) {\n    n = +n;\n    if ((p = +p) >= 1) return () => n;\n    if (p <= 0) return () => 0;\n    return function() {\n      var acc = 0, nn = n, pp = p;\n      while (nn * pp > 16 && nn * (1 - pp) > 16) {\n        var i = Math.floor((nn + 1) * pp),\n            y = B(i, nn - i + 1)();\n        if (y <= pp) {\n          acc += i;\n          nn -= i;\n          pp = (pp - y) / (1 - y);\n        } else {\n          nn = i - 1;\n          pp /= y;\n        }\n      }\n      var sign = pp < 0.5,\n          pFinal = sign ? pp : 1 - pp,\n          g = G(pFinal);\n      for (var s = g(), k = 0; s <= nn; ++k) s += g();\n      return acc + (sign ? k : nn - k);\n    };\n  }\n\n  randomBinomial.source = sourceRandomBinomial;\n\n  return randomBinomial;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomCauchy(source) {\n  function randomCauchy(a, b) {\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      return a + b * Math.tan(Math.PI * source());\n    };\n  }\n\n  randomCauchy.source = sourceRandomCauchy;\n\n  return randomCauchy;\n})(defaultSource);\n","export default Math.random;\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log1p(-source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\nimport normal from \"./normal.js\";\n\nexport default (function sourceRandomGamma(source) {\n  var randomNormal = normal.source(source)();\n\n  function randomGamma(k, theta) {\n    if ((k = +k) < 0) throw new RangeError(\"invalid k\");\n    // degenerate distribution if k === 0\n    if (k === 0) return () => 0;\n    theta = theta == null ? 1 : +theta;\n    // exponential distribution if k === 1\n    if (k === 1) return () => -Math.log1p(-source()) * theta;\n\n    var d = (k < 1 ? k + 1 : k) - 1 / 3,\n        c = 1 / (3 * Math.sqrt(d)),\n        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;\n    return function() {\n      do {\n        do {\n          var x = randomNormal(),\n              v = 1 + c * x;\n        } while (v <= 0);\n        v *= v * v;\n        var u = 1 - source();\n      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\n      return d * v * multiplier() * theta;\n    };\n  }\n\n  randomGamma.source = sourceRandomGamma;\n\n  return randomGamma;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomGeometric(source) {\n  function randomGeometric(p) {\n    if ((p = +p) < 0 || p > 1) throw new RangeError(\"invalid p\");\n    if (p === 0) return () => Infinity;\n    if (p === 1) return () => 1;\n    p = Math.log1p(-p);\n    return function() {\n      return 1 + Math.floor(Math.log1p(-source()) / p);\n    };\n  }\n\n  randomGeometric.source = sourceRandomGeometric;\n\n  return randomGeometric;\n})(defaultSource);\n","export {default as randomUniform} from \"./uniform.js\";\nexport {default as randomInt} from \"./int.js\";\nexport {default as randomNormal} from \"./normal.js\";\nexport {default as randomLogNormal} from \"./logNormal.js\";\nexport {default as randomBates} from \"./bates.js\";\nexport {default as randomIrwinHall} from \"./irwinHall.js\";\nexport {default as randomExponential} from \"./exponential.js\";\nexport {default as randomPareto} from \"./pareto.js\";\nexport {default as randomBernoulli} from \"./bernoulli.js\";\nexport {default as randomGeometric} from \"./geometric.js\";\nexport {default as randomBinomial} from \"./binomial.js\";\nexport {default as randomGamma} from \"./gamma.js\";\nexport {default as randomBeta} from \"./beta.js\";\nexport {default as randomWeibull} from \"./weibull.js\";\nexport {default as randomCauchy} from \"./cauchy.js\";\nexport {default as randomLogistic} from \"./logistic.js\";\nexport {default as randomPoisson} from \"./poisson.js\";\nexport {default as randomLcg} from \"./lcg.js\";\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomInt(source) {\n  function randomInt(min, max) {\n    if (arguments.length < 2) max = min, min = 0;\n    min = Math.floor(min);\n    max = Math.floor(max) - min;\n    return function() {\n      return Math.floor(source() * max + min);\n    };\n  }\n\n  randomInt.source = sourceRandomInt;\n\n  return randomInt;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    if ((n = +n) <= 0) return () => 0;\n    return function() {\n      for (var sum = 0, i = n; i > 1; --i) sum += source();\n      return sum + i * source();\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst mul = 0x19660D;\nconst inc = 0x3C6EF35F;\nconst eps = 1 / 0x100000000;\n\nexport default function lcg(seed = Math.random()) {\n  let state = (0 <= seed && seed < 1 ? seed / eps : Math.abs(seed)) | 0;\n  return () => (state = mul * state + inc | 0, eps * (state >>> 0));\n}\n","import defaultSource from \"./defaultSource.js\";\nimport normal from \"./normal.js\";\n\nexport default (function sourceRandomLogNormal(source) {\n  var N = normal.source(source);\n\n  function randomLogNormal() {\n    var randomNormal = N.apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomLogistic(source) {\n  function randomLogistic(a, b) {\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      var u = source();\n      return a + b * Math.log(u / (1 - u));\n    };\n  }\n\n  randomLogistic.source = sourceRandomLogistic;\n\n  return randomLogistic;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomPareto(source) {\n  function randomPareto(alpha) {\n    if ((alpha = +alpha) < 0) throw new RangeError(\"invalid alpha\");\n    alpha = 1 / -alpha;\n    return function() {\n      return Math.pow(1 - source(), alpha);\n    };\n  }\n\n  randomPareto.source = sourceRandomPareto;\n\n  return randomPareto;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\nimport binomial from \"./binomial.js\";\nimport gamma from \"./gamma.js\";\n\nexport default (function sourceRandomPoisson(source) {\n  var G = gamma.source(source),\n      B = binomial.source(source);\n\n  function randomPoisson(lambda) {\n    return function() {\n      var acc = 0, l = lambda;\n      while (l > 16) {\n        var n = Math.floor(0.875 * l),\n            t = G(n)();\n        if (t > l) return acc + B(n - 1, l / t)();\n        acc += n;\n        l -= t;\n      }\n      for (var s = -Math.log1p(-source()), k = 0; s <= l; ++k) s -= Math.log1p(-source());\n      return acc + k;\n    };\n  }\n\n  randomPoisson.source = sourceRandomPoisson;\n\n  return randomPoisson;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource.js\";\n\nexport default (function sourceRandomWeibull(source) {\n  function randomWeibull(k, a, b) {\n    var outerFunc;\n    if ((k = +k) === 0) {\n      outerFunc = x => -Math.log(x);\n    } else {\n      k = 1 / k;\n      outerFunc = x => Math.pow(x, k);\n    }\n    a = a == null ? 0 : +a;\n    b = b == null ? 1 : +b;\n    return function() {\n      return a + b * outerFunc(-Math.log1p(-source()));\n    };\n  }\n\n  randomWeibull.source = sourceRandomWeibull;\n\n  return randomWeibull;\n})(defaultSource);\n","import colors from \"../colors.js\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n","import colors from \"../colors.js\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","export {default as schemeCategory10} from \"./categorical/category10.js\";\nexport {default as schemeAccent} from \"./categorical/Accent.js\";\nexport {default as schemeDark2} from \"./categorical/Dark2.js\";\nexport {default as schemePaired} from \"./categorical/Paired.js\";\nexport {default as schemePastel1} from \"./categorical/Pastel1.js\";\nexport {default as schemePastel2} from \"./categorical/Pastel2.js\";\nexport {default as schemeSet1} from \"./categorical/Set1.js\";\nexport {default as schemeSet2} from \"./categorical/Set2.js\";\nexport {default as schemeSet3} from \"./categorical/Set3.js\";\nexport {default as schemeTableau10} from \"./categorical/Tableau10.js\";\nexport {default as interpolateBrBG, scheme as schemeBrBG} from \"./diverging/BrBG.js\";\nexport {default as interpolatePRGn, scheme as schemePRGn} from \"./diverging/PRGn.js\";\nexport {default as interpolatePiYG, scheme as schemePiYG} from \"./diverging/PiYG.js\";\nexport {default as interpolatePuOr, scheme as schemePuOr} from \"./diverging/PuOr.js\";\nexport {default as interpolateRdBu, scheme as schemeRdBu} from \"./diverging/RdBu.js\";\nexport {default as interpolateRdGy, scheme as schemeRdGy} from \"./diverging/RdGy.js\";\nexport {default as interpolateRdYlBu, scheme as schemeRdYlBu} from \"./diverging/RdYlBu.js\";\nexport {default as interpolateRdYlGn, scheme as schemeRdYlGn} from \"./diverging/RdYlGn.js\";\nexport {default as interpolateSpectral, scheme as schemeSpectral} from \"./diverging/Spectral.js\";\nexport {default as interpolateBuGn, scheme as schemeBuGn} from \"./sequential-multi/BuGn.js\";\nexport {default as interpolateBuPu, scheme as schemeBuPu} from \"./sequential-multi/BuPu.js\";\nexport {default as interpolateGnBu, scheme as schemeGnBu} from \"./sequential-multi/GnBu.js\";\nexport {default as interpolateOrRd, scheme as schemeOrRd} from \"./sequential-multi/OrRd.js\";\nexport {default as interpolatePuBuGn, scheme as schemePuBuGn} from \"./sequential-multi/PuBuGn.js\";\nexport {default as interpolatePuBu, scheme as schemePuBu} from \"./sequential-multi/PuBu.js\";\nexport {default as interpolatePuRd, scheme as schemePuRd} from \"./sequential-multi/PuRd.js\";\nexport {default as interpolateRdPu, scheme as schemeRdPu} from \"./sequential-multi/RdPu.js\";\nexport {default as interpolateYlGnBu, scheme as schemeYlGnBu} from \"./sequential-multi/YlGnBu.js\";\nexport {default as interpolateYlGn, scheme as schemeYlGn} from \"./sequential-multi/YlGn.js\";\nexport {default as interpolateYlOrBr, scheme as schemeYlOrBr} from \"./sequential-multi/YlOrBr.js\";\nexport {default as interpolateYlOrRd, scheme as schemeYlOrRd} from \"./sequential-multi/YlOrRd.js\";\nexport {default as interpolateBlues, scheme as schemeBlues} from \"./sequential-single/Blues.js\";\nexport {default as interpolateGreens, scheme as schemeGreens} from \"./sequential-single/Greens.js\";\nexport {default as interpolateGreys, scheme as schemeGreys} from \"./sequential-single/Greys.js\";\nexport {default as interpolatePurples, scheme as schemePurples} from \"./sequential-single/Purples.js\";\nexport {default as interpolateReds, scheme as schemeReds} from \"./sequential-single/Reds.js\";\nexport {default as interpolateOranges, scheme as schemeOranges} from \"./sequential-single/Oranges.js\";\nexport {default as interpolateCividis} from \"./sequential-multi/cividis.js\";\nexport {default as interpolateCubehelixDefault} from \"./sequential-multi/cubehelix.js\";\nexport {default as interpolateRainbow, warm as interpolateWarm, cool as interpolateCool} from \"./sequential-multi/rainbow.js\";\nexport {default as interpolateSinebow} from \"./sequential-multi/sinebow.js\";\nexport {default as interpolateTurbo} from \"./sequential-multi/turbo.js\";\nexport {default as interpolateViridis, magma as interpolateMagma, inferno as interpolateInferno, plasma as interpolatePlasma} from \"./sequential-multi/viridis.js\";\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default scheme => interpolateRgbBasis(scheme[scheme.length - 1]);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67)))))))\n      + \")\";\n}\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","export default function(t) {\n  t = Math.max(0, Math.min(1, t));\n  return \"rgb(\"\n      + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + \", \"\n      + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66)))))))\n      + \")\";\n}\n","import colors from \"../colors.js\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors.js\";\nimport ramp from \"../ramp.js\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init.js\";\nimport ordinal from \"./ordinal.js\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      r0 = 0,\n      r1 = 1,\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = r1 < r0,\n        start = reverse ? r1 : r0,\n        stop = reverse ? r0 : r1;\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? ([r0, r1] = _, r0 = +r0, r1 = +r1, rescale()) : [r0, r1];\n  };\n\n  scale.rangeRound = function(_) {\n    return [r0, r1] = _, r0 = +r0, r1 = +r1, round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), [r0, r1])\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport constant from \"./constant.js\";\nimport number from \"./number.js\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = Array.from(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous() {\n  return transformer()(identity, identity);\n}\n","import {interpolate, interpolateRound, piecewise} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {copy} from \"./sequential.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      s = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (s * x < s * t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1, x2] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), t2 = transform(x2 = +x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1, scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1, r2;\n      return arguments.length ? ([r0, r1, r2] = _, interpolator = piecewise(interpolate, [r0, r1, r2]), scale) : [interpolator(0), interpolator(0.5), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), s = t1 < t0 ? -1 : 1;\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n","import {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = Array.from(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? Array.from(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","export {\n  default as scaleBand,\n  point as scalePoint\n} from \"./band.js\";\n\nexport {\n  default as scaleIdentity\n} from \"./identity.js\";\n\nexport {\n  default as scaleLinear\n} from \"./linear.js\";\n\nexport {\n  default as scaleLog\n} from \"./log.js\";\n\nexport {\n  default as scaleSymlog\n} from \"./symlog.js\";\n\nexport {\n  default as scaleOrdinal,\n  implicit as scaleImplicit\n} from \"./ordinal.js\";\n\nexport {\n  default as scalePow,\n  sqrt as scaleSqrt\n} from \"./pow.js\";\n\nexport {\n  default as scaleRadial\n} from \"./radial.js\";\n\nexport {\n  default as scaleQuantile\n} from \"./quantile.js\";\n\nexport {\n  default as scaleQuantize\n} from \"./quantize.js\";\n\nexport {\n  default as scaleThreshold\n} from \"./threshold.js\";\n\nexport {\n  default as scaleTime\n} from \"./time.js\";\n\nexport {\n  default as scaleUtc\n} from \"./utcTime.js\";\n\nexport {\n  default as scaleSequential,\n  sequentialLog as scaleSequentialLog,\n  sequentialPow as scaleSequentialPow,\n  sequentialSqrt as scaleSequentialSqrt,\n  sequentialSymlog as scaleSequentialSymlog\n} from \"./sequential.js\";\n\nexport {\n  default as scaleSequentialQuantile\n} from \"./sequentialQuantile.js\";\n\nexport {\n  default as scaleDiverging,\n  divergingLog as scaleDivergingLog,\n  divergingPow as scaleDivergingPow,\n  divergingSqrt as scaleDivergingSqrt,\n  divergingSymlog as scaleDivergingSymlog\n} from \"./diverging.js\";\n\nexport {\n  default as tickFormat\n} from \"./tickFormat.js\";\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport tickFormat from \"./tickFormat.js\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain();\n    var i0 = 0;\n    var i1 = d.length - 1;\n    var start = d[i0];\n    var stop = d[i1];\n    var prestep;\n    var step;\n    var maxIter = 10;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n    \n    while (maxIter-- > 0) {\n      step = tickIncrement(start, stop, count);\n      if (step === prestep) {\n        d[i0] = start\n        d[i1] = stop\n        return domain(d);\n      } else if (step > 0) {\n        start = Math.floor(start / step) * step;\n        stop = Math.ceil(stop / step) * step;\n      } else if (step < 0) {\n        start = Math.ceil(start * step) / step;\n        stop = Math.floor(stop * step) / step;\n      } else {\n        break;\n      }\n      prestep = step;\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous();\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.floor(i), j = Math.ceil(j);\n      if (u > 0) for (; i <= j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i <= j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n      if (z.length * 2 < n) z = ticks(u, v, n);\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","export default function(x) {\n  return +x;\n}\n","import {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new Map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new Map();\n    for (const value of _) {\n      const key = value + \"\";\n      if (index.has(key)) continue;\n      index.set(key, domain.push(value));\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, identity, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {linearish} from \"./linear.js\";\nimport {initRange} from \"./init.js\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, x0 = +x0, x1 = +x1, rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = Array.from(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import continuous from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport number from \"./number.js\";\n\nfunction square(x) {\n  return Math.sign(x) * x * x;\n}\n\nfunction unsquare(x) {\n  return Math.sign(x) * Math.sqrt(Math.abs(x));\n}\n\nexport default function radial() {\n  var squared = continuous(),\n      range = [0, 1],\n      round = false,\n      unknown;\n\n  function scale(x) {\n    var y = unsquare(squared(x));\n    return isNaN(y) ? unknown : round ? Math.round(y) : y;\n  }\n\n  scale.invert = function(y) {\n    return squared.invert(square(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (squared.domain(_), scale) : squared.domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (squared.range((range = Array.from(_, number)).map(square)), scale) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return scale.range(_).round(true);\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, scale) : round;\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (squared.clamp(_), scale) : squared.clamp();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return radial(squared.domain(), range)\n        .round(round)\n        .clamp(squared.clamp())\n        .unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {interpolate, interpolateRound} from \"d3-interpolate\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\nimport {linearish} from \"./linear.js\";\nimport {loggish} from \"./log.js\";\nimport {symlogish} from \"./symlog.js\";\nimport {powish} from \"./pow.js\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? ([x0, x1] = _, t0 = transform(x0 = +x0), t1 = transform(x1 = +x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  function range(interpolate) {\n    return function(_) {\n      var r0, r1;\n      return arguments.length ? ([r0, r1] = _, interpolator = interpolate(r0, r1), scale) : [interpolator(0), interpolator(1)];\n    };\n  }\n\n  scale.range = range(interpolate);\n\n  scale.rangeRound = range(interpolateRound);\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect, quantile} from \"d3-array\";\nimport {identity} from \"./continuous.js\";\nimport {initInterpolator} from \"./init.js\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((bisect(domain, x, 1) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (let d of _) if (d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.range = function() {\n    return domain.map((d, i) => interpolator(i / (domain.length - 1)));\n  };\n\n  scale.quantiles = function(n) {\n    return Array.from({length: n + 1}, (_, i) => quantile(domain, i / n));\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n","import {linearish} from \"./linear.js\";\nimport {copy, transformer} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {bisector, tickStep} from \"d3-array\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport continuous, {copy} from \"./continuous.js\";\nimport {initRange} from \"./init.js\";\nimport nice from \"./nice.js\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target),\n          step;\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n      return interval.every(step);\n    }\n\n    return interval;\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(Array.from(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1]))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {calendar} from \"./time.js\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\nimport {initRange} from \"./init.js\";\n\nexport default function() {\n  return initRange.apply(calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import creator from \"./creator.js\";\nimport select from \"./select.js\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","export {default as create} from \"./create.js\";\nexport {default as creator} from \"./creator.js\";\nexport {default as local} from \"./local.js\";\nexport {default as matcher} from \"./matcher.js\";\nexport {default as namespace} from \"./namespace.js\";\nexport {default as namespaces} from \"./namespaces.js\";\nexport {default as pointer} from \"./pointer.js\";\nexport {default as pointers} from \"./pointers.js\";\nexport {default as select} from \"./select.js\";\nexport {default as selectAll} from \"./selectAll.js\";\nexport {default as selection} from \"./selection/index.js\";\nexport {default as selector} from \"./selector.js\";\nexport {default as selectorAll} from \"./selectorAll.js\";\nexport {styleValue as style} from \"./selection/style.js\";\nexport {default as window} from \"./window.js\";\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n","import pointer from \"./pointer.js\";\nimport sourceEvent from \"./sourceEvent.js\";\n\nexport default function(events, node) {\n  if (events.target) { // i.e., instanceof Event, not TouchList or iterable\n    events = sourceEvent(events);\n    if (node === undefined) node = events.currentTarget;\n    events = events.touches || [events];\n  }\n  return Array.from(events, event => pointer(event, node));\n}\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import array from \"./array.js\";\nimport {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : array(selector)], root);\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport array from \"../array.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = array(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  return !this.node();\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(selection) {\n  if (!(selection instanceof Selection)) throw new Error(\"invalid merge\");\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  return Array.from(this);\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    var group = select.apply(this, arguments);\n    return group == null ? [] : array(group);\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return this.children;\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport line from \"./line.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x0, y0, y1) {\n  var x1 = null,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x0 = typeof x0 === \"function\" ? x0 : (x0 === undefined) ? pointX : constant(+x0);\n  y0 = typeof y0 === \"function\" ? y0 : (y0 === undefined) ? constant(0) : constant(+y0);\n  y1 = typeof y1 === \"function\" ? y1 : (y1 === undefined) ? pointY : constant(+y1);\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial.js\";\nimport area from \"./area.js\";\nimport {lineRadial} from \"./lineRadial.js\";\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop.js\";\nimport {point} from \"./basis.js\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis.js\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop.js\";\nimport {point} from \"./cardinal.js\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal.js\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math.js\";\nimport {Cardinal} from \"./cardinal.js\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed.js\";\nimport noop from \"../noop.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen.js\";\nimport {point} from \"./catmullRom.js\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","import noop from \"../noop.js\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","import curveLinear from \"./linear.js\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","export {default as arc} from \"./arc.js\";\nexport {default as area} from \"./area.js\";\nexport {default as line} from \"./line.js\";\nexport {default as pie} from \"./pie.js\";\nexport {default as areaRadial, default as radialArea} from \"./areaRadial.js\"; // Note: radialArea is deprecated!\nexport {default as lineRadial, default as radialLine} from \"./lineRadial.js\"; // Note: radialLine is deprecated!\nexport {default as pointRadial} from \"./pointRadial.js\";\nexport {linkHorizontal, linkVertical, linkRadial} from \"./link/index.js\";\n\nexport {default as symbol, symbols} from \"./symbol.js\";\nexport {default as symbolCircle} from \"./symbol/circle.js\";\nexport {default as symbolCross} from \"./symbol/cross.js\";\nexport {default as symbolDiamond} from \"./symbol/diamond.js\";\nexport {default as symbolSquare} from \"./symbol/square.js\";\nexport {default as symbolStar} from \"./symbol/star.js\";\nexport {default as symbolTriangle} from \"./symbol/triangle.js\";\nexport {default as symbolWye} from \"./symbol/wye.js\";\n\nexport {default as curveBasisClosed} from \"./curve/basisClosed.js\";\nexport {default as curveBasisOpen} from \"./curve/basisOpen.js\";\nexport {default as curveBasis} from \"./curve/basis.js\";\nexport {default as curveBundle} from \"./curve/bundle.js\";\nexport {default as curveCardinalClosed} from \"./curve/cardinalClosed.js\";\nexport {default as curveCardinalOpen} from \"./curve/cardinalOpen.js\";\nexport {default as curveCardinal} from \"./curve/cardinal.js\";\nexport {default as curveCatmullRomClosed} from \"./curve/catmullRomClosed.js\";\nexport {default as curveCatmullRomOpen} from \"./curve/catmullRomOpen.js\";\nexport {default as curveCatmullRom} from \"./curve/catmullRom.js\";\nexport {default as curveLinearClosed} from \"./curve/linearClosed.js\";\nexport {default as curveLinear} from \"./curve/linear.js\";\nexport {monotoneX as curveMonotoneX, monotoneY as curveMonotoneY} from \"./curve/monotone.js\";\nexport {default as curveNatural} from \"./curve/natural.js\";\nexport {default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore} from \"./curve/step.js\";\n\nexport {default as stack} from \"./stack.js\";\nexport {default as stackOffsetExpand} from \"./offset/expand.js\";\nexport {default as stackOffsetDiverging} from \"./offset/diverging.js\";\nexport {default as stackOffsetNone} from \"./offset/none.js\";\nexport {default as stackOffsetSilhouette} from \"./offset/silhouette.js\";\nexport {default as stackOffsetWiggle} from \"./offset/wiggle.js\";\nexport {default as stackOrderAppearance} from \"./order/appearance.js\";\nexport {default as stackOrderAscending} from \"./order/ascending.js\";\nexport {default as stackOrderDescending} from \"./order/descending.js\";\nexport {default as stackOrderInsideOut} from \"./order/insideOut.js\";\nexport {default as stackOrderNone} from \"./order/none.js\";\nexport {default as stackOrderReverse} from \"./order/reverse.js\";\n","import {path} from \"d3-path\";\nimport array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function(x, y) {\n  var defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  x = typeof x === \"function\" ? x : (x === undefined) ? pointX : constant(x);\n  y = typeof y === \"function\" ? y : (y === undefined) ? pointY : constant(y);\n\n  function line(data) {\n    var i,\n        n = (data = array(data)).length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial.js\";\nimport line from \"./line.js\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","export default function() {}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = 0, d[1] = dy;\n      }\n    }\n  }\n}\n","import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none.js\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none.js\";\n\nexport default function(series) {\n  var peaks = series.map(peak);\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n","import none from \"./none.js\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending.js\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import appearance from \"./appearance.js\";\nimport {sum} from \"./ascending.js\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import none from \"./none.js\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport offsetNone from \"./offset/none.js\";\nimport orderNone from \"./order/none.js\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nfunction stackSeries(key) {\n  const series = [];\n  series.key = key;\n  return series;\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var sz = Array.from(keys.apply(this, arguments), stackSeries),\n        i, n = sz.length, j = -1,\n        oz;\n\n    for (const d of data) {\n      for (i = 0, ++j; i < n; ++i) {\n        (sz[i][j] = [0, +value(d, sz[i].key, j, data)]).data = d;\n      }\n    }\n\n    for (i = 0, oz = array(order(sz)); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(Array.from(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle.js\";\nimport cross from \"./symbol/cross.js\";\nimport diamond from \"./symbol/diamond.js\";\nimport star from \"./symbol/star.js\";\nimport square from \"./symbol/square.js\";\nimport triangle from \"./symbol/triangle.js\";\nimport wye from \"./symbol/wye.js\";\nimport constant from \"./constant.js\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function(type, size) {\n  var context = null;\n  type = typeof type === \"function\" ? type : constant(type || circle);\n  size = typeof size === \"function\" ? size : constant(size === undefined ? 64 : +size);\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","import {pi, tau} from \"../math.js\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","import {pi, tau} from \"../math.js\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","export {default as timeFormatDefaultLocale, timeFormat, timeParse, utcFormat, utcParse} from \"./defaultLocale.js\";\nexport {default as timeFormatLocale} from \"./locale.js\";\nexport {default as isoFormat} from \"./isoFormat.js\";\nexport {default as isoParse} from \"./isoParse.js\";\n","import {utcFormat} from \"./defaultLocale.js\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat.js\";\nimport {utcParse} from \"./defaultLocale.js\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newDate(y, m, d) {\n  return {y: y, m: m, d: d, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"g\": formatYearISO,\n    \"G\": formatFullYearISO,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"q\": formatQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"g\": formatUTCYearISO,\n    \"G\": formatUTCFullYearISO,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"q\": formatUTCQuarter,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"g\": parseYear,\n    \"G\": parseFullYear,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"q\": parseQuarter,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, Z) {\n    return function(string) {\n      var d = newDate(1900, undefined, 1),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n      if (\"s\" in d) return new Date(d.s * 1000 + (\"L\" in d ? d.L : 0));\n\n      // If this is utcParse, never use the local timezone.\n      if (Z && !(\"Z\" in d)) d.Z = 0;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // If the month was not specified, inherit from the quarter.\n      if (d.m === undefined) d.m = \"q\" in d ? d.q : 0;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return localDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatQuarter(d) {\n    return 1 + ~~(d.getMonth() / 3);\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  function formatUTCQuarter(d) {\n    return 1 + ~~(d.getUTCMonth() / 3);\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", false);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier += \"\", true);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  return new Map(names.map((name, i) => [name.toLowerCase(), i]));\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseQuarter(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.s = +n[0], i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction dISO(d) {\n  var day = d.getDay();\n  return (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  d = dISO(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d) - 1, d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatYearISO(d, p) {\n  d = dISO(d);\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatFullYearISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction UTCdISO(d) {\n  var day = d.getUTCDay();\n  return (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  d = UTCdISO(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d) - 1, d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCYearISO(d, p) {\n  d = UTCdISO(d);\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCFullYearISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import interval from \"./interval.js\";\nimport {durationDay, durationMinute} from \"./duration.js\";\n\nvar day = interval(\n  date => date.setHours(0, 0, 0, 0),\n  (date, step) => date.setDate(date.getDate() + step),\n  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,\n  date => date.getDate() - 1\n);\n\nexport default day;\nexport var days = day.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval.js\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration.js\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","export {\n  default as timeInterval\n} from \"./interval.js\";\n\nexport {\n  default as timeMillisecond,\n  milliseconds as timeMilliseconds,\n  default as utcMillisecond,\n  milliseconds as utcMilliseconds\n} from \"./millisecond.js\";\n\nexport {\n  default as timeSecond,\n  seconds as timeSeconds,\n  default as utcSecond,\n  seconds as utcSeconds\n} from \"./second.js\";\n\nexport {\n  default as timeMinute,\n  minutes as timeMinutes\n} from \"./minute.js\";\n\nexport {\n  default as timeHour,\n  hours as timeHours\n} from \"./hour.js\";\n\nexport {\n  default as timeDay,\n  days as timeDays\n} from \"./day.js\";\n\nexport {\n  sunday as timeWeek,\n  sundays as timeWeeks,\n  sunday as timeSunday,\n  sundays as timeSundays,\n  monday as timeMonday,\n  mondays as timeMondays,\n  tuesday as timeTuesday,\n  tuesdays as timeTuesdays,\n  wednesday as timeWednesday,\n  wednesdays as timeWednesdays,\n  thursday as timeThursday,\n  thursdays as timeThursdays,\n  friday as timeFriday,\n  fridays as timeFridays,\n  saturday as timeSaturday,\n  saturdays as timeSaturdays\n} from \"./week.js\";\n\nexport {\n  default as timeMonth,\n  months as timeMonths\n} from \"./month.js\";\n\nexport {\n  default as timeYear,\n  years as timeYears\n} from \"./year.js\";\n\nexport {\n  default as utcMinute,\n  utcMinutes as utcMinutes\n} from \"./utcMinute.js\";\n\nexport {\n  default as utcHour,\n  utcHours as utcHours\n} from \"./utcHour.js\";\n\nexport {\n  default as utcDay,\n  utcDays as utcDays\n} from \"./utcDay.js\";\n\nexport {\n  utcSunday as utcWeek,\n  utcSundays as utcWeeks,\n  utcSunday as utcSunday,\n  utcSundays as utcSundays,\n  utcMonday as utcMonday,\n  utcMondays as utcMondays,\n  utcTuesday as utcTuesday,\n  utcTuesdays as utcTuesdays,\n  utcWednesday as utcWednesday,\n  utcWednesdays as utcWednesdays,\n  utcThursday as utcThursday,\n  utcThursdays as utcThursdays,\n  utcFriday as utcFriday,\n  utcFridays as utcFridays,\n  utcSaturday as utcSaturday,\n  utcSaturdays as utcSaturdays\n} from \"./utcWeek.js\";\n\nexport {\n  default as utcMonth,\n  utcMonths as utcMonths\n} from \"./utcMonth.js\";\n\nexport {\n  default as utcYear,\n  utcYears as utcYears\n} from \"./utcYear.js\";\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = function(date) {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval.js\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationSecond} from \"./duration.js\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval.js\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval.js\";\nimport {durationSecond} from \"./duration.js\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval.js\";\nimport {durationDay} from \"./duration.js\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval.js\";\nimport {durationHour} from \"./duration.js\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval.js\";\nimport {durationMinute} from \"./duration.js\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval.js\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval.js\";\nimport {durationWeek} from \"./duration.js\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import interval from \"./interval.js\";\nimport {durationMinute, durationWeek} from \"./duration.js\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","export {\n  now,\n  timer,\n  timerFlush\n} from \"./timer.js\";\n\nexport {\n  default as timeout\n} from \"./timeout.js\";\n\nexport {\n  default as interval\n} from \"./interval.js\";\n","import {Timer, now} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  t._restart = t.restart;\n  t.restart = function(callback, delay, time) {\n    delay = +delay, time = time == null ? now() : +time;\n    t._restart(function tick(elapsed) {\n      elapsed += total;\n      t._restart(tick, total += delay, time);\n      callback(elapsed);\n    }, delay, time);\n  }\n  t.restart(callback, delay, time);\n  return t;\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","/**\n * d3.tip\n * Copyright (c) 2013-2017 Justin Palmer\n *\n * Tooltips for d3.js SVG visualizations\n */\n// eslint-disable-next-line no-extra-semi\nimport { map } from 'd3-collection'\nimport { selection, select } from 'd3-selection'\n// Public - constructs a new tooltip\n//\n// Returns a tip\nexport default function() {\n  var direction   = d3TipDirection,\n      offset      = d3TipOffset,\n      html        = d3TipHTML,\n      rootElement = document.body,\n      node        = initNode(),\n      svg         = null,\n      point       = null,\n      target      = null\n\n  function tip(vis) {\n    svg = getSVGNode(vis)\n    if (!svg) return\n    point = svg.createSVGPoint()\n    rootElement.appendChild(node)\n  }\n\n  // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n  tip.show = function() {\n    var args = Array.prototype.slice.call(arguments)\n    if (args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n    var content = html.apply(this, args),\n        poffset = offset.apply(this, args),\n        dir     = direction.apply(this, args),\n        nodel   = getNodeEl(),\n        i       = directions.length,\n        coords,\n        scrollTop  = document.documentElement.scrollTop ||\n      rootElement.scrollTop,\n        scrollLeft = document.documentElement.scrollLeft ||\n      rootElement.scrollLeft\n\n    nodel.html(content)\n      .style('opacity', 1).style('pointer-events', 'all')\n\n    while (i--) nodel.classed(directions[i], false)\n    coords = directionCallbacks.get(dir).apply(this)\n    nodel.classed(dir, true)\n      .style('top', (coords.top + poffset[0]) + scrollTop + 'px')\n      .style('left', (coords.left + poffset[1]) + scrollLeft + 'px')\n\n    return tip\n  }\n\n  // Public - hide the tooltip\n  //\n  // Returns a tip\n  tip.hide = function() {\n    var nodel = getNodeEl()\n    nodel.style('opacity', 0).style('pointer-events', 'none')\n    return tip\n  }\n\n  // Public: Proxy attr calls to the d3 tip container.\n  // Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n  // eslint-disable-next-line no-unused-vars\n  tip.attr = function(n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().attr(n)\n    }\n\n    var args =  Array.prototype.slice.call(arguments)\n    selection.prototype.attr.apply(getNodeEl(), args)\n    return tip\n  }\n\n  // Public: Proxy style calls to the d3 tip container.\n  // Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n  // eslint-disable-next-line no-unused-vars\n  tip.style = function(n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().style(n)\n    }\n\n    var args = Array.prototype.slice.call(arguments)\n    selection.prototype.style.apply(getNodeEl(), args)\n    return tip\n  }\n\n  // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n  tip.direction = function(v) {\n    if (!arguments.length) return direction\n    direction = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n  tip.offset = function(v) {\n    if (!arguments.length) return offset\n    offset = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n  tip.html = function(v) {\n    if (!arguments.length) return html\n    html = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: sets or gets the root element anchor of the tooltip\n  //\n  // v - root element of the tooltip\n  //\n  // Returns root node of tip\n  tip.rootElement = function(v) {\n    if (!arguments.length) return rootElement\n    rootElement = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: destroys the tooltip and removes it from the DOM\n  //\n  // Returns a tip\n  tip.destroy = function() {\n    if (node) {\n      getNodeEl().remove()\n      node = null\n    }\n    return tip\n  }\n\n  function d3TipDirection() { return 'n' }\n  function d3TipOffset() { return [0, 0] }\n  function d3TipHTML() { return ' ' }\n\n  var directionCallbacks = map({\n        n:  directionNorth,\n        s:  directionSouth,\n        e:  directionEast,\n        w:  directionWest,\n        nw: directionNorthWest,\n        ne: directionNorthEast,\n        sw: directionSouthWest,\n        se: directionSouthEast\n      }),\n      directions = directionCallbacks.keys()\n\n  function directionNorth() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    }\n  }\n\n  function directionSouth() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    }\n  }\n\n  function directionEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    }\n  }\n\n  function directionWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    }\n  }\n\n  function directionNorthWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    }\n  }\n\n  function directionNorthEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    }\n  }\n\n  function directionSouthWest() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    }\n  }\n\n  function directionSouthEast() {\n    var bbox = getScreenBBox(this)\n    return {\n      top:  bbox.se.y,\n      left: bbox.se.x\n    }\n  }\n\n  function initNode() {\n    var div = select(document.createElement('div'))\n    div\n      .style('position', 'absolute')\n      .style('top', 0)\n      .style('opacity', 0)\n      .style('pointer-events', 'none')\n      .style('box-sizing', 'border-box')\n\n    return div.node()\n  }\n\n  function getSVGNode(element) {\n    var svgNode = element.node()\n    if (!svgNode) return null\n    if (svgNode.tagName.toLowerCase() === 'svg') return svgNode\n    return svgNode.ownerSVGElement\n  }\n\n  function getNodeEl() {\n    if (node == null) {\n      node = initNode()\n      // re-add node to DOM\n      rootElement.appendChild(node)\n    }\n    return select(node)\n  }\n\n  // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n  // nw(northwest), sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n  function getScreenBBox(targetShape) {\n    var targetel   = target || targetShape\n\n    while (targetel.getScreenCTM == null && targetel.parentNode != null) {\n      targetel = targetel.parentNode\n    }\n\n    var bbox       = {},\n        matrix     = targetel.getScreenCTM(),\n        tbbox      = targetel.getBBox(),\n        width      = tbbox.width,\n        height     = tbbox.height,\n        x          = tbbox.x,\n        y          = tbbox.y\n\n    point.x = x\n    point.y = y\n    bbox.nw = point.matrixTransform(matrix)\n    point.x += width\n    bbox.ne = point.matrixTransform(matrix)\n    point.y += height\n    bbox.se = point.matrixTransform(matrix)\n    point.x -= width\n    bbox.sw = point.matrixTransform(matrix)\n    point.y -= height / 2\n    bbox.w = point.matrixTransform(matrix)\n    point.x += width\n    bbox.e = point.matrixTransform(matrix)\n    point.x -= width / 2\n    point.y -= height / 2\n    bbox.n = point.matrixTransform(matrix)\n    point.y += height\n    bbox.s = point.matrixTransform(matrix)\n\n    return bbox\n  }\n\n  // Private - replace D3JS 3.X d3.functor() function\n  function functor(v) {\n    return typeof v === 'function' ? v : function() {\n      return v\n    }\n  }\n\n  return tip\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","export {default as create} from \"./create\";\nexport {default as creator} from \"./creator\";\nexport {default as local} from \"./local\";\nexport {default as matcher} from \"./matcher\";\nexport {default as mouse} from \"./mouse\";\nexport {default as namespace} from \"./namespace\";\nexport {default as namespaces} from \"./namespaces\";\nexport {default as clientPoint} from \"./point\";\nexport {default as select} from \"./select\";\nexport {default as selectAll} from \"./selectAll\";\nexport {default as selection} from \"./selection/index\";\nexport {default as selector} from \"./selector\";\nexport {default as selectorAll} from \"./selectorAll\";\nexport {styleValue as style} from \"./selection/style\";\nexport {default as touch} from \"./touch\";\nexport {default as touches} from \"./touches\";\nexport {default as window} from \"./window\";\nexport {event, customEvent} from \"./selection/on\";\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  return !this.node();\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import {Transition} from \"./transition/index.js\";\nimport {SCHEDULED} from \"./transition/schedule.js\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","import \"./selection/index.js\";\nexport {default as transition} from \"./transition/index.js\";\nexport {default as active} from \"./active.js\";\nexport {default as interrupt} from \"./interrupt.js\";\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","export default x => () => x;\n","export default function ZoomEvent(type, {\n  sourceEvent,\n  target,\n  transform,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    transform: {value: transform, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n","export {default as zoom} from \"./zoom.js\";\nexport {default as zoomTransform, identity as zoomIdentity} from \"./transform.js\";\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {select, pointer} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction defaultFilter(event) {\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchfirst,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0,\n      tapDistance = 10;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n          .event(event)\n          .start()\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n          .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p, event) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n\n  zoom.scaleTo = function(selection, k, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n\n  zoom.translateBy = function(selection, x, y, event) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n\n  zoom.translateTo = function(selection, x, y, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p, event);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point, event) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args).event(event),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    event: function(event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, args, true).event(event),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = pointer(event, currentTarget),\n        currentTarget = event.currentTarget,\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved(event) {\n      noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event)\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped(event) {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent(event);\n      g.event(event).end();\n    }\n  }\n\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n\n    noevent(event);\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);\n    else select(this).call(zoom.transform, t1, p0, event);\n  }\n\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\n        started, i, t, p;\n\n    nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = select(this).on(\"dblclick.zoom\");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  zoom.tapDistance = function(_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n\n  return zoom;\n}\n","export var name = \"d3\";\nexport var version = \"6.1.1\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var files = [\"dist/**/*.js\",\"index.js\"];\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"yarn test\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v${npm_package_version%%.*}.js && cp ../d3/dist/d3.min.js d3.v${npm_package_version%%.*}.min.js && git add d3.v${npm_package_version%%.*}.js d3.v${npm_package_version%%.*}.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"rimraf\":\"3\",\"rollup\":\"2\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"5\",\"rollup-plugin-terser\":\"7\",\"tape\":\"4\",\"tape-await\":\"0.1\"};\nexport var dependencies = {\"d3-array\":\"2\",\"d3-axis\":\"2\",\"d3-brush\":\"2\",\"d3-chord\":\"2\",\"d3-color\":\"2\",\"d3-contour\":\"2\",\"d3-delaunay\":\"5\",\"d3-dispatch\":\"2\",\"d3-drag\":\"2\",\"d3-dsv\":\"2\",\"d3-ease\":\"2\",\"d3-fetch\":\"2\",\"d3-force\":\"2\",\"d3-format\":\"2\",\"d3-geo\":\"2\",\"d3-hierarchy\":\"2\",\"d3-interpolate\":\"2\",\"d3-path\":\"2\",\"d3-polygon\":\"2\",\"d3-quadtree\":\"2\",\"d3-random\":\"2\",\"d3-scale\":\"3\",\"d3-scale-chromatic\":\"2\",\"d3-selection\":\"2\",\"d3-shape\":\"2\",\"d3-time\":\"2\",\"d3-time-format\":\"3\",\"d3-timer\":\"2\",\"d3-transition\":\"2\",\"d3-zoom\":\"2\"};\n","export {version} from \"./dist/package.js\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-delaunay\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-zoom\";\n","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","import { __decorate } from 'tslib';\nimport { ɵɵdefineInjectable, Injectable, Component, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport * as ɵngcc0 from '@angular/core';\nclass NgxCSVParserError {\r\n}\n\nlet NgxCsvParser = class NgxCsvParser {\r\n    constructor() {\r\n        this.defaultCSVParserConfig = {\r\n            header: true,\r\n            delimiter: ','\r\n        };\r\n        console.log(`\r\n      *****************************************************\r\n      ***      For Custom Software/Web development      ***\r\n      *** Reach out to us at contact@developershive.com ***\r\n      ***  Support us https://patreon.com/tofiqquadri/  ***\r\n      ***     Visit us at https://developershive.com    ***\r\n      *****************************************************\r\n    `);\r\n    }\r\n    parse(csvFile, config) {\r\n        config = Object.assign(Object.assign({}, this.defaultCSVParserConfig), config);\r\n        const ngxCSVParserObserver = new Observable((observer) => {\r\n            try {\r\n                let csvRecords = null;\r\n                if (this.isCSVFile(csvFile)) {\r\n                    const reader = new FileReader();\r\n                    reader.readAsText(csvFile);\r\n                    reader.onload = () => {\r\n                        const csvData = reader.result;\r\n                        const csvRecordsArray = this.csvStringToArray(csvData.trim(), config.delimiter);\r\n                        const headersRow = this.getHeaderArray(csvRecordsArray);\r\n                        csvRecords = this.getDataRecordsArrayFromCSVFile(csvRecordsArray, headersRow.length, config);\r\n                        observer.next(csvRecords);\r\n                        observer.complete();\r\n                    };\r\n                    reader.onerror = () => {\r\n                        this.badCSVDataFormatErrorHandler(observer);\r\n                    };\r\n                }\r\n                else {\r\n                    this.notCSVFileErrorHandler(observer);\r\n                }\r\n            }\r\n            catch (error) {\r\n                this.unknownCSVParserErrorHandler(observer);\r\n            }\r\n        });\r\n        return ngxCSVParserObserver;\r\n    }\r\n    csvStringToArray(csvDataString, delimiter) {\r\n        const regexPattern = new RegExp((`(\\\\${delimiter}|\\\\r?\\\\n|\\\\r|^)(?:\\\"((?:\\\\\\\\.|\\\"\\\"|[^\\\\\\\\\\\"])*)\\\"|([^\\\\${delimiter}\\\"\\\\r\\\\n]*))`), \"gi\");\r\n        let matchedPatternArray = regexPattern.exec(csvDataString);\r\n        const resultCSV = [[]];\r\n        while (matchedPatternArray) {\r\n            if (matchedPatternArray[1].length && matchedPatternArray[1] !== delimiter) {\r\n                resultCSV.push([]);\r\n            }\r\n            const cleanValue = matchedPatternArray[2] ?\r\n                matchedPatternArray[2].replace(new RegExp(\"[\\\\\\\\\\\"](.)\", \"g\"), '$1') : matchedPatternArray[3];\r\n            resultCSV[resultCSV.length - 1].push(cleanValue);\r\n            matchedPatternArray = regexPattern.exec(csvDataString);\r\n        }\r\n        return resultCSV;\r\n    }\r\n    getDataRecordsArrayFromCSVFile(csvRecordsArray, headerLength, config) {\r\n        const dataArr = [];\r\n        const headersArray = csvRecordsArray[0];\r\n        const startingRowToParseData = config.header ? 1 : 0;\r\n        for (let i = startingRowToParseData; i < csvRecordsArray.length; i++) {\r\n            const data = csvRecordsArray[i];\r\n            if (data.length === headerLength && config.header) {\r\n                const csvRecord = {};\r\n                for (let j = 0; j < data.length; j++) {\r\n                    if ((data[j] === undefined) || (data[j] === null)) {\r\n                        csvRecord[headersArray[j]] = \"\";\r\n                    }\r\n                    else {\r\n                        csvRecord[headersArray[j]] = data[j].trim();\r\n                    }\r\n                }\r\n                dataArr.push(csvRecord);\r\n            }\r\n            else {\r\n                dataArr.push(data);\r\n            }\r\n        }\r\n        return dataArr;\r\n    }\r\n    isCSVFile(file) {\r\n        return file.name.endsWith('.csv');\r\n    }\r\n    getHeaderArray(csvRecordsArr) {\r\n        const headers = csvRecordsArr[0];\r\n        const headerArray = [];\r\n        for (const header of headers) {\r\n            headerArray.push(header);\r\n        }\r\n        return headerArray;\r\n    }\r\n    notCSVFileErrorHandler(observer) {\r\n        const ngcCSVParserError = this.errorBuilder('NOT_A_CSV_FILE', 'Selected file is not a csv File Type.', 2);\r\n        observer.error(ngcCSVParserError);\r\n    }\r\n    unknownCSVParserErrorHandler(observer) {\r\n        const ngcCSVParserError = this.errorBuilder('UNKNOWN_ERROR', 'Unknown error. Please refer to official documentation for library usage.', 404);\r\n        observer.error(ngcCSVParserError);\r\n    }\r\n    badCSVDataFormatErrorHandler(observer) {\r\n        const ngcCSVParserError = this.errorBuilder('BAD_CSV_DATA_FORMAT', 'Unable to parse CSV File.', 1);\r\n        observer.error(ngcCSVParserError);\r\n    }\r\n    errorBuilder(type, message, code) {\r\n        const ngcCSVParserError = new NgxCSVParserError();\r\n        ngcCSVParserError.type = type;\r\n        ngcCSVParserError.message = message;\r\n        ngcCSVParserError.code = code;\r\n        return ngcCSVParserError;\r\n    }\r\n};\nNgxCsvParser.ɵfac = function NgxCsvParser_Factory(t) { return new (t || NgxCsvParser)(); };\r\nNgxCsvParser.ɵprov = ɵɵdefineInjectable({ factory: function NgxCsvParser_Factory() { return new NgxCsvParser(); }, token: NgxCsvParser, providedIn: \"root\" });\r\nclass CSVParserConfig {\r\n    constructor() { }\r\n}\n\nlet NgxCsvParserComponent = class NgxCsvParserComponent {\r\n    constructor() { }\r\n    ngOnInit() {\r\n    }\r\n};\nNgxCsvParserComponent.ɵfac = function NgxCsvParserComponent_Factory(t) { return new (t || NgxCsvParserComponent)(); };\nNgxCsvParserComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgxCsvParserComponent, selectors: [[\"lib-ngx-csv-parser\"]], decls: 2, vars: 0, template: function NgxCsvParserComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵtext(1, \" ngx-csv-parser works! \");\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\n\nlet NgxCsvParserModule = class NgxCsvParserModule {\r\n};\nNgxCsvParserModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxCsvParserModule });\nNgxCsvParserModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxCsvParserModule_Factory(t) { return new (t || NgxCsvParserModule)(); }, providers: [NgxCsvParser], imports: [[]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxCsvParser, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxCsvParserComponent, [{\n        type: Component,\n        args: [{\n                selector: 'lib-ngx-csv-parser',\n                template: `\n    <p>\n      ngx-csv-parser works!\n    </p>\n  `\n            }]\n    }], function () { return []; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxCsvParserModule, { declarations: [NgxCsvParserComponent], exports: [NgxCsvParserComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxCsvParserModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxCsvParserComponent],\n                imports: [],\n                providers: [NgxCsvParser],\n                exports: [NgxCsvParserComponent]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of ngx-csv-parser\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NgxCSVParserError, NgxCsvParser, NgxCsvParserComponent, NgxCsvParserModule };\n\n//# sourceMappingURL=ngx-csv-parser.js.map","'use strict';\n\n(function () {\n  var out$ = typeof exports != 'undefined' && exports || typeof define != 'undefined' && {} || this || window;\n  if (typeof define !== 'undefined') define('save-svg-as-png', [], function () {\n    return out$;\n  });\n  out$.default = out$;\n\n  var xmlNs = 'http://www.w3.org/2000/xmlns/';\n  var xhtmlNs = 'http://www.w3.org/1999/xhtml';\n  var svgNs = 'http://www.w3.org/2000/svg';\n  var doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\n  var urlRegex = /url\\([\"']?(.+?)[\"']?\\)/;\n  var fontFormats = {\n    woff2: 'font/woff2',\n    woff: 'font/woff',\n    otf: 'application/x-font-opentype',\n    ttf: 'application/x-font-ttf',\n    eot: 'application/vnd.ms-fontobject',\n    sfnt: 'application/font-sfnt',\n    svg: 'image/svg+xml'\n  };\n\n  var isElement = function isElement(obj) {\n    return obj instanceof HTMLElement || obj instanceof SVGElement;\n  };\n  var requireDomNode = function requireDomNode(el) {\n    if (!isElement(el)) throw new Error('an HTMLElement or SVGElement is required; got ' + el);\n  };\n  var requireDomNodePromise = function requireDomNodePromise(el) {\n    return new Promise(function (resolve, reject) {\n      if (isElement(el)) resolve(el);else reject(new Error('an HTMLElement or SVGElement is required; got ' + el));\n    });\n  };\n  var isExternal = function isExternal(url) {\n    return url && url.lastIndexOf('http', 0) === 0 && url.lastIndexOf(window.location.host) === -1;\n  };\n\n  var getFontMimeTypeFromUrl = function getFontMimeTypeFromUrl(fontUrl) {\n    var formats = Object.keys(fontFormats).filter(function (extension) {\n      return fontUrl.indexOf('.' + extension) > 0;\n    }).map(function (extension) {\n      return fontFormats[extension];\n    });\n    if (formats) return formats[0];\n    console.error('Unknown font format for ' + fontUrl + '. Fonts may not be working correctly.');\n    return 'application/octet-stream';\n  };\n\n  var arrayBufferToBase64 = function arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.byteLength; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }return window.btoa(binary);\n  };\n\n  var getDimension = function getDimension(el, clone, dim) {\n    var v = el.viewBox && el.viewBox.baseVal && el.viewBox.baseVal[dim] || clone.getAttribute(dim) !== null && !clone.getAttribute(dim).match(/%$/) && parseInt(clone.getAttribute(dim)) || el.getBoundingClientRect()[dim] || parseInt(clone.style[dim]) || parseInt(window.getComputedStyle(el).getPropertyValue(dim));\n    return typeof v === 'undefined' || v === null || isNaN(parseFloat(v)) ? 0 : v;\n  };\n\n  var getDimensions = function getDimensions(el, clone, width, height) {\n    if (el.tagName === 'svg') return {\n      width: width || getDimension(el, clone, 'width'),\n      height: height || getDimension(el, clone, 'height')\n    };else if (el.getBBox) {\n      var _el$getBBox = el.getBBox(),\n          x = _el$getBBox.x,\n          y = _el$getBBox.y,\n          _width = _el$getBBox.width,\n          _height = _el$getBBox.height;\n\n      return {\n        width: x + _width,\n        height: y + _height\n      };\n    }\n  };\n\n  var reEncode = function reEncode(data) {\n    return decodeURIComponent(encodeURIComponent(data).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n      var c = String.fromCharCode('0x' + p1);\n      return c === '%' ? '%25' : c;\n    }));\n  };\n\n  var uriToBlob = function uriToBlob(uri) {\n    var byteString = window.atob(uri.split(',')[1]);\n    var mimeString = uri.split(',')[0].split(':')[1].split(';')[0];\n    var buffer = new ArrayBuffer(byteString.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < byteString.length; i++) {\n      intArray[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([buffer], { type: mimeString });\n  };\n\n  var query = function query(el, selector) {\n    if (!selector) return;\n    try {\n      return el.querySelector(selector) || el.parentNode && el.parentNode.querySelector(selector);\n    } catch (err) {\n      console.warn('Invalid CSS selector \"' + selector + '\"', err);\n    }\n  };\n\n  var detectCssFont = function detectCssFont(rule, href) {\n    // Match CSS font-face rules to external links.\n    // @font-face {\n    //   src: local('Abel'), url(https://fonts.gstatic.com/s/abel/v6/UzN-iejR1VoXU2Oc-7LsbvesZW2xOQ-xsNqO47m55DA.woff2);\n    // }\n    var match = rule.cssText.match(urlRegex);\n    var url = match && match[1] || '';\n    if (!url || url.match(/^data:/) || url === 'about:blank') return;\n    var fullUrl = url.startsWith('../') ? href + '/../' + url : url.startsWith('./') ? href + '/.' + url : url;\n    return {\n      text: rule.cssText,\n      format: getFontMimeTypeFromUrl(fullUrl),\n      url: fullUrl\n    };\n  };\n\n  var inlineImages = function inlineImages(el) {\n    return Promise.all(Array.from(el.querySelectorAll('image')).map(function (image) {\n      var href = image.getAttributeNS('http://www.w3.org/1999/xlink', 'href') || image.getAttribute('href');\n      if (!href) return Promise.resolve(null);\n      if (isExternal(href)) {\n        href += (href.indexOf('?') === -1 ? '?' : '&') + 't=' + new Date().valueOf();\n      }\n      return new Promise(function (resolve, reject) {\n        var canvas = document.createElement('canvas');\n        var img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.src = href;\n        img.onerror = function () {\n          return reject(new Error('Could not load ' + href));\n        };\n        img.onload = function () {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          canvas.getContext('2d').drawImage(img, 0, 0);\n          image.setAttributeNS('http://www.w3.org/1999/xlink', 'href', canvas.toDataURL('image/png'));\n          resolve(true);\n        };\n      });\n    }));\n  };\n\n  var cachedFonts = {};\n  var inlineFonts = function inlineFonts(fonts) {\n    return Promise.all(fonts.map(function (font) {\n      return new Promise(function (resolve, reject) {\n        if (cachedFonts[font.url]) return resolve(cachedFonts[font.url]);\n\n        var req = new XMLHttpRequest();\n        req.addEventListener('load', function () {\n          // TODO: it may also be worth it to wait until fonts are fully loaded before\n          // attempting to rasterize them. (e.g. use https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet)\n          var fontInBase64 = arrayBufferToBase64(req.response);\n          var fontUri = font.text.replace(urlRegex, 'url(\"data:' + font.format + ';base64,' + fontInBase64 + '\")') + '\\n';\n          cachedFonts[font.url] = fontUri;\n          resolve(fontUri);\n        });\n        req.addEventListener('error', function (e) {\n          console.warn('Failed to load font from: ' + font.url, e);\n          cachedFonts[font.url] = null;\n          resolve(null);\n        });\n        req.addEventListener('abort', function (e) {\n          console.warn('Aborted loading font from: ' + font.url, e);\n          resolve(null);\n        });\n        req.open('GET', font.url);\n        req.responseType = 'arraybuffer';\n        req.send();\n      });\n    })).then(function (fontCss) {\n      return fontCss.filter(function (x) {\n        return x;\n      }).join('');\n    });\n  };\n\n  var cachedRules = null;\n  var styleSheetRules = function styleSheetRules() {\n    if (cachedRules) return cachedRules;\n    return cachedRules = Array.from(document.styleSheets).map(function (sheet) {\n      try {\n        return { rules: sheet.cssRules, href: sheet.href };\n      } catch (e) {\n        console.warn('Stylesheet could not be loaded: ' + sheet.href, e);\n        return {};\n      }\n    });\n  };\n\n  var inlineCss = function inlineCss(el, options) {\n    var _ref = options || {},\n        selectorRemap = _ref.selectorRemap,\n        modifyStyle = _ref.modifyStyle,\n        modifyCss = _ref.modifyCss,\n        fonts = _ref.fonts,\n        excludeUnusedCss = _ref.excludeUnusedCss;\n\n    var generateCss = modifyCss || function (selector, properties) {\n      var sel = selectorRemap ? selectorRemap(selector) : selector;\n      var props = modifyStyle ? modifyStyle(properties) : properties;\n      return sel + '{' + props + '}\\n';\n    };\n    var css = [];\n    var detectFonts = typeof fonts === 'undefined';\n    var fontList = fonts || [];\n    styleSheetRules().forEach(function (_ref2) {\n      var rules = _ref2.rules,\n          href = _ref2.href;\n\n      if (!rules) return;\n      Array.from(rules).forEach(function (rule) {\n        if (typeof rule.style != 'undefined') {\n          if (query(el, rule.selectorText)) css.push(generateCss(rule.selectorText, rule.style.cssText));else if (detectFonts && rule.cssText.match(/^@font-face/)) {\n            var font = detectCssFont(rule, href);\n            if (font) fontList.push(font);\n          } else if (!excludeUnusedCss) {\n            css.push(rule.cssText);\n          }\n        }\n      });\n    });\n\n    return inlineFonts(fontList).then(function (fontCss) {\n      return css.join('\\n') + fontCss;\n    });\n  };\n\n  var downloadOptions = function downloadOptions() {\n    if (!navigator.msSaveOrOpenBlob && !('download' in document.createElement('a'))) {\n      return { popup: window.open() };\n    }\n  };\n\n  out$.prepareSvg = function (el, options, done) {\n    requireDomNode(el);\n\n    var _ref3 = options || {},\n        _ref3$left = _ref3.left,\n        left = _ref3$left === undefined ? 0 : _ref3$left,\n        _ref3$top = _ref3.top,\n        top = _ref3$top === undefined ? 0 : _ref3$top,\n        w = _ref3.width,\n        h = _ref3.height,\n        _ref3$scale = _ref3.scale,\n        scale = _ref3$scale === undefined ? 1 : _ref3$scale,\n        _ref3$responsive = _ref3.responsive,\n        responsive = _ref3$responsive === undefined ? false : _ref3$responsive,\n        _ref3$excludeCss = _ref3.excludeCss,\n        excludeCss = _ref3$excludeCss === undefined ? false : _ref3$excludeCss;\n\n    return inlineImages(el).then(function () {\n      var clone = el.cloneNode(true);\n      clone.style.backgroundColor = (options || {}).backgroundColor || el.style.backgroundColor;\n\n      var _getDimensions = getDimensions(el, clone, w, h),\n          width = _getDimensions.width,\n          height = _getDimensions.height;\n\n      if (el.tagName !== 'svg') {\n        if (el.getBBox) {\n          if (clone.getAttribute('transform') != null) {\n            clone.setAttribute('transform', clone.getAttribute('transform').replace(/translate\\(.*?\\)/, ''));\n          }\n          var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n          svg.appendChild(clone);\n          clone = svg;\n        } else {\n          console.error('Attempted to render non-SVG element', el);\n          return;\n        }\n      }\n\n      clone.setAttribute('version', '1.1');\n      clone.setAttribute('viewBox', [left, top, width, height].join(' '));\n      if (!clone.getAttribute('xmlns')) clone.setAttributeNS(xmlNs, 'xmlns', svgNs);\n      if (!clone.getAttribute('xmlns:xlink')) clone.setAttributeNS(xmlNs, 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\n\n      if (responsive) {\n        clone.removeAttribute('width');\n        clone.removeAttribute('height');\n        clone.setAttribute('preserveAspectRatio', 'xMinYMin meet');\n      } else {\n        clone.setAttribute('width', width * scale);\n        clone.setAttribute('height', height * scale);\n      }\n\n      Array.from(clone.querySelectorAll('foreignObject > *')).forEach(function (foreignObject) {\n        foreignObject.setAttributeNS(xmlNs, 'xmlns', foreignObject.tagName === 'svg' ? svgNs : xhtmlNs);\n      });\n\n      if (excludeCss) {\n        var outer = document.createElement('div');\n        outer.appendChild(clone);\n        var src = outer.innerHTML;\n        if (typeof done === 'function') done(src, width, height);else return { src: src, width: width, height: height };\n      } else {\n        return inlineCss(el, options).then(function (css) {\n          var style = document.createElement('style');\n          style.setAttribute('type', 'text/css');\n          style.innerHTML = '<![CDATA[\\n' + css + '\\n]]>';\n\n          var defs = document.createElement('defs');\n          defs.appendChild(style);\n          clone.insertBefore(defs, clone.firstChild);\n\n          var outer = document.createElement('div');\n          outer.appendChild(clone);\n          var src = outer.innerHTML.replace(/NS\\d+:href/gi, 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href');\n\n          if (typeof done === 'function') done(src, width, height);else return { src: src, width: width, height: height };\n        });\n      }\n    });\n  };\n\n  out$.svgAsDataUri = function (el, options, done) {\n    requireDomNode(el);\n    return out$.prepareSvg(el, options).then(function (_ref4) {\n      var src = _ref4.src,\n          width = _ref4.width,\n          height = _ref4.height;\n\n      var svgXml = 'data:image/svg+xml;base64,' + window.btoa(reEncode(doctype + src));\n      if (typeof done === 'function') {\n        done(svgXml, width, height);\n      }\n      return svgXml;\n    });\n  };\n\n  out$.svgAsPngUri = function (el, options, done) {\n    requireDomNode(el);\n\n    var _ref5 = options || {},\n        _ref5$encoderType = _ref5.encoderType,\n        encoderType = _ref5$encoderType === undefined ? 'image/png' : _ref5$encoderType,\n        _ref5$encoderOptions = _ref5.encoderOptions,\n        encoderOptions = _ref5$encoderOptions === undefined ? 0.8 : _ref5$encoderOptions,\n        canvg = _ref5.canvg;\n\n    var convertToPng = function convertToPng(_ref6) {\n      var src = _ref6.src,\n          width = _ref6.width,\n          height = _ref6.height;\n\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      var pixelRatio = window.devicePixelRatio || 1;\n\n      canvas.width = width * pixelRatio;\n      canvas.height = height * pixelRatio;\n      canvas.style.width = canvas.width + 'px';\n      canvas.style.height = canvas.height + 'px';\n      context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n      if (canvg) canvg(canvas, src);else context.drawImage(src, 0, 0);\n\n      var png = void 0;\n      try {\n        png = canvas.toDataURL(encoderType, encoderOptions);\n      } catch (e) {\n        if (typeof SecurityError !== 'undefined' && e instanceof SecurityError || e.name === 'SecurityError') {\n          console.error('Rendered SVG images cannot be downloaded in this browser.');\n          return;\n        } else throw e;\n      }\n      if (typeof done === 'function') done(png, canvas.width, canvas.height);\n      return Promise.resolve(png);\n    };\n\n    if (canvg) return out$.prepareSvg(el, options).then(convertToPng);else return out$.svgAsDataUri(el, options).then(function (uri) {\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n        image.onload = function () {\n          return resolve(convertToPng({\n            src: image,\n            width: image.width,\n            height: image.height\n          }));\n        };\n        image.onerror = function () {\n          reject('There was an error loading the data URI as an image on the following SVG\\n' + window.atob(uri.slice(26)) + 'Open the following link to see browser\\'s diagnosis\\n' + uri);\n        };\n        image.src = uri;\n      });\n    });\n  };\n\n  out$.download = function (name, uri, options) {\n    if (navigator.msSaveOrOpenBlob) navigator.msSaveOrOpenBlob(uriToBlob(uri), name);else {\n      var saveLink = document.createElement('a');\n      if ('download' in saveLink) {\n        saveLink.download = name;\n        saveLink.style.display = 'none';\n        document.body.appendChild(saveLink);\n        try {\n          var blob = uriToBlob(uri);\n          var url = URL.createObjectURL(blob);\n          saveLink.href = url;\n          saveLink.onclick = function () {\n            return requestAnimationFrame(function () {\n              return URL.revokeObjectURL(url);\n            });\n          };\n        } catch (e) {\n          console.error(e);\n          console.warn('Error while getting object URL. Falling back to string URL.');\n          saveLink.href = uri;\n        }\n        saveLink.click();\n        document.body.removeChild(saveLink);\n      } else if (options && options.popup) {\n        options.popup.document.title = name;\n        options.popup.location.replace(uri);\n      }\n    }\n  };\n\n  out$.saveSvg = function (el, name, options) {\n    var downloadOpts = downloadOptions(); // don't inline, can't be async\n    return requireDomNodePromise(el).then(function (el) {\n      return out$.svgAsDataUri(el, options || {});\n    }).then(function (uri) {\n      return out$.download(name, uri, downloadOpts);\n    });\n  };\n\n  out$.saveSvgAsPng = function (el, name, options) {\n    var downloadOpts = downloadOptions(); // don't inline, can't be async\n    return requireDomNodePromise(el).then(function (el) {\n      return out$.svgAsPngUri(el, options || {});\n    }).then(function (uri) {\n      return out$.download(name, uri, downloadOpts);\n    });\n  };\n})();","/**\n * Custom set types\n *\n */\n\nexport enum CustomSetType {\n  ObservationSet = 'Observation set',\n  FeatureSet = 'Feature set'\n}\n\n/**\n * Custom set element\n *\n */\n\nexport interface CustomSetElement {\n  id: string;\n  attributes?: [];\n}\n\n/**\n * Custom set\n *\n */\n\nexport interface CustomSet {\n  name: string;\n  color?: string;\n  type: CustomSetType;\n  elements: CustomSetElement[];\n  multiple: boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.service';\n\n/**\n * Local storage service\n * used for persist application data in observable key value pair\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LclStorageService extends StorageService {\n  constructor() {\n    super(localStorage);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  private storage: Storage;\n  private subjects: Map<string, BehaviorSubject<any>>;\n\n  /**\n   * Constructor with service injection\n   * @param storage\n   */\n  constructor(storage: Storage) {\n    this.storage = storage;\n    this.subjects = new Map<string, BehaviorSubject<any>>();\n  }\n\n  /**\n   * watch data of given key\n   * @param key\n   * @param defaultValue\n   */\n  watch(key: string): Observable<any> {\n    if (!this.subjects.has(key)) {\n      this.subjects.set(key, new BehaviorSubject<any>(null));\n    }\n    let item = this.storage.getItem(key);\n    if (item === 'undefined') {\n      item = undefined;\n    } else {\n      item = JSON.parse(item);\n    }\n    this.subjects.get(key).next(item);\n    return this.subjects.get(key).asObservable();\n  }\n\n  /**\n   * get data of given key\n   * @param key\n   */\n  get(key: string): any {\n    let item = this.storage.getItem(key);\n    if (item === 'undefined') {\n      item = undefined;\n    } else {\n      item = JSON.parse(item);\n    }\n    return item;\n  }\n\n  /**\n   * set value on given key\n   * @param key\n   * @param value\n   */\n  set(key: string, value: any) {\n    this.storage.setItem(key, JSON.stringify(value));\n    if (!this.subjects.has(key)) {\n      this.subjects.set(key, new BehaviorSubject<any>(value));\n    } else {\n      this.subjects.get(key).next(value);\n    }\n  }\n\n  /**\n   * remove given key\n   * @param key\n   */\n  remove(key: string) {\n    if (this.subjects.has(key)) {\n      this.subjects.get(key).complete();\n      this.subjects.delete(key);\n    }\n    this.storage.removeItem(key);\n  }\n\n  /**\n   * clear all available keys\n   */\n  clear() {\n    this.subjects.clear();\n    this.storage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CustomSet, CustomSetType } from '@app/_models/metadata';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LclStorageService } from '../local-storage/lcl-storage.service';\nimport { NotificationService } from '../core.module';\n\n/**\n * Metadata service\n *\n * Used for operations with workspace metadata (observation and feature sets defined in workspace)\n * Uses local storage to save custom observation and feature sets\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MetadataService {\n  result: string;\n\n  constructor(\n    private router: Router,\n    private storage: LclStorageService,\n    private readonly notificationService: NotificationService\n  ) {}\n\n  /**\n   * Traverses a router tree from root to a leaf looking for {@param}.\n   */\n  getParam(param: string): string | null {\n    for (const route of this.getCurrentRoutesChain()) {\n      if (route.snapshot.paramMap.has(param)) {\n        return route.snapshot.paramMap.get(param);\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Retrieves a chain of {ActivatedRoutes} from root to a leaf.\n   */\n  getCurrentRoutesChain(): ActivatedRoute[] {\n    let currentRoute = this.router.routerState.root;\n    const results: ActivatedRoute[] = [currentRoute];\n\n    while (currentRoute.firstChild) {\n      currentRoute = currentRoute.firstChild;\n      results.push(currentRoute);\n    }\n\n    return results;\n  }\n\n  /**\n   * Get all custom observation and feature sets from user's storage\n   */\n  getCustomSets(): CustomSet[] {\n    const workspaceId = this.getParam('workspaceId'); //this.route.snapshot.paramMap.get('workspaceId');\n    return this.storage.get(workspaceId + '_custom_sets') || [];\n  }\n\n  /**\n   * Get custom observation sets from user's storage\n   */\n  getCustomObservationSets(): CustomSet[] {\n    const customSets = this.getCustomSets();\n    return customSets.filter(set => set.type === CustomSetType.ObservationSet);\n  }\n\n  /**\n   * Get all custom feature sets from user's storage\n   */\n  getCustomFeatureSets(): CustomSet[] {\n    const customSets = this.getCustomSets();\n    return customSets.filter(set => set.type === CustomSetType.FeatureSet);\n  }\n\n  /**\n   * Add a new custom observation/feature set to user's storage\n   */\n  addCustomSet(customSet: CustomSet): boolean {\n    const customSets = this.getCustomSets();\n    if (customSets.some(set => set.name === customSet.name)) {\n      const errorMessage =\n        'The observation/feature set with this name already exists.';\n      this.notificationService.error(errorMessage);\n      return false;\n    } else {\n      customSets.push(customSet);\n      const workspaceId = this.getParam('workspaceId');\n      this.storage.set(workspaceId + '_custom_sets', customSets);\n      this.notificationService.success(\n        'The new custom set has been successfully created.'\n      );\n      return true;\n    }\n  }\n\n  /**\n   * Add a new custom observation/feature set to user's storage\n   */\n  updateCustomSet(customSet: CustomSet, oldCustomSetId: string): boolean {\n    const customSets = this.getCustomSets();\n\n    if (\n      customSet.name !== oldCustomSetId &&\n      customSets.some(set => set.name === customSet.name)\n    ) {\n      const errorMessage =\n        'The observation/feature set with this name already exists.';\n      this.notificationService.error(errorMessage);\n      return false;\n    } else {\n      const foundIndex = customSets.findIndex(\n        set => set.name === oldCustomSetId\n      );\n      customSets[foundIndex] = { ...customSets[foundIndex], ...customSet }; //customSet;\n      const workspaceId = this.getParam('workspaceId');\n      this.storage.set(workspaceId + '_custom_sets', customSets);\n      this.notificationService.success(\n        'The custom set has been successfully updated.'\n      );\n      return true;\n    }\n  }\n\n  /**\n   * Add a new custom observation/feature set to user's storage\n   */\n  deleteCustomSet(customSetId: string): void {\n    const customSets = this.getCustomSets();\n    const foundIndex = customSets.findIndex(set => set.name === customSetId);\n    customSets.splice(foundIndex, 1);\n    const workspaceId = this.getParam('workspaceId');\n    this.storage.set(workspaceId + '_custom_sets', customSets);\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  ViewChild,\n  ElementRef,\n  OnChanges,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { AnalysesService } from '@app/features/analysis/services/analysis.service';\nimport { MetadataService } from '@app/core/metadata/metadata.service';\nimport { Utils } from '@app/shared/utils/utils';\nimport * as d3 from 'd3';\nimport d3Tip from 'd3-tip';\n\n/**\n * Box Plotting Component\n *\n * Used for the Plotting operation (output view for the normalization methods)\n */\n@Component({\n  selector: 'mev-box-plotting',\n  templateUrl: './box-plotting.component.html',\n  styleUrls: ['./box-plotting.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class BoxPlottingComponent implements OnChanges {\n  @Input() outputs;\n  @ViewChild('boxPlot') svgElement: ElementRef;\n\n  customObservationSets = [];\n  customObservationSetsToPlot = [];\n  resourceData = [];\n  boxPlotData = [];\n  boxPlotTypes = {};\n  isWait = false;\n\n  xScale; // scale functions to transform data values into the the range\n  yScale;\n\n  /* Chart settings */\n  containerId = '#boxPlot';\n  imageName = 'Box plot'; // file name for downloaded SVG image\n  maxFeatureNumber = 80;\n  precision = 2;\n  margin = { top: 50, right: 150, bottom: 100, left: 40 }; // chart margins\n  outerHeight = 500;\n  xCat = 'key'; // field name in data for X axis\n  yCat = 'Value';\n  delta = 0.1; // used for X and Y axis ranges (we add delta to avoid bug when both max and min are zeros)\n  boxWidth = 20; // the width of rectangular box\n  tooltipOffsetX = 10; // to position the tooltip on the right side of the triggering element\n\n  constructor(\n    private apiService: AnalysesService,\n    private metadataService: MetadataService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnChanges(): void {\n    this.customObservationSets = this.metadataService.getCustomObservationSets();\n    this.generateBoxPlot();\n  }\n\n  /**\n   * Function to retrieve data for box plot\n   */\n  generateBoxPlot() {\n    this.isWait = true;\n    const resourceId = this.outputs.input_matrix;\n    this.apiService.getResourceContent(resourceId).subscribe(response => {\n      this.resourceData = response;\n      this.reformatData();\n      this.isWait = false;\n      this.cdRef.detectChanges();\n      this.createChart();\n    });\n  }\n\n  /**\n   * Function to prepare data for box plot\n   */\n  reformatData() {\n    if (this.resourceData.length) {\n      this.boxPlotTypes = {};\n      if (this.customObservationSetsToPlot.length) {\n        this.customObservationSetsToPlot.forEach(set => {\n          this.boxPlotTypes[set.name] = {\n            label: set.name,\n            yCat: set.name,\n            color: set.color,\n            samples: set.elements.map(el => el.id)\n          };\n        });\n      } else {\n        this.boxPlotTypes['All samples'] = {\n          label: 'All samples',\n          yCat: 'All samples',\n          color: '#f40357',\n          samples: Object.keys(this.resourceData[0].values)\n        };\n      }\n\n      if (this.outputs.features?.elements?.length) {\n        const selectedFeatures = this.outputs.features.elements.map(\n          el => el.id\n        );\n        this.resourceData = this.resourceData.filter(el =>\n          selectedFeatures.includes(el.rowname)\n        );\n      }\n\n      this.resourceData = this.resourceData.slice(0, this.maxFeatureNumber);\n      const countsFormatted = this.resourceData.map(elem => {\n        const newElem = { key: elem.rowname };\n        Object.keys(this.boxPlotTypes).forEach(key => {\n          const numbers = this.boxPlotTypes[key].samples.reduce(\n            (acc, cur) => [...acc, elem.values[cur]],\n            []\n          );\n          newElem[this.boxPlotTypes[key].yCat] = Utils.getBoxPlotStatistics(\n            numbers\n          );\n        });\n        return newElem;\n      });\n      this.boxPlotData = countsFormatted;\n    }\n  }\n\n  /**\n   * Function to create box plot\n   */\n  createChart(): void {\n    const outerWidth = this.svgElement.nativeElement.offsetWidth;\n    const outerHeight = this.outerHeight;\n    const width = outerWidth - this.margin.left - this.margin.right;\n    const height = outerHeight - this.margin.top - this.margin.bottom;\n\n    const data = this.boxPlotData;\n\n    d3.select(this.containerId)\n      .selectAll('svg')\n      .remove();\n\n    const svg = d3\n      .select(this.containerId)\n      .append('svg')\n      .attr('width', outerWidth)\n      .attr('height', outerHeight)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + this.margin.left + ',' + this.margin.top + ')'\n      )\n      .style('fill', 'none');\n\n    // Tooltip\n    const tooltipOffsetX = this.tooltipOffsetX;\n    const tip = d3Tip()\n      .attr('class', 'd3-tip')\n      .offset([-10, 0])\n      .html((event, d) => {\n        // if it is a hover over an individual point, show the value\n        if (d !== Object(d)) return 'Value: ' + d.toFixed(this.precision);\n\n        // if it is a hover over a box plot, show table with basic statistic values\n        const htmlTable =\n          '<table><thead><th></th>' +\n          Object.keys(this.boxPlotTypes)\n            .map(key => '<th>' + this.boxPlotTypes[key].label + '</th>')\n            .join('') +\n          '<thead>' +\n          '<tr><td>Q1</td>' +\n          Object.keys(this.boxPlotTypes)\n            .map(\n              key =>\n                '<td>' +\n                d[this.boxPlotTypes[key].yCat].q1.toFixed(this.precision) +\n                '</td>'\n            )\n            .join('') +\n          '</tr>' +\n          '<tr><td>Q2</td>' +\n          Object.keys(this.boxPlotTypes)\n            .map(\n              key =>\n                '<td>' +\n                d[this.boxPlotTypes[key].yCat].median.toFixed(this.precision) +\n                '</td>'\n            )\n            .join('') +\n          '</tr>' +\n          '<tr><td>Q3</td>' +\n          Object.keys(this.boxPlotTypes)\n            .map(\n              key =>\n                '<td>' +\n                d[this.boxPlotTypes[key].yCat].q3.toFixed(this.precision) +\n                '</td>'\n            )\n            .join('') +\n          '</tr>' +\n          '<tr><td>IQR</td>' +\n          Object.keys(this.boxPlotTypes)\n            .map(\n              key =>\n                '<td>' +\n                d[this.boxPlotTypes[key].yCat].iqr.toFixed(this.precision) +\n                '</td>'\n            )\n            .join('') +\n          '</tr>' +\n          '<tr><td>MIN</td>' +\n          Object.keys(this.boxPlotTypes)\n            .map(\n              key =>\n                '<td>' +\n                d[this.boxPlotTypes[key].yCat].min.toFixed(this.precision) +\n                '</td>'\n            )\n            .join('') +\n          '</tr>' +\n          '<tr><td>MAX</td>' +\n          Object.keys(this.boxPlotTypes)\n            .map(\n              key =>\n                '<td>' +\n                d[this.boxPlotTypes[key].yCat].max.toFixed(this.precision) +\n                '</td>'\n            )\n            .join('') +\n          '</tr>' +\n          '</table>';\n        return '<b>' + d[this.xCat] + '</b><br>' + htmlTable;\n      });\n    svg.call(tip);\n\n    svg\n      .append('rect')\n      .attr('width', width)\n      .attr('height', height)\n      .style('fill', 'transparent');\n\n    /* Setting up X-axis and Y-axis*/\n    this.xScale = d3\n      .scaleBand()\n      .rangeRound([0, width])\n      .domain(data.map(d => d.key))\n      .paddingInner(1)\n      .paddingOuter(0.5);\n\n    this.yScale = d3.scaleLinear().rangeRound([height, 0]);\n\n    const maxArr = Object.keys(this.boxPlotTypes).map(key =>\n      d3.max(data, d => <number>d[this.boxPlotTypes[key].yCat].max || 0)\n    );\n    const minArr = Object.keys(this.boxPlotTypes).map(key =>\n      d3.min(data, d => <number>d[this.boxPlotTypes[key].yCat].min || 0)\n    );\n    const yMax = Math.max(...maxArr);\n    const yMin = Math.min(...minArr);\n    const yRange = yMax - yMin + this.delta; // add delta to avoid bug when both max and min are zeros\n\n    this.yScale.domain([\n      yMin - yRange * this.delta,\n      yMax + yRange * this.delta\n    ]);\n\n    svg\n      .append('g')\n      .attr('transform', 'translate(0,' + height + ')')\n      .attr('class', 'x-axis')\n      .call(d3.axisBottom(this.xScale))\n      .selectAll('text')\n      .style('text-anchor', 'end')\n      .attr('dx', '-.8em')\n      .attr('dy', '.15em')\n      .attr('transform', 'rotate(-45)');\n\n    svg.append('g').call(d3.axisLeft(this.yScale));\n\n    // Box plots\n    Object.keys(this.boxPlotTypes).forEach((key, i) => {\n      const yCatProp = this.boxPlotTypes[key].yCat;\n      const color = this.boxPlotTypes[key].color;\n\n      // Main vertical line\n      svg\n        .selectAll('.vertLines')\n        .data(data)\n        .enter()\n        .append('line')\n        .attr(\n          'x1',\n          (d: any) =>\n            this.xScale(d[this.xCat]) + (1.2 * i - 0.6) * this.boxWidth\n        )\n        .attr(\n          'x2',\n          (d: any) =>\n            this.xScale(d[this.xCat]) + (1.2 * i - 0.6) * this.boxWidth\n        )\n        .attr('y1', (d: any) => this.yScale(d[yCatProp].min))\n        .attr('y2', (d: any) => this.yScale(d[yCatProp].max))\n        .attr('stroke', 'black')\n        .style('width', d => 10);\n\n      svg\n        .selectAll('.boxes')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr(\n          'x',\n          d => this.xScale(d[this.xCat]) + (1.2 * i - 1.1) * this.boxWidth\n        )\n        .attr('y', d => this.yScale(d[yCatProp].q3))\n        .attr(\n          'height',\n          d => this.yScale(d[yCatProp].q1) - this.yScale(d[yCatProp].q3)\n        )\n        .attr('width', d => this.boxWidth)\n        .attr('stroke', 'black')\n        .style('fill', color)\n        .attr('pointer-events', 'all')\n        .on('mouseover', function(mouseEvent: any, d) {\n          tip.show(mouseEvent, d, this);\n          tip.style('left', mouseEvent.x + tooltipOffsetX + 'px');\n        })\n        .on('mouseout', tip.hide);\n\n      // Medians\n      svg\n        .selectAll('.medianLines')\n        .data(data)\n        .enter()\n        .append('line')\n        .attr('x1', d => {\n          if (d[yCatProp].median !== undefined)\n            return this.xScale(d[this.xCat]) + (1.2 * i - 1.1) * this.boxWidth;\n          return 0;\n        })\n        .attr('x2', d => {\n          if (d[yCatProp].median !== undefined)\n            return this.xScale(d[this.xCat]) + (1.2 * i - 0.1) * this.boxWidth;\n          return 0;\n        })\n        .attr('y1', d => this.yScale(d[yCatProp].median))\n        .attr('y2', d => this.yScale(d[yCatProp].median))\n        .attr('stroke', 'black')\n        .style('width', d => 80);\n    });\n\n    // Legend\n    const boxPlotColors = Object.keys(this.boxPlotTypes).map(key => ({\n      label: this.boxPlotTypes[key].label,\n      color: this.boxPlotTypes[key].color\n    }));\n\n    const legend = svg\n      .selectAll('.legend')\n      .data(boxPlotColors)\n      .enter()\n      .append('g')\n      .classed('legend', true)\n      .attr('transform', function(d, i) {\n        return 'translate(0,' + i * 20 + ')';\n      });\n\n    legend\n      .append('circle')\n      .attr('r', 5)\n      .attr('cx', width + 10)\n      .attr('fill', d => d.color);\n\n    legend\n      .append('text')\n      .attr('x', width + 20)\n      .attr('dy', '.35em')\n      .style('fill', '#000')\n      .attr('class', 'legend-label')\n      .text(d => d.label);\n  }\n\n  /**\n   * Function is triggered when resizing the chart\n   */\n  onResize(event) {\n    this.createChart();\n  }\n\n  /**\n   * Function is triggered when the user checks/unchecks custom observation sets\n   */\n  onObservationCheck(e) {\n    const sampleSet = e.source.id;\n    const foundSet = this.customObservationSets.find(\n      el => el.name === sampleSet\n    );\n\n    if (e.checked) {\n      this.customObservationSetsToPlot.push(foundSet);\n    } else {\n      this.customObservationSetsToPlot = this.customObservationSetsToPlot.filter(\n        set => set.name !== foundSet.name\n      );\n    }\n    this.reformatData();\n    this.createChart();\n  }\n}\n","<mev-spinner-overlay *ngIf=\"isWait\"></mev-spinner-overlay>\n<div *ngIf=\"!isWait\">\n    <section class=\"observation-list-section\">\n        <ul *ngIf=\"customObservationSets.length\"> Group observations by:\n            <li *ngFor=\"let set of customObservationSets\">\n                <mat-checkbox (change)=\"onObservationCheck($event)\" [id]=\"set.name\">{{ set.name }}</mat-checkbox>\n            </li>\n        </ul>\n    </section>\n    <div class=\"button-panel\">\n        <!-- <button mat-raised-button color=\"accent\" (click)=\"onCreateCustomFeatureSet()\">\n          <mat-icon>add</mat-icon>\n          Save as a feature set\n        </button> -->\n        <mev-download-button [containerId]=\"containerId\" [imageName]=\"imageName\"></mev-download-button>\n    </div>\n    <div #boxPlot id=\"boxPlot\" class=\"chart\" (window:resize)=\"onResize($event)\"></div>\n</div>\n","import { Component } from '@angular/core';\nimport { DifferentialExpressionComponent } from '../differential_expression/differential_expression.component';\n\n@Component({\n  selector: 'mev-deseq2',\n  templateUrl: '../differential_expression/differential_expression.component.html',\n  styleUrls: ['../differential_expression/differential_expression.component.scss']\n})\nexport class Deseq2Component extends DifferentialExpressionComponent {\n    imageName = 'DESeq2'\n    analysisName = 'DESeq2'\n\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n    }\n    ngOnChanges() {\n        super.ngOnChanges();\n    }\n}\n","<!-- <mat-form-field>\n    <input matInput placeholder=\"Search...\" #input>\n</mat-form-field> -->\n\n<mat-card class=\"analysis-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"analysis-card__img\"></div>\n    <mat-card-title>{{analysisName}}: {{ outputs?.job_name }}</mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"analysis-card__main\">\n    <p class=\"analysis-card__instruction\">\n      Use the table filters and sorting functionality to explore differentially expressed genes.\n    </p>\n    <p class=\"analysis-card__instruction\">\n      You can also define custom sets of genes for exploration with other tools. Custom set size is \n      limited to {{maxFeatureSetSize}} items.\n    </p>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <div class=\"analysis-card__content\">\n      <section class=\"filter-section\">\n        <form [formGroup]=\"filterForm\" (ngSubmit)=\"onSubmit()\">\n\n          <!-- <div class=\"filter\">\n              <span class=\"label\">\n                  Name: \n              </span>\n                <mat-form-field class=\"form-control\">\n                  <input matInput formControlName=\"name\">\n              </mat-form-field>\n          </div> -->\n\n          <div class=\"filter\">\n            <span class=\"label\">\n              P-value adjusted:\n            </span>\n            <mat-form-field class=\"form-control form-control__small\" color=\"accent\">\n              <mat-select formControlName=\"padj_operator\">\n                <mat-option *ngFor=\"let operator of operators\" [value]=\"operator.id\">\n                  {{ operator.name }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"form-control\">\n              <input matInput formControlName=\"padj\" type=number step=any min=0>\n            </mat-form-field>\n          </div>\n\n          <div class=\"filter\">\n            <span class=\"label\">\n              Log-Fold-Change:\n            </span>\n            <mat-form-field class=\"form-control form-control__small\" color=\"accent\">\n              <mat-select formControlName=\"log2FoldChange_operator\">\n                <mat-option *ngFor=\"let operator of operators\" [value]=\"operator.id\">\n                  {{ operator.name }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"form-control\">\n              <input matInput formControlName=\"log2FoldChange\" type=number step=any>\n            </mat-form-field>\n          </div>\n\n          <button type=\"submit\" [disabled]=\"!filterForm.valid\" mat-raised-button color=\"accent\">Apply filters</button>\n        </form>\n\n      </section>\n\n      <mev-spinner-overlay *ngIf=\"dataSource.loading$ | async\"></mev-spinner-overlay>\n\n      <div class=\"mat-elevation-z8\">\n        <mat-table class=\"dge-table\" [dataSource]=\"dataSource\" matSort [matSortActive]=\"defaultSorting.field\"\n          [matSortDirection]=\"defaultSorting.direction\" matSortDisableClear>\n\n          <ng-container matColumnDef=\"name\">\n            <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\n            <mat-cell *matCellDef=\"let row\">{{row.name}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"overall_mean\">\n            <mat-header-cell *matHeaderCellDef>Overall Mean</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">{{row.overall_mean}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"log2FoldChange\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Log 2 Fold Change</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">{{row.log2FoldChange}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"padj\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>P-value adjusted</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">{{row.padj}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"pvalue\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>P-value</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">{{row.pvalue}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"stat\">\n            <mat-header-cell *matHeaderCellDef>Stat</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">{{row.stat}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"lfcSE\">\n            <mat-header-cell *matHeaderCellDef>Standard error value (lfcSE)</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">{{row.lfcSE}}</mat-cell>\n          </ng-container>\n\n          <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n          <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n\n        </mat-table>\n\n\n        <mat-paginator [length]=\"dataSource.featuresCount\" [pageSize]=\"10\" [pageSizeOptions]=\"[10, 25, 50]\">\n        </mat-paginator>\n      </div>\n\n      <div class=\"button-panel\">\n        <button mat-raised-button color=\"accent\" [disabled]=\"dataSource.featuresCount > maxFeatureSetSize\" (click)=\"onCreateCustomFeatureSet()\">\n          <mat-icon>add</mat-icon>\n          Save as a feature set\n        </button>\n        <mev-download-button [containerId]=\"containerId\" [imageName]=\"imageName\"></mev-download-button>  \n      </div>      \n      <div #boxPlot id=\"boxPlot\" class=\"chart\" (window:resize)=\"onResize($event)\"></div>\n\n    </div>\n\n  </mat-card-content>\n\n</mat-card>","import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { CustomSetType } from '@app/_models/metadata';\n\n@Component({\n  selector: 'mev-add-sample-set',\n  templateUrl: './add-sample-set.component.html',\n  styleUrls: ['./add-sample-set.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddSampleSetComponent {\n  setForm: FormGroup;\n  isObservationSet = true;\n  customSetType: string;\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddSampleSetComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit(): void {\n    // if no custom set type is passed, assume Observation set by default\n    this.customSetType = this.data?.type || CustomSetType.ObservationSet;\n    const name = this.data?.name || '';\n    if (this.customSetType === CustomSetType.FeatureSet) {\n      this.isObservationSet = false;\n    }\n\n    this.setForm = this.formBuilder.group({\n      customSetName: [name, [Validators.required]],\n      customSetColor: [\n        '#000000',\n        [...(this.isObservationSet ? [Validators.required] : [])]\n      ]\n    });\n  }\n\n  submit() {\n    // empty stuff\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  confirmAdd() {\n    const name = this.setForm.value.customSetName;\n    const color = this.setForm.value.customSetColor;\n\n    const customSet = {\n      name: name,\n      color: color\n    };\n    this.dialogRef.close(customSet);\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Add a new custom {{ customSetType | lowercase}}</h3>\n\n  <form class=\"mat-dialog-content\" [formGroup]=\"setForm\" (ngSubmit)=\"submit\">\n\n    <div class=\"form\">\n\n      <mat-form-field class=\"form-control\" color=\"accent\">\n        <mat-label>{{ customSetType }} name:</mat-label>\n        <input matInput formControlName=customSetName>\n      </mat-form-field>\n\n      <mat-form-field *ngIf=\"isObservationSet\" class=\"form-control\" color=\"accent\">\n        <mat-label>Select your color for the observation set:</mat-label>\n        <input type=\"color\" class=\"color-picker-input\" matInput formControlName=customSetColor>\n      </mat-form-field>\n\n    </div>\n\n\n    <div mat-dialog-actions>\n      <button mat-button mat-raised-button color=\"accent\" (click)=\"confirmAdd()\" \n        [type]=\"submit\" [disabled]=\"!setForm.valid\" [mat-dialog-close]=\"1\">Save</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n    <p></p>\n  </form>\n</div>","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewChild,\n  AfterViewInit,\n  Input,\n  ElementRef\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { AnalysesService } from '@app/features/analysis/services/analysis.service';\nimport { merge, BehaviorSubject, Observable } from 'rxjs';\nimport { tap, finalize } from 'rxjs/operators';\nimport { DataSource } from '@angular/cdk/table';\nimport * as d3 from 'd3';\nimport d3Tip from 'd3-tip';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { CustomSetType, CustomSet } from '@app/_models/metadata';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddSampleSetComponent } from '../dialogs/add-sample-set/add-sample-set.component';\nimport { MetadataService } from '@app/core/metadata/metadata.service';\nimport { Utils } from '@app/shared/utils/utils';\nimport { NotificationService } from '../../../core/core.module';\n\n/**\n * Differential expression component\n *\n * Used for common behavior of the various differential expression methods\n */\n@Component({\n  selector: 'mev-diff-exp',\n  templateUrl: './differential_expression.component.html',\n  styleUrls: ['./differential_expression.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class DifferentialExpressionComponent implements OnInit, AfterViewInit {\n  @Input() outputs;\n  dataSource: FeaturesDataSource; // datasource for MatTable\n  boxPlotData; // data retrieved from the dgeResourceId resource, pre-processed for D3 box plot visualization\n  dgeResourceId;\n  analysisName = '';\n  imageName = '';\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild('boxPlot') svgElement: ElementRef;\n\n  /* Table settings */\n  displayedColumns = [\n    'name',\n    'overall_mean',\n    'log2FoldChange',\n    'pvalue',\n    'padj',\n    'lfcSE',\n    'stat'\n  ];\n  operators = [\n    { id: 'eq', name: ' = ' },\n    { id: 'gte', name: ' >=' },\n    { id: 'gt', name: ' > ' },\n    { id: 'lte', name: ' <=' },\n    { id: 'lt', name: ' < ' },\n    { id: 'absgt', name: 'ABS(x) > ' },\n    { id: 'abslt', name: 'ABS(x) < ' }\n  ];\n\n  defaultPageIndex = 0;\n  defaultPageSize = 10;\n  defaultSorting = { field: 'padj', direction: 'asc' };\n\n  // Controls how large a custom FeatureSet can be.\n  // Otherwise, clicking the 'add features set' button\n  // with a full table could create exceptionally large feature sets\n  // (which aren't typically useful anyway)\n  maxFeatureSetSize = 500;\n\n  /* Table filters */\n  allowedFilters = {\n    /*name: { defaultValue: '', hasOperator: false },*/\n    padj: {\n      defaultValue: '',\n      hasOperator: true,\n      operatorDefaultValue: 'lte'\n    },\n    log2FoldChange: {\n      defaultValue: '',\n      hasOperator: true,\n      operatorDefaultValue: 'lte'\n    }\n  };\n\n  filterForm = new FormGroup({});\n\n  /* D3 Chart settings */\n  containerId = '#boxPlot';\n  margin = { top: 50, right: 300, bottom: 100, left: 50 };\n  outerHeight = 700;\n  precision = 2;\n  delta = 0.1; // used for X and Y axis ranges (we add delta to avoid bug when both max and min are zeros)\n  boxWidth = 20; // the width of rectangular box\n  jitterWidth = 10;\n  tooltipOffsetX = 10; // to position the tooltip on the right side of the triggering element\n\n  boxPlotTypes = {\n    Experimental: {\n      label: 'Treated/Experimental',\n      yCat: 'experValues',\n      yPoints: 'experPoints',\n      color: '#f40357'\n    },\n    Base: {\n      label: 'Baseline/Control',\n      yCat: 'baseValues',\n      yPoints: 'basePoints',\n      color: '#f4cc03'\n    }\n  };\n  xCat = 'key'; // field name in data for X axis\n  yExperCat = this.boxPlotTypes.Experimental.yCat; // field name in data for Y axis (used to build experimental box plots)\n  yBaseCat = this.boxPlotTypes.Base.yCat; // field name in data for Y axis (used to build baseline box plots)\n  yExperPoints = this.boxPlotTypes.Experimental.yPoints; // field name in data for Y axis (used to draw individual points for experimental samples)\n  yBasePoints = this.boxPlotTypes.Base.yPoints; // field name in data for Y axis (used to draw individual points for baseline samples)\n  xScale; // scale functions to transform data values into the the range\n  yScale;\n  customObservationSets: CustomSet[];\n\n  constructor(\n    private analysesService: AnalysesService,\n    public dialog: MatDialog,\n    private metadataService: MetadataService,\n    private readonly notificationService: NotificationService\n  ) {\n    this.dataSource = new FeaturesDataSource(this.analysesService);\n\n    // adding form controls depending on the tables settings (the allowedFilters property)\n    for (const key in this.allowedFilters) {\n      if (this.allowedFilters.hasOwnProperty(key)) {\n        // TSLint rule\n        const defaultValue = this.allowedFilters[key].defaultValue;\n        this.filterForm.addControl(key, new FormControl(defaultValue));\n        if (this.allowedFilters[key].hasOperator) {\n          const operatorDefaultValue = this.allowedFilters[key]\n            .operatorDefaultValue;\n          this.filterForm.addControl(\n            key + '_operator',\n            new FormControl(operatorDefaultValue)\n          );\n        }\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.initializeFeatureResource();\n  }\n\n  ngAfterViewInit() {\n    this.sort.sortChange.subscribe(\n      () => (this.paginator.pageIndex = this.defaultPageIndex)\n    );\n    this.dataSource.connect().subscribe(featureData => {\n      this.boxPlotData = featureData;\n      this.preprocessBoxPlotData();\n      this.createChart();\n    });\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        tap(() => {\n          this.loadFeaturesPage();\n          this.preprocessBoxPlotData();\n          this.createChart();\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnChanges(): void {\n    this.initializeFeatureResource();\n    this.customObservationSets = this.metadataService.getCustomObservationSets();\n  }\n\n  initializeFeatureResource(): void {\n    this.dgeResourceId = this.outputs.dge_results;\n    const sorting = {\n      sortField: this.defaultSorting.field,\n      sortDirection: this.defaultSorting.direction\n    };\n    this.dataSource.loadFeatures(\n      this.dgeResourceId,\n      {},\n      sorting,\n      this.defaultPageIndex,\n      this.defaultPageSize\n    );\n  }\n\n  /**\n   * Function is triggered when submitting the form with table filters\n   */\n  onSubmit() {\n    this.paginator.pageIndex = this.defaultPageIndex;\n    this.loadFeaturesPage();\n  }\n\n  /**\n   * Function is triggered when resizing the chart\n   */\n  onResize(event) {\n    this.createChart();\n  }\n\n  /**\n   * Function to prepape the outputs data for D3 box plot visualization\n   */\n  preprocessBoxPlotData() {\n    const baseSamples = this.outputs.base_condition_samples.elements.map(\n      elem => elem.id\n    );\n    const experSamples = this.outputs.experimental_condition_samples.elements.map(\n      elem => elem.id\n    );\n\n    /* The input to the basic dge analysis is two observation sets. To populate that option,\n    *  the user would have had to define those. To keep everything consistent, we query\n    *  the existing observation sets and compare them to the baseSamples/experSamples. If they\n    *  match, then we color the groups based on the colors assigned to those observation sets.\n    */\n    this.customObservationSets.forEach(\n      obsSet => {\n        const obsSetSamples = obsSet.elements.map(elem => elem.id);\n        if (Utils.stringArraysEquivalent(obsSetSamples, baseSamples)) {\n          // matches the baseSamples array\n          if(obsSet.color) {\n            this.boxPlotTypes.Base.color = obsSet.color\n          }\n        }\n        if (Utils.stringArraysEquivalent(obsSetSamples, experSamples)) {\n          // matches the experSamples array\n          if(obsSet.color) {\n            this.boxPlotTypes.Experimental.color = obsSet.color\n          }\n        }\n      }\n    );\n\n    const countsFormatted = this.boxPlotData.map(elem => {\n      const baseNumbers = baseSamples.reduce(\n        (acc, cur) => [...acc, elem[cur]],\n        []\n      );\n      const experNumbers = experSamples.reduce(\n        (acc, cur) => [...acc, elem[cur]],\n        []\n      );\n      const newElem = { key: elem.name };\n      newElem[this.yExperCat] = Utils.getBoxPlotStatistics(experNumbers);\n      newElem[this.yBaseCat] = Utils.getBoxPlotStatistics(baseNumbers);\n      const experPts = [];\n      experSamples.forEach((k,i) => experPts.push({pt_label: k, value: experNumbers[i]}));\n      const basePts = [];\n      baseSamples.forEach((k,i) => basePts.push({pt_label: k, value: baseNumbers[i]}));\n      newElem[this.yExperPoints] = experPts;\n      newElem[this.yBasePoints] = basePts;\n      return newElem;\n    });\n    this.boxPlotData = countsFormatted;\n\n    // overwrite labels if there are custom names defined by the user\n    if (this.outputs.base_condition_name) {\n      this.boxPlotTypes.Base.label = this.outputs.base_condition_name;\n    }\n\n    if (this.outputs.experimental_condition_name) {\n      this.boxPlotTypes.Experimental.label = this.outputs.experimental_condition_name;\n    }\n  }\n\n  /**\n   * Function that is triggered when the user clicks the \"Create a custom sample\" button\n   */\n  onCreateCustomFeatureSet() {\n\n    // We don't want to create exceptionally large feature sets. Check\n    // that they don't exceed some preset size\n    const setSize = this.dataSource.featuresCount;\n    if (setSize > this.maxFeatureSetSize){\n      const errorMessage = `The current size of \n        your set (${setSize}) is larger than the \n        maximum allowable size (${this.maxFeatureSetSize}).\n        Please filter the table further to reduce the size.`\n      this.notificationService.error(errorMessage);\n      return;\n    }\n    \n    const dialogRef = this.dialog.open(AddSampleSetComponent, {\n      data: { type: CustomSetType.FeatureSet }\n    });\n\n    dialogRef.afterClosed().subscribe(customSetData => {\n      if (customSetData) {\n        // We want ALL of the features passing the filter, not just those shown on the immediate\n        // page in the table.\n        const filterValues = this.createFilters();\n        this.analysesService\n          .getResourceContent(\n            this.dgeResourceId,\n            null,\n            null,\n            filterValues,\n            {}\n          )\n          .subscribe(features => {\n            const elements = features.map(feature => {\n               return {id: feature.rowname};\n            });\n            const customSet = {\n              name: customSetData.name,\n              type: CustomSetType.FeatureSet,\n              elements: elements,\n              multiple: true\n            };\n            this.metadataService.addCustomSet(customSet);\n          });\n      }\n    });\n  }\n\n  /**\n   * Function to generate D3 box plot\n   */\n  createChart(): void {\n    const outerWidth = this.svgElement.nativeElement.offsetWidth;\n    const outerHeight = this.outerHeight;\n    const width = outerWidth - this.margin.left - this.margin.right;\n    const height = outerHeight - this.margin.top - this.margin.bottom;\n\n    const data = this.boxPlotData;\n    d3.select(this.containerId)\n      .selectAll('svg')\n      .remove();\n\n    const svg = d3\n      .select(this.containerId)\n      .append('svg')\n      .attr('width', outerWidth)\n      .attr('height', outerHeight)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + this.margin.left + ',' + this.margin.top + ')'\n      )\n      .style('fill', 'none');\n\n    // Tooltip\n    const tooltipOffsetX = this.tooltipOffsetX;\n    const tip = d3Tip()\n      .attr('class', 'd3-tip')\n      .offset([-10, 0])\n      .html((event, d) => {\n\n        // if the pt_label exists we know we are hovering over an individual point\n        if ('pt_label' in d ){\n          return d.pt_label + ': ' + d.value.toFixed(this.precision);\n        }\n\n        // if it is a hover over a box plot, show table with basic statistic values\n        const htmlTable =\n          '<table><thead><th></th><th>' +\n          this.boxPlotTypes.Experimental.label +\n          '</th><th>' +\n          this.boxPlotTypes.Base.label +\n          '</th><thead>' +\n          '<tr><td>Q1</td><td>' +\n          d[this.yExperCat].q1.toFixed(this.precision) +\n          '</td><td>' +\n          d[this.yBaseCat].q1.toFixed(this.precision) +\n          '</td></tr>' +\n          '<tr><td>Q2</td><td>' +\n          d[this.yExperCat].median.toFixed(this.precision) +\n          '</td><td>' +\n          d[this.yBaseCat].median.toFixed(this.precision) +\n          '</td></tr>' +\n          '<tr><td>Q3</td><td>' +\n          d[this.yExperCat].q3.toFixed(this.precision) +\n          '</td><td>' +\n          d[this.yBaseCat].q3.toFixed(this.precision) +\n          '</td></tr>' +\n          '<tr><td>IQR</td><td>' +\n          d[this.yExperCat].iqr.toFixed(this.precision) +\n          '</td><td>' +\n          d[this.yBaseCat].iqr.toFixed(this.precision) +\n          '</td></tr>' +\n          '<tr><td>MIN</td><td>' +\n          d[this.yExperCat].min.toFixed(this.precision) +\n          '</td><td>' +\n          d[this.yBaseCat].min.toFixed(this.precision) +\n          '</td></tr>' +\n          '<tr><td>MAX</td><td>' +\n          d[this.yExperCat].max.toFixed(this.precision) +\n          '</td><td>' +\n          d[this.yBaseCat].max.toFixed(this.precision) +\n          '</td></tr>' +\n          '</table>';\n        return '<b>' + d[this.xCat] + '</b><br>' + htmlTable;\n      });\n    svg.call(tip);\n\n    svg\n      .append('rect')\n      .attr('width', width)\n      .attr('height', height)\n      .style('fill', 'transparent');\n\n    /* Setting up X-axis and Y-axis*/\n    this.xScale = d3\n      .scaleBand()\n      .rangeRound([0, width])\n      .domain(data.map(d => d.key))\n      .paddingInner(1)\n      .paddingOuter(0.5);\n\n    this.yScale = d3.scaleLinear().rangeRound([height, 0]);\n\n    const experMaxVal = d3.max(data, d => <number>d[this.yExperCat].max);\n    const experMinVal = d3.min(data, d => <number>d[this.yExperCat].min);\n    const baseMaxVal = d3.max(data, d => <number>d[this.yBaseCat].max);\n    const baseMinVal = d3.min(data, d => <number>d[this.yBaseCat].min);\n    const yMax = Math.max(baseMaxVal, experMaxVal);\n    const yMin = Math.min(baseMinVal, experMinVal);\n    const yRange = yMax - yMin + this.delta; // add delta to avoid bug when both max and min are zeros\n\n    this.yScale.domain([\n      yMin - yRange * this.delta,\n      yMax + yRange * this.delta\n    ]);\n\n    svg\n      .append('g')\n      .attr('transform', 'translate(0,' + height + ')')\n      .attr('class', 'x-axis')\n      .call(d3.axisBottom(this.xScale))\n      .selectAll('text')\n      .style('text-anchor', 'end')\n      .attr('dx', '-.8em')\n      .attr('dy', '.15em')\n      .attr('transform', 'rotate(-45)');\n\n    svg.append('g').call(d3.axisLeft(this.yScale));\n\n    // Box plots\n    Object.keys(this.boxPlotTypes).forEach((key, i) => {\n      const yCatProp = this.boxPlotTypes[key].yCat; //e.g. 'experValues'\n      const yPointsProp = this.boxPlotTypes[key].yPoints; //e.g. 'experPoints'\n      const color = this.boxPlotTypes[key].color;\n\n      // Main vertical line\n      svg\n        .selectAll('.vertLines')\n        .data(data)\n        .enter()\n        .append('line')\n        .attr(\n          'x1',\n          (d: any) =>\n            this.xScale(d[this.xCat]) + (1.2 * i - 0.6) * this.boxWidth\n        )\n        .attr(\n          'x2',\n          (d: any) =>\n            this.xScale(d[this.xCat]) + (1.2 * i - 0.6) * this.boxWidth\n        )\n        .attr('y1', (d: any) => this.yScale(d[yCatProp].min))\n        .attr('y2', (d: any) => this.yScale(d[yCatProp].max))\n        .attr('stroke', 'black')\n        .style('width', 10);\n\n      svg\n        .selectAll('.boxes')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr(\n          'x',\n          d => this.xScale(d[this.xCat]) + (1.2 * i - 1.1) * this.boxWidth\n        )\n        .attr('y', d => this.yScale(d[yCatProp].q3))\n        .attr(\n          'height',\n          d => this.yScale(d[yCatProp].q1) - this.yScale(d[yCatProp].q3)\n        )\n        .attr('width', this.boxWidth)\n        .attr('stroke', 'black')\n        .style('fill', color)\n        .attr('pointer-events', 'all')\n        .on('mouseover', function(mouseEvent: any, d) {\n          tip.show(mouseEvent, d, this);\n          tip.style('left', mouseEvent.x + tooltipOffsetX + 'px');\n        })\n        .on('mouseout', tip.hide);\n\n      // Medians\n      svg\n        .selectAll('.medianLines')\n        .data(data)\n        .enter()\n        .append('line')\n        .attr(\n          'x1',\n          d => this.xScale(d[this.xCat]) + (1.2 * i - 1.1) * this.boxWidth\n        )\n        .attr(\n          'x2',\n          d => this.xScale(d[this.xCat]) + (1.2 * i - 0.1) * this.boxWidth\n        )\n        .attr('y1', d => this.yScale(d[yCatProp].median))\n        .attr('y2', d => this.yScale(d[yCatProp].median))\n        .attr('stroke', 'black')\n        .style('width', 80);\n\n      // Add individual points with jitter\n      svg\n        .selectAll('genePoints')\n        .data(data)\n        .enter()\n        .each((d, ix, nodes) => {\n          d3.select(nodes[ix])\n            .selectAll('.individualPoints')\n            .data(d[yPointsProp])\n            .enter()\n            .append('circle')\n            .attr(\n              'cx',\n              this.xScale(data[ix][this.xCat]) +\n                (1.2 * i - 0.6) * this.boxWidth -\n                this.jitterWidth / 2 +\n                Math.random() * this.jitterWidth\n            )\n            .attr('cy', d => this.yScale(d['value']))\n            .attr('r', 3)\n            .style('fill', color)\n            .attr('stroke', '#000000')\n            .attr('pointer-events', 'all')\n            .on('mouseover', function(mouseEvent: any, d) {\n              tip.show(mouseEvent, d, this);\n              tip.style('left', mouseEvent.x + tooltipOffsetX + 'px');\n            })\n            .on('mouseout', tip.hide);\n        });\n\n      // Legend\n      const boxPlotColors = Object.keys(this.boxPlotTypes).map(key => ({\n        label: this.boxPlotTypes[key].label,\n        color: this.boxPlotTypes[key].color\n      }));\n      const legend = svg\n        .selectAll('.legend')\n        .data(boxPlotColors)\n        .enter()\n        .append('g')\n        .classed('legend', true)\n        .attr('transform', function(d, i) {\n          return 'translate(0,' + i * 20 + ')';\n        });\n\n      legend\n        .append('circle')\n        .attr('r', 5)\n        .attr('cx', width + 20)\n        .attr('fill', d => d.color);\n\n      legend\n        .append('text')\n        .attr('x', width + 30)\n        .attr('dy', '.35em')\n        .style('fill', '#000')\n        .attr('class', 'legend-label')\n        .text(d => d.label);\n    });\n  }\n\n  /**\n   * Function to construct the parameter filters that are passed to the backend\n   */\n  createFilters(){\n    const formValues = this.filterForm.value; // i.e. {name: \"asdfgh\", pvalue: 3, pvalue_operator: \"lte\", log2FoldChange: 2, log2FoldChange_operator: \"lte\"}\n    const paramFilter = {}; // has values {'log2FoldChange': '[absgt]:2'};\n    for (const key in this.allowedFilters) {\n      if (\n        formValues.hasOwnProperty(key) &&\n        formValues[key] !== '' &&\n        formValues[key] !== null\n      ) {\n        if (formValues.hasOwnProperty(key + '_operator')) {\n          paramFilter[key] =\n            '[' + formValues[key + '_operator'] + ']:' + formValues[key];\n        } else {\n          paramFilter[key] = '[eq]:' + formValues[key];\n        }\n      }\n    }\n    return paramFilter;\n  }\n\n  /**\n   * Function to load features by filters, pages and sorting settings specified by a user\n   */\n  loadFeaturesPage() {\n    const paramFilter = this.createFilters();\n\n    const sorting = {\n      sortField: this.sort.active,\n      sortDirection: this.sort.direction\n    };\n\n    this.dataSource.loadFeatures(\n      this.dgeResourceId,\n      paramFilter,\n      sorting,\n      this.paginator.pageIndex,\n      this.paginator.pageSize\n    );\n  }\n}\n\nexport interface DGEFeature {\n  name: string;\n  overall_mean: number;\n  Control: number;\n  Experimental: number;\n  log2FoldChange: number;\n  lfcSE: number;\n  stat: number;\n  pvalue: number;\n  padj: number;\n}\n\nexport class FeaturesDataSource implements DataSource<DGEFeature> {\n  public featuresSubject = new BehaviorSubject<DGEFeature[]>([]);\n  public featuresCount = 0;\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private analysesService: AnalysesService) {}\n\n  loadFeatures(\n    resourceId: string,\n    filterValues: object,\n    sorting: object,\n    pageIndex: number,\n    pageSize: number\n  ) {\n    this.loadingSubject.next(true);\n\n    this.analysesService\n      .getResourceContent(\n        resourceId,\n        pageIndex + 1,\n        pageSize,\n        filterValues,\n        sorting\n      )\n      .pipe(finalize(() => this.loadingSubject.next(false)))\n      .subscribe(features => {\n        this.featuresCount = features.count;\n        const featuresFormatted = features.results.map(feature => {\n          const newFeature = { name: feature.rowname, ...feature.values };\n          return newFeature;\n        });\n        return this.featuresSubject.next(featuresFormatted);\n      });\n  }\n\n  connect(): Observable<DGEFeature[]> {\n    return this.featuresSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.featuresSubject.complete();\n    this.loadingSubject.complete();\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport * as svgAsPng from 'save-svg-as-png';\n\n/**\n * Download Button Component\n *\n * Used in D3 charts for downloading svg image\n */\n@Component({\n  selector: 'mev-download-button',\n  templateUrl: './download-button.component.html',\n  styleUrls: ['./download-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DownloadButtonComponent {\n  @Input() containerId;\n  @Input() imageName;\n  constructor() {}\n\n  /**\n   * Function to download the svg image\n   */\n  onSaveImage() {\n    svgAsPng.saveSvgAsPng(\n      document.querySelector(this.containerId + ' svg'),\n      this.imageName\n    );\n  }\n}\n","<button mat-button color=\"accent\" (click)=\"onSaveImage()\" title=\"Click to download the image\">\n    <mat-icon>save_alt</mat-icon>\n</button>","import { Component } from '@angular/core';\nimport { DifferentialExpressionComponent } from '../differential_expression/differential_expression.component';\n\n@Component({\n  selector: 'mev-edger',\n  templateUrl: '../differential_expression/differential_expression.component.html',\n  styleUrls: ['../differential_expression/differential_expression.component.scss']\n})\nexport class EdgerComponent extends DifferentialExpressionComponent {\n    imageName = 'edgeR'\n    analysisName = 'edgeR'\n\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n    }\n    ngOnChanges() {\n        super.ngOnChanges();\n    }\n}\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { DataSource } from '@angular/cdk/table';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { AnalysesService } from '@app/features/analysis/services/analysis.service';\nimport { finalize, tap } from 'rxjs/operators';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MetadataService } from '@app/core/metadata/metadata.service';\nimport { AddSampleSetComponent } from '../../dialogs/add-sample-set/add-sample-set.component';\nimport { CustomSetType } from '@app/_models/metadata';\n\n/**\n * FGSEA Component\n *\n * Used for GSEA analysis\n */\n@Component({\n  selector: 'mev-gsea',\n  templateUrl: './gsea.component.html',\n  styleUrls: ['./gsea.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class GseaComponent implements OnInit {\n  @Input() outputs;\n  dataSource: PathwayDataSource; // datasource for MatTable\n  gseaResourceId;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  /* Table settings */\n  displayedColumns = ['pathway', 'ranks', 'pval', 'padj', 'NES', 'leadingEdge', 'actions'];\n\n  operators = [\n    { id: 'eq', name: ' = ' },\n    { id: 'gte', name: ' >=' },\n    { id: 'gt', name: ' > ' },\n    { id: 'lte', name: ' <=' },\n    { id: 'lt', name: ' < ' },\n    { id: 'absgt', name: 'ABS(x) > ' },\n    { id: 'abslt', name: 'ABS(x) < ' }\n  ];\n\n  defaultPageIndex = 0;\n  defaultPageSize = 10;\n  defaultSorting = { field: 'pval', direction: 'asc' };\n\n  /* Table filters */\n  allowedFilters = {\n    padj: {\n      defaultValue: '',\n      hasOperator: true,\n      operatorDefaultValue: 'lte'\n    },\n    NES: {\n      defaultValue: 0,\n      hasOperator: true,\n      operatorDefaultValue: 'absgt'\n    }\n  };\n\n  filterForm = new FormGroup({});\n\n  constructor(\n    private analysesService: AnalysesService,\n    public dialog: MatDialog,\n    private metadataService: MetadataService\n  ) {\n    this.dataSource = new PathwayDataSource(this.analysesService);\n\n    // adding form controls depending on the tables settings (the allowedFilters property)\n    for (const key in this.allowedFilters) {\n      if (this.allowedFilters.hasOwnProperty(key)) {\n        // TSLint rule\n        const defaultValue = this.allowedFilters[key].defaultValue;\n        this.filterForm.addControl(key, new FormControl(defaultValue));\n        if (this.allowedFilters[key].hasOperator) {\n          const operatorDefaultValue = this.allowedFilters[key]\n            .operatorDefaultValue;\n          this.filterForm.addControl(\n            key + '_operator',\n            new FormControl(operatorDefaultValue)\n          );\n        }\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.initializeResource();\n  }\n\n  ngAfterViewInit() {\n    this.sort.sortChange.subscribe(\n      () => (this.paginator.pageIndex = this.defaultPageIndex)\n    );\n    this.dataSource.connect().subscribe(() => {});\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        tap(() => {\n          this.loadPathwaysPage();\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnChanges(): void {\n    this.initializeResource();\n  }\n\n  initializeResource(): void {\n    this.gseaResourceId = this.outputs.pathway_results;\n    const sorting = {\n      sortField: this.defaultSorting.field,\n      sortDirection: this.defaultSorting.direction\n    };\n    this.dataSource.loadPathways(\n      this.gseaResourceId,\n      {},\n      sorting,\n      this.defaultPageIndex,\n      this.defaultPageSize\n    );\n  }\n\n  /**\n   * Function is triggered when submitting the form with table filters\n   */\n  onSubmit() {\n    this.paginator.pageIndex = this.defaultPageIndex;\n    this.loadPathwaysPage();\n  }\n\n  /**\n   * Function that is triggered when the user clicks the \"Create a custom sample\" button\n   */\n  onCreateFeatureSet(row) {\n    const features = row.leadingEdge.map(elem => ({\n      id: elem\n    }));\n\n    const dialogRef = this.dialog.open(AddSampleSetComponent, {\n      data: { type: CustomSetType.FeatureSet, name: row.pathway }\n    });\n\n    dialogRef.afterClosed().subscribe(customSetData => {\n      if (customSetData) {\n        const customSet = {\n          name: customSetData.name,\n          type: CustomSetType.FeatureSet,\n          elements: features,\n          multiple: true\n        };\n\n        this.metadataService.addCustomSet(customSet);\n      }\n    });\n  }\n\n  /**\n   * Function to load pathway list by page, filter and sorting settings specified by a user\n   */\n  loadPathwaysPage() {\n    const formValues = this.filterForm.value; // i.e. {name: \"asdfgh\", pvalue: 3, pvalue_operator: \"lte\", log2FoldChange: 2, log2FoldChange_operator: \"lte\"}\n    const paramFilter = {}; // has values {'log2FoldChange': '[absgt]:2'};\n    for (const key in this.allowedFilters) {\n      if (\n        formValues.hasOwnProperty(key) &&\n        formValues[key] !== '' &&\n        formValues[key] !== null\n      ) {\n        if (formValues.hasOwnProperty(key + '_operator')) {\n          paramFilter[key] =\n            '[' + formValues[key + '_operator'] + ']:' + formValues[key];\n        } else {\n          paramFilter[key] = '[eq]:' + formValues[key];\n        }\n      }\n    }\n\n    const sorting = {\n      sortField: this.sort.active,\n      sortDirection: this.sort.direction\n    };\n\n    this.dataSource.loadPathways(\n      this.gseaResourceId,\n      paramFilter,\n      sorting,\n      this.paginator.pageIndex,\n      this.paginator.pageSize\n    );\n  }\n}\n\nexport interface Pathway {\n  pathway: string;\n  pval: number;\n  padj: number;\n  log2err: number;\n  ES: number;\n  NES: number;\n  size: number;\n  ranks: number[];\n}\n\nexport class PathwayDataSource implements DataSource<Pathway> {\n  public pathwaysSubject = new BehaviorSubject<Pathway[]>([]);\n  public pathwaysCount = 0;\n  private loadingSubject = new BehaviorSubject<boolean>(false);\n  public loading$ = this.loadingSubject.asObservable();\n\n  constructor(private analysesService: AnalysesService) {}\n\n  loadPathways(\n    resourceId: string,\n    filterValues: object,\n    sorting: object,\n    pageIndex: number,\n    pageSize: number\n  ) {\n    this.loadingSubject.next(true);\n\n    this.analysesService\n      .getResourceContent(\n        resourceId,\n        pageIndex + 1,\n        pageSize,\n        filterValues,\n        sorting\n      )\n      .pipe(finalize(() => this.loadingSubject.next(false)))\n      .subscribe(response => {\n        this.pathwaysCount = response.count;\n        return this.pathwaysSubject.next(response.results);\n      });\n  }\n\n  connect(): Observable<Pathway[]> {\n    return this.pathwaysSubject.asObservable();\n  }\n\n  disconnect(): void {\n    this.pathwaysSubject.complete();\n    this.loadingSubject.complete();\n  }\n}\n","<mat-card class=\"analysis-card\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"analysis-card__img\"></div>\n    <mat-card-title>FGSEA: {{ outputs?.job_name }}</mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"analysis-card__main\">\n    <p class=\"analysis-card__instruction\">\n      Use the table to navigate\n      the fgsea results. <br>\n    </p>\n    <p class=\"analysis-card__instruction\">\n      You can create custom gene sets based on the \"leading edge\" genes of each pathway.\n    </p>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <div class=\"analysis-card__content\">\n      <section class=\"filter-section\">\n        <form [formGroup]=\"filterForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"filter\">\n            <span class=\"label\">\n              P-value adjusted:\n            </span>\n            <mat-form-field class=\"form-control form-control__small\" color=\"accent\">\n              <mat-select formControlName=\"padj_operator\">\n                <mat-option *ngFor=\"let operator of operators\" [value]=\"operator.id\">\n                  {{ operator.name }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"form-control\">\n              <input matInput formControlName=\"padj\" type=number step=any min=0>\n            </mat-form-field>\n          </div>\n          <div class=\"filter\">\n            <span class=\"label\">\n              Enrichment score (NES):\n            </span>\n            <mat-form-field class=\"form-control form-control__small\" color=\"accent\">\n              <mat-select formControlName=\"NES_operator\">\n                <mat-option *ngFor=\"let operator of operators\" [value]=\"operator.id\">\n                  {{ operator.name }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n            <mat-form-field class=\"form-control\">\n              <input matInput formControlName=\"NES\" type=number step=any min=0>\n            </mat-form-field>\n          </div>\n          <button type=\"submit\" [disabled]=\"!filterForm.valid\" mat-raised-button color=\"accent\">Apply filters</button>\n        </form>\n\n      </section>\n\n      <div class=\"mat-elevation-z8\">\n        <mat-table class=\"deseq-table\" [dataSource]=\"dataSource\" matSort [matSortActive]=\"defaultSorting.field\"\n          [matSortDirection]=\"defaultSorting.direction\" matSortDisableClear>\n\n          <ng-container matColumnDef=\"pathway\">\n            <mat-header-cell *matHeaderCellDef>Pathway</mat-header-cell>\n            <mat-cell *matCellDef=\"let row\">{{row.pathway}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"NES\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>NES</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">{{row.NES}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"padj\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>P-value adjusted</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">{{row.padj}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"pval\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>P-value</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">{{row.pval}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"leadingEdge\">\n            <mat-header-cell *matHeaderCellDef>Leading Edge size</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">{{row.leadingEdge.length}}</mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"ranks\">\n            <mat-header-cell *matHeaderCellDef >Gene ranks</mat-header-cell>\n            <mat-cell class=\"description-cell\" *matCellDef=\"let row\">\n              <mev-rug-plot [plotData]=\"row.ranks\"></mev-rug-plot>\n            </mat-cell>\n          </ng-container>\n\n          <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef></mat-header-cell>\n\n            <mat-cell *matCellDef=\"let row; let i=index;\">\n              <button mat-raised-button color=\"accent\" title=\"Create feature set\" \n                (click)=\"onCreateFeatureSet(row)\">\n                Create feature set\n              </button>\n              <!-- <button mat-raised-button color=\"accent\" title=\"Show top genes\" \n                (click)=\"onShowTopGenes(row)\">\n                Show top genes\n              </button> -->\n            </mat-cell>\n          </ng-container>\n\n          <!-- <ng-container matColumnDef=\"topGeneView\">\n            <mat-header-cell *matHeaderCellDef class=\"file-table-header\"></mat-header-cell>\n            <mat-cell *matCellDef=\"let row; let i=index;\">\n              \n            </mat-cell>\n          </ng-container> -->\n\n\n\n          <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n          <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n\n        </mat-table>\n\n\n        <mat-paginator [length]=\"dataSource.pathwaysCount\" [pageSize]=\"10\" [pageSizeOptions]=\"[10, 25, 50]\">\n        </mat-paginator>\n      </div>\n\n      <!-- <div class=\"button-panel\">\n          <button mat-raised-button color=\"accent\" (click)=\"onCreateCustomFeatureSet()\">\n            <mat-icon>add</mat-icon>\n            Save as a feature set\n          </button>\n          <mev-download-button [containerId]=\"containerId\" [imageName]=\"imageName\"></mev-download-button>  \n        </div>       -->\n\n\n    </div>\n\n  </mat-card-content>\n\n</mat-card>","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnChanges,\n  ElementRef,\n  ViewChild\n} from '@angular/core';\nimport { AnalysesService } from '@app/features/analysis/services/analysis.service';\nimport * as d3 from 'd3';\nimport d3Tip from 'd3-tip';\nimport { AddSampleSetComponent } from '../dialogs/add-sample-set/add-sample-set.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MetadataService } from '@app/core/metadata/metadata.service';\nimport { CustomSetType } from '@app/_models/metadata';\n\n/**\n * HCL Component\n *\n * Used for Hierarchical Clustering (HCL) analysis\n */\n@Component({\n  selector: 'mev-hcl',\n  templateUrl: './hcl.component.html',\n  styleUrls: ['./hcl.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class HclComponent implements OnChanges {\n  @Input() outputs;\n  @ViewChild('treePlot') svgElement: ElementRef;\n  hierObsData;\n\n  customObservationSets = [];\n  selectedSamples = [];\n\n  /* Chart settings */\n  obsTreeContainerId = '#observationPlot'; // chart container id\n  obsImageName = 'Hierarchical clustering - Observations'; // file name for downloaded SVG image\n  margin = { top: 50, right: 300, bottom: 50, left: 50 }; // chart margins\n  outerHeight = 500;\n  maxTextLabelLength = 10;\n  tooltipOffsetX = 10; // position the tooltip on the right side of the triggering element\n\n  constructor(\n    private apiService: AnalysesService,\n    private metadataService: MetadataService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnChanges(): void {\n    this.generateHCL();\n  }\n\n  onResize(event) {\n    this.createChart(this.hierObsData, this.obsTreeContainerId);\n  }\n\n  /**\n   * Function to retrieve data for Observation HCL plot\n   */\n  generateHCL() {\n    const obsResourceId = this.outputs.observations_hcl;\n    this.customObservationSets = this.metadataService.getCustomObservationSets();\n    this.apiService.getResourceContent(obsResourceId).subscribe(response => {\n      this.hierObsData = response;\n      this.createChart(this.hierObsData, this.obsTreeContainerId);\n    });\n  }\n\n  /**\n   * Function to create dendrogram\n   */\n  private createChart(hierData: any, containerId: string): void {\n    if (!hierData) return;\n\n    const outerWidth = this.svgElement.nativeElement.offsetWidth;\n    const outerHeight = this.outerHeight;\n    const width = outerWidth - this.margin.left - this.margin.right;\n    const height = outerHeight - this.margin.top - this.margin.bottom;\n\n    d3.select(containerId)\n      .selectAll('svg')\n      .remove();\n\n    const root = d3.hierarchy(hierData);\n    let ifCustomObservationSetExists = false;\n    root.leaves().map(leaf => {\n      const sample = leaf.data.name;\n      leaf.data.isLeaf = true;\n      leaf.data.colors = [];\n      this.customObservationSets.forEach(set => {\n        if (set.elements.some(e => e.id === sample)) {\n          ifCustomObservationSetExists = true;\n          leaf.data.colors.push(set.color);\n        }\n      });\n    });\n    const leafNodeNumber = root.leaves().length; // calculate the number of nodes\n    // add extra px for every node above 20 to the set height\n    const addHeight = leafNodeNumber > 20 ? (leafNodeNumber - 20) * 30 : 0;\n    const canvasHeight = height + addHeight;\n    const tree = d3.cluster().size([canvasHeight, width - 200]);\n    tree(root);\n    const svg = d3\n      .select(containerId)\n      .append('svg')\n      .attr('width', outerWidth)\n      .attr('height', outerHeight + addHeight)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + this.margin.left + ',' + this.margin.top + ')'\n      )\n      .style('fill', 'none');\n\n    svg\n      .selectAll('path.link')\n      .data(root.descendants().slice(1))\n      .enter()\n      .append('path')\n      .attr('class', 'link')\n      .attr('d', elbow);\n\n    const that = this;\n    const node = svg\n      .selectAll('g.node')\n      .data(root.descendants())\n      .enter()\n      .append('g')\n      .attr('class', 'node')\n      .attr('transform', d => 'translate(' + d['y'] + ',' + d['x'] + ')')\n      .on('click', highlightNodes);\n\n    node\n      .append('circle')\n      .filter(d => d.data.name.length > 0)\n      .attr('r', 4);\n\n    const leafNode = node.filter(d => d.data.isLeaf === true);\n\n    function highlightNodes(event, d: any) {\n      d.descendants().forEach(\n        node =>\n          (node.data.isHighlighted = node.data.isHighlighted ? false : true)\n      );\n\n      that.selectedSamples = root\n        .leaves()\n        .filter(leaf => leaf.data.isHighlighted)\n        .map(leaf => leaf.data.name);\n\n      d3.select(containerId)\n        .selectAll('circle')\n        .attr('class', (d: any) => {\n          if (d.data.isHighlighted) return 'highlighted';\n        });\n    }\n\n    // Tooltip\n    const tooltipOffsetX = this.tooltipOffsetX;\n    const tip = d3Tip()\n      .attr('class', 'd3-tip')\n      .offset([-10, 0])\n      .html((event, d) => d.data.name);\n    svg.call(tip);\n\n    const truncate = input =>\n      input.length > this.maxTextLabelLength\n        ? `${input.substring(0, this.maxTextLabelLength)}...`\n        : input;\n    leafNode\n      .append('text')\n      .attr('dx', 10)\n      .attr('dy', 3)\n      .attr('class', 'textLabel')\n      .text(d => truncate(d.data.name))\n      .on('mouseover', function(mouseEvent: any, d) {\n        tip.show(mouseEvent, d, this);\n        tip.style('left', mouseEvent.x + tooltipOffsetX + 'px');\n      })\n      .on('mouseout', tip.hide);\n\n    // Color squares for leaf nodes to indicate custom sample sets\n    leafNode\n      .append('g')\n      .attr('width', 200)\n      .each((d, ix, nodes) => {\n        d3.select(nodes[ix])\n          .selectAll('sampleSetColors')\n          .data(d['data'].colors)\n          .enter()\n          .append('rect')\n          .attr('x', (el, i) => 100 + 30 * i)\n          .attr('y', -10)\n          .attr('height', '20')\n          .attr('width', '20')\n          .attr('fill', (d: string) => d || 'transparent');\n      });\n\n    // Legend (only if custom observations exist)\n    if (ifCustomObservationSetExists) {\n      const legend = svg\n        .selectAll('.legend')\n        .data(this.customObservationSets)\n        .enter()\n        .append('g')\n        .classed('legend', true)\n        .attr('transform', function(d, i) {\n          return 'translate(0,' + i * 20 + ')';\n        });\n\n      legend\n        .append('rect')\n        .attr('width', 10)\n        .attr('height', 10)\n        .attr('x', width + 50)\n        .attr('fill', d => d.color);\n\n      legend\n        .append('text')\n        .attr('x', width + 70)\n        // .attr('dy', '.5em')\n        .attr('y', 8)\n        .style('fill', '#000')\n        .attr('class', 'legend-label')\n        .text(d => d.name);\n    }\n\n    function elbow(d) {\n      return 'M' + d.parent.y + ',' + d.parent.x + 'V' + d.x + 'H' + d.y;\n    }\n  }\n\n  /**\n   * Function that is triggered when the user clicks the \"Create a custom sample\" button\n   */\n  onCreateCustomSampleSet() {\n    let samples = this.selectedSamples.map(elem => ({ id: elem }));\n    const dialogRef = this.dialog.open(AddSampleSetComponent, {\n      data: { type: CustomSetType.ObservationSet }\n    });\n\n    dialogRef.afterClosed().subscribe(customSetData => {\n      if (customSetData) {\n        const customSet = {\n          name: customSetData.name,\n          type: CustomSetType.ObservationSet,\n          color: customSetData.color,\n          elements: samples,\n          multiple: true\n        };\n\n        // if the custom set has been successfully added, update the plot\n        if (this.metadataService.addCustomSet(customSet)) {\n          this.generateHCL();\n          this.selectedSamples = [];\n        }\n      }\n    });\n  }\n}\n","<mat-card class=\"analysis-card\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"analysis-card__img\"></div>\n        <mat-card-title>Hierarchical clustering: {{ outputs?.job_name }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content class=\"analysis-card__main\">\n        <p class=\"analysis-card__instruction\">\n            Click on a node in the dendrogram graph to select multiple observations. Then click the Add button to\n            save it as a new custom set.\n        </p>\n        <mat-divider [inset]=\"true\"></mat-divider>\n        <div class=\"analysis-card__content\">\n\n            <div class=\"hcl-container\">\n\n                <div class=\"chart-section\">\n                    <div class=\"chart-title\">Observation clustering</div>                    \n                    <div class=\"sample-list-container\">\n                        <button mat-raised-button color=\"accent\" (click)=\"onCreateCustomSampleSet()\"\n                            [disabled]=\"!selectedSamples.length\">\n                            <mat-icon>add</mat-icon>\n                            Save as a observation set\n                        </button>\n                        <div class=\"sample-list\" *ngIf=\"selectedSamples.length\"> Selected samples:\n                            <span class=\"sample-list__item\" *ngFor=\"let item of selectedSamples\">\n                                {{ item }}\n                            </span>\n                        </div>\n                    </div>\n                    <mev-download-button [containerId]=\"obsTreeContainerId\" [imageName]=\"obsImageName\"></mev-download-button>\n                    <div class=\"chart\" #treePlot id=\"observationPlot\" (window:resize)=\"onResize($event)\"></div>\n\n                </div>\n                <mat-divider [inset]=\"true\"></mat-divider>\n            </div>\n        </div>\n    </mat-card-content>\n</mat-card>\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  ViewChild,\n  ElementRef,\n  OnChanges\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AnalysesService } from '@app/features/analysis/services/analysis.service';\nimport { MetadataService } from '@app/core/metadata/metadata.service';\nimport * as d3 from 'd3';\nimport d3Tip from 'd3-tip';\nimport { AddSampleSetComponent } from '../../dialogs/add-sample-set/add-sample-set.component';\nimport { CustomSet, CustomSetType } from '@app/_models/metadata';\nimport { Utils } from '@app/shared/utils/utils';\n\n/**\n * K-Means Component\n *\n * Used for K-Means analysis\n */\n@Component({\n  selector: 'mev-kmeans',\n  templateUrl: './kmeans.component.html',\n  styleUrls: ['./kmeans.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class KmeansComponent implements OnChanges {\n  @Input() outputs;\n  @ViewChild('scatterPlot') svgElement: ElementRef;\n  scatterData;\n  scatterDataFormatted;\n\n  selectedSamples = [];\n  customObservationSets = [];\n  centroids = [];\n  sampleColorMap = {}; // mapping individual samples and colors (used for points in scatter plot)\n  sampleSetColors = []; // the list of sample sets and their colors (used for legend in scatter plot)\n\n  /* Chart settings */\n  containerId = '#scatterPlot';\n  imageName = 'K-means'; // file name for downloaded SVG image\n  maxPointNumber = 10 ** 4;\n  precision = 2;\n  margin = { top: 50, right: 300, bottom: 50, left: 70 }; // chart margins\n  outerHeight = 500;\n\n  pointCat = 'id'; // data field used to label individual points\n\n  /* D3 chart variables */\n  xAxis; // axes\n  yAxis;\n  clusterSelected;\n  xCat = 'x'; // field name in data for X axis (it's 'pc1' for default view)\n  yCat = 'y'; // field name in data for Y axis (it's 'pc2' for default view)\n  xScale; // scale functions to transform data values into the the range\n  yScale;\n  gX; // group elements for all the components of the X and Y-axis\n  gY;\n  zoomListener;\n  brushListener;\n  zoomTransform;\n\n  constructor(\n    public dialog: MatDialog,\n    private apiService: AnalysesService,\n    private metadataService: MetadataService\n  ) {}\n\n  ngOnChanges(): void {\n    this.customObservationSets = this.metadataService.getCustomObservationSets();\n    this.generateScatterPlot();\n  }\n\n  onResize(event) {\n    this.createChart();\n  }\n\n  /**\n   * Function to retrieve data for scatter plot\n   */\n  generateScatterPlot() {\n    const resourceId = this.outputs.kmeans_results;\n    this.apiService\n      .getResourceContent(resourceId, 1, this.maxPointNumber)\n      .subscribe(response => {\n        this.scatterData = {\n          ...response\n        };\n        this.reformatData();\n        this.createChart();\n      });\n  }\n\n  /**\n   * Function to prepare data for Scatter plot\n   */\n  reformatData() {\n    const centroidColors = {};\n    this.scatterData.centroids.forEach(el => {\n      centroidColors[el.cluster_id] = Utils.getColorScheme()[el.cluster_id];\n    });\n\n    this.centroids = this.scatterData.centroids.map(centroid => ({\n      ...centroid,\n      id: 'Centroid ' + (parseInt(centroid.cluster_id) + 1),\n      isCentroid: true,\n      color: centroidColors[centroid.cluster_id]\n    }));\n    const points = this.scatterData.points.map(point => ({\n      ...point,\n      color: centroidColors[point.cluster_id]\n    }));\n    this.scatterDataFormatted = {\n      scatterPoints: points.concat(this.centroids)\n    };\n  }\n\n  /**\n   * Function to create scatter plot\n   */\n  private createChart(): void {\n    const delta = 0.1; // used for X and Y axis ranges (we add delta to avoid bug when both max and min are zeros)\n    const zoomFactor = 50;\n    const outerWidth = this.svgElement.nativeElement.offsetWidth;\n    const outerHeight = this.outerHeight;\n    const width = outerWidth - this.margin.left - this.margin.right;\n    const height = outerHeight - this.margin.top - this.margin.bottom;\n\n    const data = this.scatterDataFormatted.scatterPoints;\n\n    d3.select(this.containerId)\n      .selectAll('svg')\n      .remove();\n\n    /* Setting up X-axis and Y-axis*/\n    this.xScale = d3\n      .scaleLinear()\n      .rangeRound([0, width])\n      .nice();\n\n    this.yScale = d3\n      .scaleLinear()\n      .rangeRound([height, 0])\n      .nice();\n\n    const xMax = d3.max(data, d => <number>d[this.xCat]);\n    const xMin = d3.min(data, d => <number>d[this.xCat]);\n    const yMax = d3.max(data, d => <number>d[this.yCat]);\n    const yMin = d3.min(data, d => <number>d[this.yCat]);\n    const xRange = xMax - xMin + delta; // add delta to avoid bug when both max and min are zeros\n    const yRange = yMax - yMin + delta;\n    this.xScale.domain([xMin - xRange * delta, xMax + xRange * delta]);\n    this.yScale.domain([yMin - yRange * delta, yMax + yRange * delta]);\n\n    this.xAxis = d3.axisBottom(this.xScale).tickSize(-height);\n    this.yAxis = d3.axisLeft(this.yScale).tickSize(-width);\n\n    // Add the Zoom and panning feature\n    this.zoomListener = d3\n      .zoom()\n      .scaleExtent([0, zoomFactor])\n      .on('zoom', event => this.zoomHandler(event));\n\n    const group = d3\n      .select(this.containerId)\n      .append('svg')\n      .attr('width', outerWidth)\n      .attr('height', outerHeight)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + this.margin.left + ',' + this.margin.top + ')'\n      )\n      .style('fill', 'none')\n      .call(this.zoomListener);\n\n    // Add the brush feature\n    this.brushListener = d3\n      .brush()\n      .filter(\n        event =>\n          !event['ctrlKey'] && !event['button'] && event['target'].__data__\n      )\n      .extent([\n        [this.margin.left, this.margin.top],\n        [this.margin.left + width, this.margin.top + height]\n      ]);\n\n    // Tooltip\n    const tip = d3Tip()\n      .attr('class', 'd3-tip')\n      .offset([-10, 0])\n      .html((event, d) => {\n        return (\n          d[this.pointCat] +\n          '<br>' +\n          this.xCat +\n          ': ' +\n          d[this.xCat].toFixed(this.precision) +\n          '<br>' +\n          this.yCat +\n          ': ' +\n          d[this.yCat].toFixed(this.precision)\n        );\n      });\n    group.call(tip);\n\n    group\n      .append('rect')\n      .attr('width', width)\n      .attr('height', height)\n      .style('fill', 'transparent');\n\n    this.gX = group\n      .append('g')\n      .classed('x axis', true)\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(this.xAxis);\n\n    this.gX\n      .append('text')\n      .classed('label', true)\n      .attr('x', width)\n      .attr('y', this.margin.bottom - 10)\n      .style('text-anchor', 'end')\n      .text(this.xCat.toUpperCase());\n\n    this.gY = group\n      .append('g')\n      .classed('y axis', true)\n      .call(this.yAxis);\n\n    this.gY\n      .append('text')\n      .classed('label', true)\n      .attr('dx', '-2em')\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .text(this.yCat.toUpperCase());\n\n    const objects = group\n      .append('svg')\n      .classed('objects', true)\n      .attr('width', width)\n      .attr('height', height);\n\n    objects\n      .selectAll('.dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .classed('dot', true)\n      .attr('r', d => (d['isCentroid'] ? 10 : 7))\n      .attr(\n        'transform',\n        d =>\n          'translate(' +\n          this.xScale(d[this.xCat]) +\n          ',' +\n          this.yScale(d[this.yCat]) +\n          ')'\n      )\n      .style('fill', d => {\n        return this.sampleColorMap[d[this.pointCat]] || d['color'];\n      })\n      .attr('stroke', d =>\n        this.sampleColorMap[d[this.pointCat]] === 'transparent' ? '#000' : ''\n      )\n      .attr('pointer-events', 'all')\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide);\n\n    d3.select(this.containerId)\n      .select('rect.overlay')\n      .attr('pointer-events', null);\n\n    // Legend\n\n    const centroidColors = this.centroids.map(el => ({\n      name: el.id,\n      color: el.color\n    }));\n    const legendColors = [\n      ...this.sampleSetColors,\n      ...centroidColors,\n      { name: 'N/A', color: 'grey' },\n      { name: 'Sample belonging to 2+ groups', color: 'transparent' }\n    ];\n    const legend = group\n      .selectAll('.legend')\n      .data(legendColors)\n      .enter()\n      .append('g')\n      .classed('legend', true)\n      .attr('transform', function(d, i) {\n        return 'translate(0,' + i * 20 + ')';\n      });\n\n    legend\n      .append('circle')\n      .attr('r', 5)\n      .attr('cx', width + 20)\n      .attr('fill', d => d.color)\n      .attr('stroke', d => (d.color !== 'transparent' ? d.color : '#000'));\n\n    legend\n      .append('text')\n      .attr('x', width + 35)\n      .attr('dy', '.35em')\n      .style('fill', '#000')\n      .attr('class', 'legend-label')\n      .text(d => d.name);\n  }\n\n  /**\n   * Function that is triggered when zooming\n   */\n  zoomHandler(event) {\n    const { transform } = event;\n    this.zoomTransform = transform;\n    d3.select(this.containerId)\n      .selectAll('.dot')\n      .attr('transform', t => {\n        const x_coord = transform.x + transform.k * this.xScale(t[this.xCat]);\n        const y_coord = transform.y + transform.k * this.yScale(t[this.yCat]);\n        return 'translate(' + x_coord + ',' + y_coord + ')';\n      });\n    this.gX.call(this.xAxis.scale(transform.rescaleX(this.xScale)));\n    this.gY.call(this.yAxis.scale(transform.rescaleY(this.yScale)));\n  }\n\n  /**\n   * Function that is triggered when the user clicks the \"Create a custom sample\" button\n   */\n  onCreateCustomSampleSet() {\n    const selectedSamples = this.scatterData.points\n      .filter(point => point.cluster_id === this.clusterSelected)\n      .map(point => ({ id: point.id }));\n    const dialogRef = this.dialog.open(AddSampleSetComponent);\n\n    dialogRef.afterClosed().subscribe(customSetData => {\n      if (customSetData) {\n        const observationSet: CustomSet = {\n          name: customSetData.name,\n          type: CustomSetType.ObservationSet,\n          color: customSetData.color,\n          elements: selectedSamples,\n          multiple: true\n        };\n\n        if (this.metadataService.addCustomSet(observationSet)) {\n          this.customObservationSets = this.metadataService.getCustomObservationSets();\n        }\n      }\n    });\n  }\n\n  onObservationCheck(e) {\n    const sampleSet = e.source.id;\n    const foundSet = this.customObservationSets.find(\n      el => el.name === sampleSet\n    );\n    this.sampleColorMap = {};\n\n    if (e.checked) {\n      this.sampleSetColors.push(foundSet);\n      const sampleSets = this.sampleSetColors;\n      sampleSets.forEach(set => {\n        const samples = set.elements.map(el => el.id);\n        samples.forEach(sample => {\n          this.sampleColorMap[sample] = !this.sampleColorMap[sample]\n            ? set.color\n            : 'transparent';\n        });\n      });\n    } else {\n      this.sampleSetColors = this.sampleSetColors.filter(\n        set => set.name !== foundSet.name\n      );\n      this.sampleSetColors.forEach(set => {\n        const samples = set.elements.map(el => el.id);\n        samples.forEach(sample => {\n          this.sampleColorMap[sample] = !this.sampleColorMap[sample]\n            ? set.color\n            : 'transparent';\n        });\n      });\n    }\n\n    // this.generateScatterPlot();\n    this.createChart();\n  }\n\n  isCustomObservationSetChecked(setName) {\n    return this.sampleSetColors.find(set => set.name === setName);\n  }\n\n  /**\n   * Function to check the dimension used for clustering (features or samples)\n   */\n  isDimensionByFeatures() {\n    const dimension = this.outputs.dimension.toLowerCase();\n    if (dimension.indexOf('feature') >= 0) return true;\n    return false;\n  }\n}\n","<mat-card class=\"analysis-card\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"analysis-card__img\"></div>\n        <mat-card-title>K-means analysis: {{ outputs?.job_name }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content class=\"analysis-card__main\">\n        <p class=\"analysis-card__instruction\">\n            Please note that we use principal components analysis (PCA) to visualize the clusters determined through the K-means algorithm. This view is illustrative and there may be instances where this visualization does not accurately represent the clusters determined in high-dimensional space.\n        </p>\n        <mat-divider [inset]=\"true\"></mat-divider>\n        <div class=\"analysis-card__content\">\n            <div *ngIf=\"scatterDataFormatted\" class=\"dropdown-container\">\n                <span class=\"dropdown-label\">Select a cluster and click the Save button: </span>\n                <mat-select class=\"dropdown\" [(ngModel)]=\"clusterSelected\">\n                    <mat-option *ngFor=\"let centroid of centroids; index as i; \" [value]=\"centroid.cluster_id\">\n                        {{ centroid.id }}\n                    </mat-option>\n                </mat-select>\n\n                    <button mat-raised-button color=\"accent\" (click)=\"onCreateCustomSampleSet()\" \n                    [disabled]=\"clusterSelected === undefined || isDimensionByFeatures()\">\n                        <mat-icon>add</mat-icon>\n                        Save as a sample set\n                    </button>\n                    <div class=\"sample-list\" *ngIf=\"selectedSamples.length\"> Selected samples:\n                        <span class=\"sample-list__item\" *ngFor=\"let item of selectedSamples\">\n                            {{ item.sample }}\n                        </span>\n                    </div>\n            </div>\n            \n            <section class=\"observation-list-section\">\n                \n                <ul *ngIf=\"customObservationSets.length\"> Conditional formatting: \n                    <li *ngFor=\"let set of customObservationSets\">\n                        <mat-checkbox (change)=\"onObservationCheck($event)\" [checked]=\"isCustomObservationSetChecked(set.name)\" [id]=\"set.name\">{{set.name}}</mat-checkbox>\n                    </li>\n                </ul>\n            </section>\n\n            <mev-download-button [containerId]=\"containerId\" [imageName]=\"imageName\"></mev-download-button>\n            <div #scatterPlot id=\"scatterPlot\" class=\"chart\" (window:resize)=\"onResize($event)\"></div>\n            \n        </div>\n    </mat-card-content>\n</mat-card>","import { Component } from '@angular/core';\nimport { DifferentialExpressionComponent } from '../differential_expression/differential_expression.component';\n\n@Component({\n  selector: 'mev-limma',\n  templateUrl: '../differential_expression/differential_expression.component.html',\n  styleUrls: ['../differential_expression/differential_expression.component.scss']\n})\nexport class LimmaComponent extends DifferentialExpressionComponent {\n    imageName = 'Limma'\n    analysisName = 'Limma/voom'\n\n    ngOnInit() {\n        super.ngOnInit();\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n    }\n    ngOnChanges() {\n        super.ngOnChanges();\n    }\n}\n","import {\n    Component,\n    OnInit,\n    ChangeDetectionStrategy,\n    ViewChild,\n    AfterViewInit,\n    Input\n} from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { BehaviorSubject, Observable, merge } from 'rxjs';\nimport { DataSource } from '@angular/cdk/table';\nimport { tap, finalize } from 'rxjs/operators';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CustomSetType } from '@app/_models/metadata';\nimport { AddSampleSetComponent } from '../dialogs/add-sample-set/add-sample-set.component';\nimport { AnalysesService } from '@app/features/analysis/services/analysis.service';\nimport { MetadataService } from '@app/core/metadata/metadata.service';\nimport { NotificationService } from '../../../core/core.module';\n\n@Component({\n  selector: 'mev-rnaseq-normalization',\n  templateUrl: './rnaseq-normalization.component.html',\n  styleUrls: ['./rnaseq-normalization.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n\n})\nexport class RnaSeqNormalizationComponent implements OnInit, AfterViewInit  {\n    @Input() outputs;\n    dataSource: ExpressionMatrixDataSource; // datasource for MatTable\n    resourceId;\n    boxPlotData;\n  \n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n    imageName = 'normalized_counts';\n    analysisName = 'RNA-seq normalization';\n\n    // Controls how large a custom FeatureSet can be.\n    // Otherwise, clicking the 'add features set' button\n    // with a full table could create exceptionally large feature sets\n    // (which aren't typically useful anyway)\n    maxFeatureSetSize = 500;\n\n    /* Table settings */\n    staticCols = ['name', '__rowmean__'];\n    dynamicColumns; // will be filled further by dataSource\n    displayColumns; // will be the concatenation of static + dynamic cols\n\n    numerical_operators = [\n        { id: 'eq', name: ' = ' },\n        { id: 'gte', name: ' >=' },\n        { id: 'gt', name: ' > ' },\n        { id: 'lte', name: ' <=' },\n        { id: 'lt', name: ' < ' }\n    ];\n    string_operators = [\n        { id: 'startswith', name: ' Starts with: '},\n        { id: 'case-ins-eq', name: ' = (case-insensitive) '},\n        { id: 'eq', name: ' = (strict) '}\n    ];\n\n    defaultPageIndex = 0;\n    defaultPageSize = 10;\n    defaultSorting = { field: '__rowmean__', direction: 'desc' };\n\n    /* Table filters */\n    allowedFilters = {\n        /*name: { defaultValue: '', hasOperator: false },*/\n        __rowname__: {\n            defaultValue: '',\n            hasOperator: true,\n            operatorDefaultValue: 'startswith'\n        },\n        __rowmean__: {\n            defaultValue: 0,\n            hasOperator: true,\n            operatorDefaultValue: 'gte'\n        }\n    };\n\n    filterForm = new FormGroup({});\n\n    constructor(\n        private analysesService: AnalysesService,\n        public dialog: MatDialog,\n        private metadataService: MetadataService,\n        private readonly notificationService: NotificationService\n    ){\n        this.dataSource = new ExpressionMatrixDataSource(this.analysesService);\n        // adding form controls depending on the tables settings (the allowedFilters property)\n        for (const key in this.allowedFilters) {\n            if (this.allowedFilters.hasOwnProperty(key)) {\n                // TSLint rule\n                const defaultValue = this.allowedFilters[key].defaultValue;\n                this.filterForm.addControl(key, new FormControl(defaultValue));\n                if (this.allowedFilters[key].hasOperator) {\n                    const operatorDefaultValue = this.allowedFilters[key]\n                        .operatorDefaultValue;\n                    this.filterForm.addControl(\n                        key + '_operator',\n                        new FormControl(operatorDefaultValue)\n                    );\n                }\n            }\n        }\n      }\n\n    ngOnInit() {\n        this.initData();\n    }\n    \n    ngOnChanges(): void {\n        this.initData();\n    }\n\n    ngAfterViewInit() {\n\n        this.sort.sortChange.subscribe(\n          () => (this.paginator.pageIndex = this.defaultPageIndex)\n        );\n        this.dataSource.connect().subscribe(expData => {\n          this.boxPlotData = expData;\n          //this.preprocessBoxPlotData();\n          //this.createChart();\n        });\n        merge(this.sort.sortChange, this.paginator.page)\n          .pipe(\n            tap(() => {\n               this.loadPage();\n            //   this.preprocessBoxPlotData();\n            //   this.createChart();\n            })\n          )\n          .subscribe();\n      }\n\n    initData(): void {\n        this.resourceId = this.outputs.normalized_counts;\n        const sorting = {\n            sortField: this.defaultSorting.field,\n            sortDirection: this.defaultSorting.direction\n        };\n        const paramFilter = this.createFilters();\n\n        this.dataSource.loadData(\n            this.resourceId,\n            paramFilter,\n            sorting,\n            //{},\n            this.defaultPageIndex,\n            this.defaultPageSize\n        );\n        this.dataSource.sampleNames$.subscribe( data => {\n                this.dynamicColumns = data\n                this.displayColumns = [...this.staticCols, ...data];\n                console.log(this.displayColumns);\n            }\n        );\n    }\n\n    /**\n     * Function to construct the parameter filters that are passed to the backend\n     */\n    createFilters(){\n        const formValues = this.filterForm.value; // i.e. {name: \"asdfgh\", pvalue: 3, pvalue_operator: \"lte\", log2FoldChange: 2, log2FoldChange_operator: \"lte\"}\n        const paramFilter = {}; // has values {'log2FoldChange': '[absgt]:2'};\n        for (const key in this.allowedFilters) {\n            if (\n                formValues.hasOwnProperty(key) &&\n                formValues[key] !== '' &&\n                formValues[key] !== null\n            ) {\n                if (formValues.hasOwnProperty(key + '_operator')) {\n                    paramFilter[key] =\n                    '[' + formValues[key + '_operator'] + ']:' + formValues[key];\n                } else {\n                    paramFilter[key] = '[eq]:' + formValues[key];\n                }\n            }\n        }\n        return paramFilter;\n    }\n\n    loadPage() {\n        const paramFilter = this.createFilters();\n\n        const sorting = {\n          sortField: this.sort.active,\n          sortDirection: this.sort.direction\n        };\n\n        this.dataSource.loadData(\n            this.resourceId,\n            paramFilter,\n            sorting,\n            //{},\n            this.paginator.pageIndex,\n            this.paginator.pageSize\n        );\n    }\n\n    /**\n     * Function is triggered when submitting the form with table filters\n     */\n    onSubmit() {\n        console.log('submit!');\n        this.paginator.pageIndex = this.defaultPageIndex;\n        this.loadPage();\n    }\n\n   /**\n   * Function that is triggered when the user clicks the \"Create a custom sample\" button\n   */\n  onCreateCustomFeatureSet() {\n\n    // We don't want to create exceptionally large feature sets. Check\n    // that they don't exceed some preset size\n    const setSize = this.dataSource.expCount;\n    if (setSize > this.maxFeatureSetSize){\n      const errorMessage = `The current size of \n        your set (${setSize}) is larger than the \n        maximum allowable size (${this.maxFeatureSetSize}).\n        Please filter the table further to reduce the size.`\n      this.notificationService.error(errorMessage);\n      return;\n    }\n    \n    const dialogRef = this.dialog.open(AddSampleSetComponent, {\n      data: { type: CustomSetType.FeatureSet }\n    });\n\n    dialogRef.afterClosed().subscribe(customSetData => {\n      if (customSetData) {\n        // We want ALL of the features passing the filter, not just those shown on the immediate\n        // page in the table.\n        const filterValues = this.createFilters();\n        this.analysesService\n          .getResourceContent(\n            this.resourceId,\n            null,\n            null,\n            filterValues,\n            {}\n          )\n          .subscribe(features => {\n            const elements = features.map(feature => {\n               return {id: feature.rowname};\n            });\n            const customSet = {\n              name: customSetData.name,\n              type: CustomSetType.FeatureSet,\n              elements: elements,\n              multiple: true\n            };\n            this.metadataService.addCustomSet(customSet);\n          });\n      }\n    });\n  }\n\n}\n\nexport interface GeneExpression {\n    //each row of the table has a gene symbol/name and some expression values\n    // We need to associate each sample ID with its expression value for that gene\n    // (hence the Map)\n    geneName: string;\n    meanExp: number;\n    expressions: Map<string, number>; \n}\n\nexport class ExpressionMatrixDataSource implements DataSource<GeneExpression> {\n    public expSubject = new BehaviorSubject<GeneExpression[]>([]);\n    public expCount = 0;\n    private sampleNamesSubject = new BehaviorSubject<string[]>([]);\n    public sampleNames$ = this.sampleNamesSubject.asObservable();\n    private loadingSubject = new BehaviorSubject<boolean>(false);\n    public loading$ = this.loadingSubject.asObservable();\n    private precision = 2;\n    constructor(private analysesService: AnalysesService) {}\n  \n    loadData(\n        resourceId: string,\n        filterValues: object,\n        sorting: object,\n        pageIndex: number,\n        pageSize: number\n    ) \n    {\n      this.loadingSubject.next(true);\n  \n      this.analysesService\n        .getResourceContent(\n          resourceId,\n          pageIndex + 1,\n          pageSize,\n          filterValues,\n          sorting\n        )\n        .pipe(finalize(() => this.loadingSubject.next(false)))\n        .subscribe(\n            data => {\n                this.expCount = data.count;\n                const expFormatted = data.results.map(\n                    dataRow => {\n                        const truncated_expressions = {};\n                        Object.keys(dataRow.values).forEach( k=>\n                            truncated_expressions[k] = dataRow.values[k].toFixed(this.precision)\n                        );\n                        return {\n                            geneName: dataRow.rowname,\n                            meanExp: dataRow['__rowmean__'],\n                            expressions: truncated_expressions\n                        };\n                    }\n                );\n                // extract the sample names to populate the columns\n                if (this.expCount > 0){\n                    this.sampleNamesSubject.next(Object.keys(expFormatted[0].expressions));\n                }\n                return this.expSubject.next(expFormatted);\n            }\n        );\n    }\n  \n    connect(): Observable<GeneExpression[]> {\n      return this.expSubject.asObservable();\n    }\n  \n    disconnect(): void {\n      this.expSubject.complete();\n      this.loadingSubject.complete();\n    }\n  }","<mat-card class=\"analysis-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"analysis-card__img\"></div>\n      <mat-card-title>{{analysisName}}: {{ outputs?.job_name }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content class=\"analysis-card__main\">\n      <p class=\"analysis-card__instruction\">\n        Use the table filters and sorting functionality to explore.\n      </p>\n      <p class=\"analysis-card__instruction\">\n        You can also define custom sets of genes for exploration with other tools. Custom set size is \n        limited to {{maxFeatureSetSize}} items.\n      </p>\n      <mat-divider [inset]=\"true\"></mat-divider>\n      <div class=\"analysis-card__content\">\n        <section class=\"filter-section\">\n          <form [formGroup]=\"filterForm\" (ngSubmit)=\"onSubmit()\">\n  \n            <div class=\"filter\">\n                <span class=\"label\">\n                    Row/gene filter:\n                </span>\n                <mat-form-field class=\"form-control form-control__med\" color=\"accent\">\n                    <mat-select formControlName=\"__rowname___operator\">\n                      <mat-option *ngFor=\"let operator of string_operators\" [value]=\"operator.id\">\n                        {{ operator.name }}\n                      </mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                <mat-form-field class=\"form-control\">\n                    <input matInput formControlName=\"__rowname__\" type=\"text\" placeholder=\"Name prefix...\">\n                </mat-form-field>\n            </div>\n\n            <div class=\"filter\">\n              <span class=\"label\">\n                Mean expression:\n              </span>\n              <mat-form-field class=\"form-control form-control__small\" color=\"accent\">\n                <mat-select formControlName=\"__rowmean___operator\">\n                  <mat-option *ngFor=\"let operator of numerical_operators\" [value]=\"operator.id\">\n                    {{ operator.name }}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field class=\"form-control\">\n                <input matInput formControlName=\"__rowmean__\" type=number step=any min=0>\n              </mat-form-field>\n            </div>\n\n            <button type=\"submit\" [disabled]=\"!filterForm.valid\" mat-raised-button color=\"accent\">Apply filters</button>\n          </form>\n  \n        </section>\n  \n        <mev-spinner-overlay *ngIf=\"dataSource.loading$ | async\"></mev-spinner-overlay>\n  \n        <div id=\"expTable\" class=\"mat-elevation-z8\">\n          <table mat-table class=\"exp-table\" [dataSource]=\"dataSource\" matSort [matSortActive]=\"defaultSorting.field\"\n            [matSortDirection]=\"defaultSorting.direction\" matSortDisableClear>\n  \n            <ng-container matColumnDef=\"name\" sticky>\n                <th mat-header-cell *matHeaderCellDef>Name/symbol</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.geneName}}</td>\n              </ng-container>\n\n              <ng-container matColumnDef=\"__rowmean__\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Mean expression</th>\n                <td mat-cell *matCellDef=\"let row\">{{row.meanExp}}</td>\n              </ng-container>\n\n            <ng-container *ngFor=\"let column of dynamicColumns\" [matColumnDef]=\"column\">\n                <th mat-header-cell *matHeaderCellDef>{{ column }}</th>\n                <td mat-cell *matCellDef=\"let row\" class=\"description-cell\">{{row.expressions[column]}}</td>\n            </ng-container>\n  \n            <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns\"></tr>\n  \n          </table>\n  \n  \n          <mat-paginator class=\"foo\" [length]=\"dataSource.expCount\" [pageSize]=\"10\" [pageSizeOptions]=\"[10, 25, 50]\">\n          </mat-paginator>\n        </div>\n  \n        <div class=\"button-panel\">\n          <button mat-raised-button color=\"accent\" [disabled]=\"dataSource.expCount > maxFeatureSetSize\" (click)=\"onCreateCustomFeatureSet()\">\n            <mat-icon>add</mat-icon>\n            Save as a feature set\n          </button>\n          <!-- <mev-download-button [containerId]=\"containerId\" [imageName]=\"imageName\"></mev-download-button>   -->\n        </div>      \n        <!-- <div #boxPlot id=\"boxPlot\" class=\"chart\" (window:resize)=\"onResize($event)\"></div> -->\n  \n      </div>\n  \n    </mat-card-content>\n  \n  </mat-card>","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ElementRef,\n  ViewChild,\n  Input\n} from '@angular/core';\nimport * as d3 from 'd3';\n\n/**\n * Rug Plot Component\n *\n * Used in the GSEA table\n */\n@Component({\n  selector: 'mev-rug-plot',\n  templateUrl: './rug-plot.component.html',\n  styleUrls: ['./rug-plot.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RugPlotComponent implements OnInit {\n  @ViewChild('chart') chart: ElementRef;\n\n  _plotData = [];\n\n  get plotData() {\n    return this._plotData;\n  }\n  @Input('plotData')\n  set plotData(value) {\n    this._plotData = value;\n    if (Object.keys(value).length === 0 && value.constructor === Object) {\n      return;\n    }\n    //this.startGraphic();\n  }\n  ngAfterViewInit() {\n    this.startGraphic();\n  }\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  startGraphic() {\n    const plotData = this.plotData;\n    //const width = 300\n    const margin = { top: 10, right: 20, bottom: 10, left: 20 }; // chart margins\n    const outerWidth = this.chart.nativeElement.offsetWidth;\n    const outerHeight = 100;\n    const width = outerWidth - margin.left - margin.right;\n    const height = outerHeight - margin.top - margin.bottom;\n\n    const xMax = d3.max(plotData);\n    const xMin = d3.min(plotData);\n    const x = d3\n      .scaleLinear()\n      .rangeRound([0, width])\n      .nice()\n      .domain([xMin, xMax]);\n\n    const chart = d3\n      .select(this.chart.nativeElement)\n      .append('svg')\n      .attr('width', outerWidth)\n      .attr('height', outerHeight)\n      // .attr('x', 0)\n      // .attr('y', 0)\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n    //.append('g')\n\n    const bar = chart\n      .selectAll('g')\n      .data(plotData)\n      .enter()\n      .append('g');\n\n    bar\n      .append('rect')\n      .attr('x', d => x(d))\n      .attr('width', 1)\n      .attr('y', 10)\n      .attr('height', 30);\n\n    const xAxis = d3.axisBottom(x).ticks(3); //.tickSize(50);\n\n    chart\n      .append('g')\n      .classed('x axis', true)\n      .attr('transform', 'translate(0, 40)')\n      //.style('fill', 'transparent')\n      .call(xAxis);\n  }\n}\n","<div class=\"rug-plot\" #chart></div>","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnChanges,\n  ElementRef,\n  ViewChild\n} from '@angular/core';\nimport * as d3 from 'd3';\nimport d3Tip from 'd3-tip';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddSampleSetComponent } from '../dialogs/add-sample-set/add-sample-set.component';\nimport { AnalysesService } from '@app/features/analysis/services/analysis.service';\nimport { MetadataService } from '@app/core/metadata/metadata.service';\nimport { CustomSetType, CustomSet } from '@app/_models/metadata';\n\n/**\n * Scatter Plot Component\n *\n * Used for Principal Component Analyses (PCA)\n */\n@Component({\n  selector: 'mev-scatter-plot',\n  templateUrl: './scatter-plot.component.html',\n  styleUrls: ['./scatter-plot.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ScatterPlotComponent implements OnChanges {\n  @Input() outputs;\n  @ViewChild('scatterPlot') svgElement: ElementRef;\n  pcaData;\n  pcaDataFormatted;\n\n  selectedSamples = [];\n  customObservationSets = [];\n  sampleColorMap = {}; // mapping individual samples and colors (used for points in scatter plot)\n  sampleSetColors = []; // the list of sample sets and their colors (used for legend in scatter plot)\n\n  /* Chart settings */\n  containerId = '#scatterPlot';\n  imageName = 'PCA'; // file name for downloaded SVG image\n  maxPointNumber = 10 ** 4;\n  precision = 2;\n  chartViewMode = 'zoomMode'; // default chart view mode\n  margin = { top: 50, right: 300, bottom: 50, left: 70 }; // chart margins\n  outerHeight = 500;\n\n  pointCat = 'sample'; // data field used to label individual points\n\n  /* D3 chart variables */\n  xAxis; // axes\n  yAxis;\n  xCat; // field name in data for X axis (it's 'pc1' for default view)\n  yCat; // field name in data for Y axis (it's 'pc2' for default view)\n  xCatIndex: number; // order of prinicipal component for X axis (0 for default view)\n  yCatIndex: number; // order of prinicipal component for Y axis (1 for default view)\n  xVariance; // explained variance for X and Y axes\n  yVariance;\n  xScale; // scale functions to transform data values into the the range\n  yScale;\n  gX; // group elements for all the components of the X and Y-axis\n  gY;\n  zoomListener;\n  brushListener;\n  zoomTransform;\n\n  constructor(\n    public dialog: MatDialog,\n    private apiService: AnalysesService,\n    private metadataService: MetadataService\n  ) {}\n\n  ngOnChanges(): void {\n    this.customObservationSets = this.metadataService.getCustomObservationSets();\n    this.generatePCAPlot();\n  }\n\n  onResize(event) {\n    this.createChart();\n  }\n\n  /**\n   * Function to retrieve data for PCA plot\n   */\n  generatePCAPlot() {\n    this.chartViewMode = 'zoomMode'; // default mode\n    const resourceId = this.outputs.pca_coordinates;\n    const pca_explained_variances = [];\n    let i = 1;\n    while (this.outputs.hasOwnProperty('pc' + i + '_explained_variance')) {\n      const item = {\n        name: 'pc' + i,\n        var: this.outputs['pc' + i + '_explained_variance']\n      };\n      pca_explained_variances.push(item);\n      i++;\n    }\n\n    this.apiService\n      .getResourceContent(resourceId, 1, this.maxPointNumber)\n      .subscribe(response => {\n        this.pcaData = {\n          ...response,\n          pca_explained_variances: pca_explained_variances\n        };\n        this.reformatData();\n        this.createChart();\n      });\n  }\n\n  /**\n   * Function to prepare data for PCA plot\n   */\n  reformatData() {\n    const results = this.pcaData.results;\n\n    const newPoints = [];\n    if (results.length > 0 && results[0].values) {\n      const sampleNames = Object.keys(results[0].values);\n      sampleNames.forEach(sampleName => {\n        const newPoint = { sample: sampleName };\n        results.forEach(el => {\n          const pc = el.rowname;\n          const val = el.values[sampleName];\n          newPoint[pc] = val;\n        });\n        newPoints.push(newPoint);\n      });\n    }\n\n    this.pcaDataFormatted = {\n      pcaPoints: newPoints,\n      axisInfo: this.pcaData.pca_explained_variances\n    };\n    // initialise variables for X and Y axes if undefined\n    // by default use the 1st principal component for X axis and the 2nd for Y axis\n    if (!this.xCat && !this.yCat) {\n      this.updateXCatAndVarianceByIndex(0);\n      this.updateYCatAndVarianceByIndex(1);\n    }\n  }\n\n  /**\n   * Function is triggered when switching between Zooming and Selection view modes\n   */\n  onChartViewChange(chartViewMode) {\n    this.chartViewMode = chartViewMode;\n    const svg = d3.select(this.containerId).select('svg');\n\n    if (chartViewMode === 'selectionMode') {\n      // activate brushing\n      svg.call(this.brushListener);\n\n      // deactivate zooming\n      svg.select('g').call(d3.zoom().on('zoom', null));\n    }\n    if (chartViewMode === 'zoomMode') {\n      svg.select('g').call(this.zoomListener);\n\n      // reset the brush area to an empty area and deactivate brushing feature\n      const brush = d3\n        .brush()\n        .filter(\n          event =>\n            !event['ctrlKey'] && !event['button'] && event['target'].__data__\n        )\n        .on('start', null);\n\n      svg.call(\n        brush.extent([\n          [0, 0],\n          [0, 0]\n        ])\n      );\n      svg.call(brush.move, null);\n    }\n  }\n\n  /**\n   * Function to create scatter plot\n   */\n  private createChart(): void {\n    const delta = 0.1; // used for X and Y axis ranges (we add delta to avoid bug when both max and min are zeros)\n    const zoomFactor = 50;\n    const outerWidth = this.svgElement.nativeElement.offsetWidth;\n    const outerHeight = this.outerHeight;\n    const width = outerWidth - this.margin.left - this.margin.right;\n    const height = outerHeight - this.margin.top - this.margin.bottom;\n\n    const data = this.pcaDataFormatted.pcaPoints;\n\n    d3.select(this.containerId)\n      .selectAll('svg')\n      .remove();\n\n    /* Setting up X-axis and Y-axis*/\n    this.xScale = d3\n      .scaleLinear()\n      .rangeRound([0, width])\n      .nice();\n\n    this.yScale = d3\n      .scaleLinear()\n      .rangeRound([height, 0])\n      .nice();\n\n    const xMax = d3.max(data, d => <number>d[this.xCat]);\n    const xMin = d3.min(data, d => <number>d[this.xCat]);\n    const yMax = d3.max(data, d => <number>d[this.yCat]);\n    const yMin = d3.min(data, d => <number>d[this.yCat]);\n    const xRange = xMax - xMin + delta; // add delta to avoid bug when both max and min are zeros\n    const yRange = yMax - yMin + delta;\n    this.xScale.domain([xMin - xRange * delta, xMax + xRange * delta]);\n    this.yScale.domain([yMin - yRange * delta, yMax + yRange * delta]);\n\n    this.xAxis = d3.axisBottom(this.xScale).tickSize(-height);\n    this.yAxis = d3.axisLeft(this.yScale).tickSize(-width);\n\n    // Add the Zoom and panning feature\n    this.zoomListener = d3\n      .zoom()\n      .scaleExtent([0, zoomFactor])\n      .on('zoom', event => this.zoomHandler(event));\n\n    const group = d3\n      .select(this.containerId)\n      .append('svg')\n      .attr('width', outerWidth)\n      .attr('height', outerHeight)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + this.margin.left + ',' + this.margin.top + ')'\n      )\n      .style('fill', 'none')\n      .call(this.zoomListener);\n\n    // Add the brush feature\n    this.brushListener = d3\n      .brush()\n      .filter(\n        event =>\n          !event['ctrlKey'] && !event['button'] && event['target'].__data__\n      )\n      .extent([\n        [this.margin.left, this.margin.top],\n        [this.margin.left + width, this.margin.top + height]\n      ])\n      .on('start end', event => this.brushHandler(event));\n\n    // Tooltip\n    const tip = d3Tip()\n      .attr('class', 'd3-tip')\n      .offset([-10, 0])\n      .html((event, d) => {\n        return (\n          d[this.pointCat] +\n          '<br>' +\n          this.xCat +\n          ': ' +\n          d[this.xCat].toFixed(this.precision) +\n          '<br>' +\n          this.yCat +\n          ': ' +\n          d[this.yCat].toFixed(this.precision)\n        );\n      });\n    group.call(tip);\n\n    group\n      .append('rect')\n      .attr('width', width)\n      .attr('height', height)\n      .style('fill', 'transparent');\n\n    this.gX = group\n      .append('g')\n      .classed('x axis', true)\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(this.xAxis);\n\n    this.gX\n      .append('text')\n      .classed('label', true)\n      .attr('x', width)\n      .attr('y', this.margin.bottom - 10)\n      .style('text-anchor', 'end')\n      .text(\n        this.xCat.toUpperCase() +\n          ' (Explained variance: ' +\n          (100*this.xVariance).toFixed(this.precision) +\n          '%)'\n      );\n\n    this.gY = group\n      .append('g')\n      .classed('y axis', true)\n      .call(this.yAxis);\n\n    this.gY\n      .append('text')\n      .classed('label', true)\n      .attr('transform', 'rotate(-90)')\n      .attr('y', -this.margin.left)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .text(\n        this.yCat.toUpperCase() +\n          ' (Explained variance: ' +\n          (100*this.yVariance).toFixed(this.precision) +\n          '%)'\n      );\n\n    const objects = group\n      .append('svg')\n      .classed('objects', true)\n      .attr('width', width)\n      .attr('height', height);\n\n    objects\n      .selectAll('.dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .classed('dot', true)\n      .attr('r', 7)\n      .attr(\n        'transform',\n        d =>\n          'translate(' +\n          this.xScale(d[this.xCat]) +\n          ',' +\n          this.yScale(d[this.yCat]) +\n          ')'\n      )\n      .style('fill', d => {\n        return this.sampleColorMap[d[this.pointCat]] || 'grey';\n      })\n      .attr('stroke', d =>\n        this.sampleColorMap[d[this.pointCat]] === 'transparent' ? '#000' : ''\n      )\n      .attr('pointer-events', 'all')\n      .on('mouseover', tip.show)\n      .on('mouseout', tip.hide);\n\n    // d3.select(this.containerId)\n    //   .select('group')\n    //   .call(this.brushListener);\n    d3.select(this.containerId)\n      .select('rect.overlay')\n      .attr('pointer-events', null);\n\n    // Legend\n    const legendColors = [\n      ...this.sampleSetColors,\n      { name: 'N/A', color: 'grey' },\n      { name: 'Sample belonging to 2+ groups', color: 'transparent' }\n    ];\n    const legend = group\n      .selectAll('.legend')\n      .data(legendColors)\n      .enter()\n      .append('g')\n      .classed('legend', true)\n      .attr('transform', function(d, i) {\n        return 'translate(0,' + i * 20 + ')';\n      });\n\n    legend\n      .append('circle')\n      .attr('r', 5)\n      .attr('cx', width + 20)\n      .attr('fill', d => d.color)\n      .attr('stroke', d => (d.color !== 'transparent' ? d.color : '#000'));\n\n    legend\n      .append('text')\n      .attr('x', width + 35)\n      .attr('dy', '.35em')\n      .style('fill', '#000')\n      .attr('class', 'legend-label')\n      .text(d => d.name);\n  }\n\n  /**\n   * Function that is triggered when zooming\n   */\n  zoomHandler(event) {\n    const { transform } = event;\n    this.zoomTransform = transform;\n    d3.select(this.containerId)\n      .selectAll('.dot')\n      .attr('transform', t => {\n        const x_coord = transform.x + transform.k * this.xScale(t[this.xCat]);\n        const y_coord = transform.y + transform.k * this.yScale(t[this.yCat]);\n        return 'translate(' + x_coord + ',' + y_coord + ')';\n      });\n    this.gX.call(this.xAxis.scale(transform.rescaleX(this.xScale)));\n    this.gY.call(this.yAxis.scale(transform.rescaleY(this.yScale)));\n  }\n\n  /**\n   * Function that is triggered when brushing is performed\n   */\n  brushHandler(event) {\n    const extent = event.selection; // get the selection coordinate\n    this.selectedSamples = [];\n    d3.select(this.containerId)\n      .selectAll('.dot')\n      .classed('selected', d => {\n        let x_coord = this.xScale(d[this.xCat]);\n        let y_coord = this.yScale(d[this.yCat]);\n        if (this.zoomTransform) {\n          // recalculate coordinates if zooming has been performed\n          x_coord = this.zoomTransform.x + this.zoomTransform.k * x_coord;\n          y_coord = this.zoomTransform.y + this.zoomTransform.k * y_coord;\n        }\n\n        if (this.isBrushed(extent, x_coord, y_coord)) {\n          this.selectedSamples.push({\n            ...(d as object)//,\n            //x_coord: d[this.xCat],\n            //y_coord: d[this.yCat]\n          });\n          return true;\n        }\n        return false;\n      });\n  }\n\n  /**\n   * Function that returns TRUE or FALSE according if a point is in the selected area\n   */\n  isBrushed(brush_coords, cx, cy) {\n    if (brush_coords) {\n      const x0 = brush_coords[0][0] - this.margin.left,\n        x1 = brush_coords[1][0] - this.margin.left,\n        y0 = brush_coords[0][1] - this.margin.top,\n        y1 = brush_coords[1][1] - this.margin.top;\n      return x0 <= cx && cx <= x1 && y0 <= cy && cy <= y1;\n    }\n    return false;\n  }\n\n  /**\n   * Function that is triggered when principal component for X axis is changed\n   */\n  onXAxisChange(index) {\n    this.updateXCatAndVarianceByIndex(index);\n    this.createChart();\n  }\n\n  /**\n   * Function that is triggered when principal component for Y axis is changed\n   */\n  onYAxisChange(index) {\n    this.updateYCatAndVarianceByIndex(index);\n    this.createChart();\n  }\n\n  /**\n   * Function to update xCat and xVariance for X axis\n   */\n  updateXCatAndVarianceByIndex(index) {\n    this.xCatIndex = index;\n    this.xCat = this.pcaDataFormatted.axisInfo[index].name;\n    this.xVariance = this.pcaDataFormatted.axisInfo[index].var.toFixed(\n      this.precision\n    );\n  }\n\n  /**\n   * Function to update yCat and yVariance for Y axis\n   */\n  updateYCatAndVarianceByIndex(index) {\n    this.yCatIndex = index;\n    this.yCat = this.pcaDataFormatted.axisInfo[index].name;\n    this.yVariance = this.pcaDataFormatted.axisInfo[index].var.toFixed(\n      this.precision\n    );\n  }\n\n  /**\n   * Function that is triggered when the user clicks the \"Create a custom sample\" button\n   */\n  onCreateCustomSampleSet() {\n    const samples = this.selectedSamples.map(elem => {\n      const sample = { id: elem.sample };\n      return sample;\n    });\n\n    const dialogRef = this.dialog.open(AddSampleSetComponent);\n\n    dialogRef.afterClosed().subscribe(customSetData => {\n      if (customSetData) {\n        const observationSet: CustomSet = {\n          name: customSetData.name,\n          type: CustomSetType.ObservationSet,\n          color: customSetData.color,\n          elements: samples,\n          multiple: true\n        };\n\n        if (this.metadataService.addCustomSet(observationSet)) {\n          this.customObservationSets = this.metadataService.getCustomObservationSets();\n        }\n      }\n    });\n  }\n\n  onObservationCheck(e) {\n    const sampleSet = e.source.id;\n    const foundSet = this.customObservationSets.find(\n      el => el.name === sampleSet\n    );\n    this.sampleColorMap = {};\n\n    if (e.checked) {\n      this.sampleSetColors.push(foundSet);\n      const sampleSets = this.sampleSetColors;\n      sampleSets.forEach(set => {\n        const samples = set.elements.map(el => el.id);\n        samples.forEach(sample => {\n          this.sampleColorMap[sample] = !this.sampleColorMap[sample]\n            ? set.color\n            : 'transparent';\n        });\n      });\n    } else {\n      this.sampleSetColors = this.sampleSetColors.filter(\n        set => set.name !== foundSet.name\n      );\n      this.sampleSetColors.forEach(set => {\n        const samples = set.elements.map(el => el.id);\n        samples.forEach(sample => {\n          this.sampleColorMap[sample] = !this.sampleColorMap[sample]\n            ? set.color\n            : 'transparent';\n        });\n      });\n    }\n\n    this.generatePCAPlot();\n  }\n\n  isCustomObservationSetChecked(setName) {\n    return this.sampleSetColors.find(set => set.name === setName);\n  }\n}\n","<mat-card class=\"analysis-card\">\n    <mat-card-header>\n        <div mat-card-avatar class=\"analysis-card__img\"></div>\n        <mat-card-title>Principal component analysis: {{ outputs?.job_name }}</mat-card-title>\n    </mat-card-header>\n    <mat-card-content class=\"analysis-card__main\">\n        <p class=\"analysis-card__instruction\">\n            Enable the <i>select points</i> mode to allow the grouping of points and creation of custom sets. \n        </p>\n        <p class=\"analysis-card__instruction\">\n            Those sets can be used in other analyses (e.g. differential expression) to examine differences between the groups.\n        </p>\n        <mat-divider [inset]=\"true\"></mat-divider>\n        <div class=\"analysis-card__content\">\n            <mat-button-toggle-group #chartMode=\"matButtonToggleGroup\" [(ngModel)]=\"chartViewMode\">\n                <mat-button-toggle value=\"zoomMode\" (change)=\"onChartViewChange($event.value)\"\n                    aria-label=\"Text align center\">\n                    <mat-icon aria-label=\"Zooming/panning\">zoom_in</mat-icon> Zooming/panning\n                </mat-button-toggle>\n                <mat-button-toggle value=\"selectionMode\" (change)=\"onChartViewChange($event.value)\"\n                    aria-label=\"Text align left\">\n                    <mat-icon aria-label=\"Select points\">near_me</mat-icon> Select points\n                </mat-button-toggle>\n            </mat-button-toggle-group>\n\n            <div *ngIf=\"pcaDataFormatted\" class=\"axis-dropdown-container\">\n                <span class=\"axis-dropdown-label\">X axis: </span>\n                <mat-select class=\"axis-dropdown\" (selectionChange)=\"onXAxisChange($event.value)\"\n                    [(ngModel)]=\"xCatIndex\">\n                    <mat-option *ngFor=\"let item of pcaDataFormatted.axisInfo; index as i; \" [value]=\"i\">\n                        {{ item.name }}\n                    </mat-option>\n                </mat-select>\n\n                <span class=\"axis-dropdown-label\">Y axis: </span>\n                <mat-select class=\"axis-dropdown\" (selectionChange)=\"onYAxisChange($event.value)\"\n                    [(ngModel)]=\"yCatIndex\">\n                    <mat-option *ngFor=\"let item of pcaDataFormatted.axisInfo; index as i; \" [value]=\"i\">\n                        {{ item.name }}\n                    </mat-option>\n                </mat-select>\n            </div>\n            \n            <section class=\"observation-list-section\">\n                \n                <ul *ngIf=\"customObservationSets.length\"> Conditional formatting: \n                    <li *ngFor=\"let set of customObservationSets\">\n                        <mat-checkbox (change)=\"onObservationCheck($event)\" [checked]=\"isCustomObservationSetChecked(set.name)\" [id]=\"set.name\">{{set.name}}</mat-checkbox>\n                    </li>\n                </ul>\n            </section>          \n                \n                <div class=\"sample-list-container\">\n                    <button mat-raised-button color=\"accent\" (click)=\"onCreateCustomSampleSet()\" \n                    [disabled]=\"!selectedSamples.length\">\n                        <mat-icon>add</mat-icon>\n                        Save as a sample set\n                    </button>\n                    <div class=\"sample-list\" *ngIf=\"selectedSamples.length\"> Selected samples:\n                        <mat-chip-list>\n                            <mat-chip *ngFor=\"let item of selectedSamples\" color=\"primary\">\n                                {{ item.sample }}\n                            </mat-chip>\n                        </mat-chip-list>\n                    </div>\n                </div>          \n\n            <mev-download-button [containerId]=\"containerId\" [imageName]=\"imageName\"></mev-download-button>\n            <div #scatterPlot id=\"scatterPlot\" class=\"chart\" (window:resize)=\"onResize($event)\"></div>\n            \n        </div>\n    </mat-card-content>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScatterPlotComponent } from './components/scatter-plot/scatter-plot.component';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { AddSampleSetComponent } from './components/dialogs/add-sample-set/add-sample-set.component';\nimport { Deseq2Component } from './components/deseq2/deseq2.component';\nimport { LimmaComponent } from './components/limma/limma.component';\nimport { HclComponent } from './components/hcl/hcl.component';\nimport { DownloadButtonComponent } from './components/download-button/download-button.component';\nimport { GseaComponent } from './components/gsea/gsea/gsea.component';\nimport { RugPlotComponent } from './components/rug-plot/rug-plot/rug-plot.component';\nimport { KmeansComponent } from './components/kmeans/kmeans/kmeans.component';\nimport { BoxPlottingComponent } from './components/box-plotting/box-plotting.component';\nimport { DifferentialExpressionComponent } from './components/differential_expression/differential_expression.component';\nimport { EdgerComponent } from './components/edger/edger.component';\nimport { RnaSeqNormalizationComponent } from './components/rnaseq-normalization/rnaseq-normalization.component';\n\n@NgModule({\n  declarations: [\n    ScatterPlotComponent,\n    AddSampleSetComponent,\n    Deseq2Component,\n    LimmaComponent,\n    HclComponent,\n    DownloadButtonComponent,\n    GseaComponent,\n    RugPlotComponent,\n    KmeansComponent,\n    BoxPlottingComponent,\n    DifferentialExpressionComponent,\n    EdgerComponent,\n    RnaSeqNormalizationComponent\n  ],\n  imports: [CommonModule, SharedModule],\n  exports: [\n    ScatterPlotComponent,\n    Deseq2Component,\n    LimmaComponent,\n    HclComponent,\n    GseaComponent,\n    RugPlotComponent,\n    KmeansComponent,\n    BoxPlottingComponent,\n    EdgerComponent,\n    RnaSeqNormalizationComponent\n  ]\n})\nexport class D3Module {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AnalysesComponent } from './components/analysis-list/analyses.component';\nimport { ExecutedOperationComponent } from './components/executed-operation/executed-operation.component';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AnalysisRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AnalysisRoutingModule } from './analysis-routing.module';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { OperationComponent } from './components/operation/operation.component';\nimport { ExecutedOperationComponent } from './components/executed-operation/executed-operation.component';\nimport { AnalysesComponent } from './components/analysis-list/analyses.component';\nimport { AnalysisResultComponent } from './components/analysis-result/analysis-result.component';\nimport { D3Module } from '@app/d3/d3.module';\nimport { NgxCsvParserModule } from 'ngx-csv-parser';\nimport { AnalysisFlowComponent } from './components/analysis-flow/analysis-flow.component';\nimport { AnalysisPlottingResultComponent } from './components/analysis-plotting-result/analysis-plotting-result.component';\n\n@NgModule({\n  declarations: [\n    AnalysesComponent,\n    OperationComponent,\n    ExecutedOperationComponent,\n    AnalysisResultComponent,\n    AnalysisFlowComponent,\n    AnalysisPlottingResultComponent\n  ],\n  exports: [\n    OperationComponent,\n    AnalysesComponent,\n    ExecutedOperationComponent,\n    AnalysisFlowComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    AngularMultiSelectModule,\n    D3Module,\n    NgxCsvParserModule,\n    AnalysisRoutingModule\n  ]\n})\nexport class AnalysisModule {}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport * as d3 from 'd3';\nimport * as d3dag from 'd3-dag';\nimport d3Tip from 'd3-tip';\nimport { AnalysesService } from '../../services/analysis.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PreviewDialogComponent } from '@app/features/workspace-detail/components/dialogs/preview-dialog/preview-dialog.component';\nimport { WorkspaceDetailService } from '@app/features/workspace-detail/services/workspace-detail.service';\n\n/**\n * Analysis Flow Component.\n * Used to display the visual representation of all performed analyses as DAG graph\n */\n@Component({\n  selector: 'mev-analysis-flow',\n  templateUrl: './analysis-flow.component.html',\n  styleUrls: ['./analysis-flow.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class AnalysisFlowComponent implements OnInit {\n  @Output() executedOperationId: EventEmitter<any> = new EventEmitter<any>();\n\n  noDataIsAvailable = false;\n  isWait = false; // to control spinner\n\n  /* DAG Chart settings */\n  containerId = '#dagPlot';\n  tooltipOffsetX = 10; // position the tooltip on the right side of the triggering element\n  margin = { top: 50, right: 50, bottom: 50, left: 50 }; // chart margins\n  nodeSize = 30; // tree node size\n  maxTextLabelLength = 13;\n  nodeTypes = [\n    // settings for DAG nodes\n    {\n      id: 'data_resource_node',\n      label: 'File',\n      img: '../../../../assets/file.png'\n    },\n    { id: 'op_node', label: 'Operation', img: '../../../../assets/gear.png' }\n  ];\n\n  constructor(\n    private route: ActivatedRoute,\n    private analysesService: AnalysesService,\n    private workspaceDetailService: WorkspaceDetailService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    const workspaceId = this.route.snapshot.paramMap.get('workspaceId');\n    this.analysesService.getExecOperationDAG(workspaceId).subscribe(data => {\n      this.buildDAG(data);\n    });\n  }\n\n  /**\n   * Function to render DAG (Directed Acyclic Graph)\n   */\n  buildDAG(data): void {\n    if (!data || data.length === 0) {\n      this.noDataIsAvailable = true;\n      return;\n    }\n\n    const dag = d3dag.dagStratify()(data);\n    const layout = d3dag.sugiyama()(dag);\n    const scale = x => 100 * x;\n\n    // use computed layout and get size\n    const width = scale(layout.width);\n    const height = scale(layout.height);\n\n    d3.select(this.containerId)\n      .selectAll('svg')\n      .remove();\n\n    const svgSelection = d3\n      .select(this.containerId)\n      .append('svg')\n      .attr('width', width + this.margin.right + this.margin.left)\n      .attr('height', height + this.margin.top + this.margin.bottom);\n\n    const defs = svgSelection.append('defs');\n\n    this.nodeTypes.forEach(d => {\n      defs\n        .append('svg:pattern')\n        .attr('id', d.id)\n        .attr('width', this.nodeSize)\n        .attr('height', this.nodeSize)\n        .append('svg:image')\n        .attr('href', d.img)\n        .attr('width', this.nodeSize)\n        .attr('height', this.nodeSize)\n        .attr('x', this.nodeSize / 2)\n        .attr('y', this.nodeSize / 2);\n    });\n\n    // Draw edges\n    const line = d3\n      .line()\n      .curve(d3.curveCatmullRom)\n      .x(d => d['x'])\n      .y(d => d['y']);\n\n    // Plot edges\n    svgSelection\n      .append('g')\n      .selectAll('path')\n      .data(dag.links())\n      .enter()\n      .append('path')\n      .attr('d', ({ points }: any) => {\n        points = points.map(el => ({ x: scale(el.x), y: scale(el.y) }));\n        return line(points);\n      })\n      .attr('fill', 'none')\n      .attr('stroke-width', 2)\n      .attr('stroke', '#ccc');\n\n    // Select nodes\n    const nodes = svgSelection\n      .append('g')\n      .selectAll('g')\n      .data(dag.descendants())\n      .enter()\n      .append('g')\n      .attr(\n        'transform',\n        ({ x, y }: any) => `translate(${scale(x)}, ${scale(y)})`\n      );\n\n    // Tooltip\n    const tooltipOffsetX = this.tooltipOffsetX;\n    const tip = d3Tip()\n      .attr('class', 'd3-tip')\n      .offset([-10, 0])\n      .html((event, d) => {\n        const name = d.data.node_name;\n        const typeLabel = this.nodeTypes.find(\n          type => type.id === d.data.node_type\n        ).label;\n        return typeLabel + ': ' + name;\n      });\n    svgSelection.call(tip);\n\n    // Plot node circles\n    nodes\n      .append('circle')\n      .attr('r', this.nodeSize)\n      .attr('fill', d => {\n        return 'url(#' + d.data['node_type'] + ')';\n      })\n      .attr('class', 'circle')\n      .on('mouseover', function(mouseEvent: any, d) {\n        tip.show(mouseEvent, d, this);\n        tip.style('left', mouseEvent.x + tooltipOffsetX + 'px');\n      })\n      .on('mouseout', tip.hide)\n      .on('click', (event, d) => {\n        tip.hide();\n        this.onNodeClick(d);\n      });\n\n    // Add text to root nodes\n    const truncate = input =>\n      input.length > this.maxTextLabelLength\n        ? `${input.substring(0, this.maxTextLabelLength)}...`\n        : input;\n\n    nodes\n      .append('text')\n      .filter(d => d.data['parentIds'].length === 0)\n      .text(d => truncate(d.data['node_name']))\n\n      .attr('dx', '-3em')\n      .attr('dy', '-2em')\n      .attr('class', 'text-label');\n  }\n\n  /**\n   * Function is triggered when a tree node is clicked. Clicking on operation nodes\n   * redirects to the Analysis Result. Clicking on Resource nodes opens the Preview file pop-up.\n   */\n  onNodeClick(d) {\n    if (d.data.node_type === 'op_node') {\n      this.executedOperationId.emit(d.data.id);\n    } else {\n      this.previewItem(d.data.id);\n    }\n  }\n\n  /**\n   * Function is used to preview the content of the workspace resource (file)\n   */\n  previewItem(resourceId) {\n    this.isWait = true;\n    this.workspaceDetailService\n      .getResourcePreview(resourceId)\n      .subscribe(data => {\n        const previewData = {};\n        if (data?.results?.length && 'rowname' in data.results[0]) {\n          const minN = Math.min(data.results.length, 10);\n          const slicedData = data.results.slice(0, minN);\n          const columns = Object.keys(slicedData[0].values);\n          const rows = slicedData.map(elem => elem.rowname);\n          const values = slicedData.map(elem => {\n            const rowValues = [];\n            const elemValues = elem.values;\n            columns.forEach(col => rowValues.push(elemValues[col]));\n            return rowValues;\n          });\n          previewData['columns'] = columns;\n          previewData['rows'] = rows;\n          previewData['values'] = values;\n        }\n\n        setTimeout(() => {\n          this.isWait = false;\n          this.dialog.open(PreviewDialogComponent, {\n            data: {\n              previewData: previewData\n            }\n          });\n        }, 1000);\n      });\n  }\n\n  /**\n   * Function performs a ‘workspace export’ which takes the graph\n   * and make some ‘full record’ including the operation versions, etc.\n   */\n  saveAnalysisHistory() {}\n}\n","<mev-spinner-overlay *ngIf=\"isWait\"></mev-spinner-overlay>\n\n<section class=\"analysis-container\">\n    <mat-card class=\"analysis-card\">\n        <mat-card-content class=\"analysis-card__main\">\n            <p class=\"analysis-card__instruction\">\n                Below is a visual representation of your analysis. \n                You can view which analyses were run and with which files so that analyses can be fully reproduced.\n            </p>\n            <mat-divider [inset]=\"true\"></mat-divider>\n            <div class=\"analysis-card__content\">\n                <div class=\"btn-group\">\n                    <button mat-raised-button color=\"accent\" (click)=\"saveAnalysisHistory()\" disabled=true>\n                      <mat-icon aria-label=\"Export analysis history\">save_alt</mat-icon>\n                      Export analysis history\n                    </button>\n                </div>    \n                <div *ngIf=\"noDataIsAvailable\">No data is available</div>\n                <div class=\"chart\" #dagPlot id=\"dagPlot\"></div>\n            </div>\n        </mat-card-content>\n    </mat-card>\n</section>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { AnalysesService } from '../../services/analysis.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Workspace } from '@app/features/workspace-manager/models/workspace';\nimport { Operation } from '../../models/operation';\nimport {\n  MatTreeFlatDataSource,\n  MatTreeFlattener\n} from '@angular/material/tree';\nimport { FlatTreeControl } from '@angular/cdk/tree';\n\n/**\n * Operation category with nested structure.\n * Each node has a name and an optional list of children.\n */\ninterface OperationCategoryNode {\n  name: string;\n  children?: Operation[];\n}\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n\n/**\n * Analyses Component\n * Used to display the list of available operations as a tree structure (the Tools tab)\n */\n@Component({\n  selector: 'mev-analyses',\n  templateUrl: './analyses.component.html',\n  styleUrls: ['./analyses.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class AnalysesComponent implements OnInit {\n  workspaceId: string;\n  workspace$: Observable<Workspace>;\n  operations: Operation[];\n  operationCategories: any[];\n  selectedOperation: Operation;\n\n  @Output() executedOperationId: EventEmitter<any> = new EventEmitter<any>();\n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  private _transformer = (node: OperationCategoryNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      level: level,\n      ...node\n    };\n  };\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: AnalysesService\n  ) {}\n\n  /**\n   * Initialize the datasource for the Operation Tree\n   */\n  ngOnInit(): void {\n    this.workspaceId = this.route.snapshot.paramMap.get('workspaceId');\n    this.workspace$ = this.apiService.getWorkspaceDetail(this.workspaceId);\n\n    this.apiService.getOperations().subscribe(operations => {\n      this.operations = operations;\n    });\n\n    this.apiService.getOperationCategories().subscribe(operationCategories => {\n      this.selectedOperation = operationCategories[0].children[0]; // show the parameters for the 1st operation by default\n      operationCategories.push(this.getPlottingOperationCategory());\n      this.dataSource.data = operationCategories;\n      this.treeControl.expand(this.treeControl.dataNodes[0]); // expand the 1st operation category by default\n    });\n  }\n\n  /**\n   * Add a 'fake' operation for plotting. It is a frontend-only operation to provide\n   * view for the normalization methods\n   * The user can select a numerical matrix and custom feature set to view a boxplot showing the\n   * distribution of expressions\n   */\n  getPlottingOperationCategory() {\n    const op = {\n      name: 'Plotting',\n      children: [\n        {\n          id: 'Plotting',\n          name: 'Plot expressions',\n          description: 'Output view for the normalization methods',\n          mode: 'client',\n          inputs: {\n            input_matrix: {\n              description:\n                'The input matrix. For example, a gene expression matrix for a cohort of samples.',\n              name: 'Input matrix:',\n              required: true,\n              spec: {\n                attribute_type: 'DataResource',\n                many: false,\n                resource_types: ['MTX', 'I_MTX', 'EXP_MTX', 'RNASEQ_COUNT_MTX']\n              }\n            },\n            features: {\n              description: 'The genes/features to use in plotting',\n              name: 'Plot genes/features by:',\n              required: false,\n              spec: {\n                attribute_type: 'FeatureSet'\n              }\n            }\n          }\n        }\n      ]\n    };\n    return op;\n  }\n\n  /**\n   * Function is triggered when the user clicks on a specific operation in the Operation Tree\n   */\n  public showOperationDetails(operation) {\n    this.selectedOperation = operation;\n  }\n\n  /**\n   * Function is triggered when the user starts an analysis and emits a newly created executed operation id\n   */\n  public showExecutedOperationResult(data: any) {\n    this.executedOperationId.emit(data);\n  }\n}\n","<div class=\"analyses-container\">\n  <section class=\"analyses-section\">\n    <div class=\"tab-content\">\n      The analysis pane on the left side displays the list of available\n      data analysis tools. Expand and collapse the list of tools clicking on a category.\n      Click on a item to set input parameters and run an analysis.\n      <div class=\"vertical-tab-container\">\n        <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n          <!-- tree node template for leaf nodes -->\n          <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding [ngClass]=\"{ 'active-node': node.id === selectedOperation.id }\">\n            <!-- use a disabled button to provide padding for tree leaf -->\n            <button mat-icon-button disabled></button>\n            <button (click)=\"showOperationDetails(node)\">\n              {{node.name}}\n            </button>\n          </mat-tree-node>\n          <!-- tree node template for expandable nodes -->\n          <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n            <button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\n              <mat-icon class=\"mat-icon-rtl-mirror\">\n                {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n              </mat-icon>\n              {{node.name}}\n            </button>\n            \n          </mat-tree-node>\n        </mat-tree>\n\n        <mat-divider [vertical]=\"true\"></mat-divider>\n\n        <div class=\"operation-container\">\n          <mev-operation *ngIf=\"selectedOperation\" [operation]=\"selectedOperation\" [workspaceId]=\"workspaceId\"\n            [workspace$]=\"workspace$\" (executedOperationId)=\"showExecutedOperationResult($event)\"></mev-operation>\n        </div>\n      </div>\n    </div>\n  </section>\n</div>","import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Analysis Plotting Result Component\n * Container component used for displaying plotting results\n * It is a front-end only operation and no real operation is executed, so\n * use modal dialog to display plotting results and not Executed Operation Component\n */\n@Component({\n  selector: 'mev-analysis-plotting-result',\n  templateUrl: './analysis-plotting-result.component.html',\n  styleUrls: ['./analysis-plotting-result.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AnalysisPlottingResultComponent {\n  constructor(\n    public dialogRef: MatDialogRef<AnalysisPlottingResultComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n}\n","<div class=\"container\">\n    <div class=\"mat-dialog-content\">\n        <mev-box-plotting [outputs]=\"data.boxPlotData\"></mev-box-plotting>\n    </div>\n</div>","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnChanges\n} from '@angular/core';\n\n/**\n * Analysis Result Component\n * Container component used for displaying the result of an executed operation\n */\n@Component({\n  selector: 'mev-analysis-result',\n  templateUrl: './analysis-result.component.html',\n  styleUrls: ['./analysis-result.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class AnalysisResultComponent implements OnChanges {\n  @Input() outputs;\n  operationName: string;\n  constructor() {}\n\n  ngOnChanges(): void {\n    this.outputs = { ...this.outputs };\n    this.operationName = this.getOperationName();\n    console.log(this.operationName);\n    console.log('????????????');\n  }\n\n  /**\n   * get the name of an executed or executing operation\n   * for running operations the name is returned in the operation field\n   * for executed operations the name is in operation_name property\n   */\n  getOperationName() {\n    if (typeof this.outputs.operation === 'string') {\n      return this.outputs.operation;\n    }\n    return this.outputs.operation?.operation_name;\n  }\n}\n","<div *ngIf=\"!outputs.error_messages?.length; else error\">\n    <ng-container *ngIf=\"operationName === 'Principal component analysis (PCA)'\">\n        <mev-scatter-plot *ngIf=\"outputs\" [outputs]=\"outputs\"></mev-scatter-plot>\n    </ng-container>\n\n    <ng-container *ngIf=\"operationName === 'DESeq2'\">\n        <mev-deseq2 [outputs]=\"outputs\"></mev-deseq2>\n    </ng-container>\n\n    <ng-container *ngIf=\"operationName === 'Limma/voom'\">\n        <mev-limma [outputs]=\"outputs\"></mev-limma>\n    </ng-container>\n\n    <ng-container *ngIf=\"operationName === 'edgeR'\">\n        <mev-edger [outputs]=\"outputs\"></mev-edger>\n    </ng-container>\n\n    <ng-container *ngIf=\"operationName === 'Hierarchical clustering (HCL)'\">\n        <mev-hcl [outputs]=\"outputs\"></mev-hcl>\n    </ng-container>\n\n    <ng-container *ngIf=\"operationName === 'Fast Gene Set Enrichment Analysis (fgsea)'\">\n        <mev-gsea [outputs]=\"outputs\"></mev-gsea>\n    </ng-container>\n\n    <ng-container *ngIf=\"operationName === 'K-means'\">\n        <mev-kmeans [outputs]=\"outputs\"></mev-kmeans>\n    </ng-container>\n\n    <ng-container *ngIf=\"operationName === 'RNA-Seq normalization'\">\n        <mev-rnaseq-normalization [outputs]=\"outputs\"></mev-rnaseq-normalization>\n    </ng-container>\n</div>\n\n<ng-template #error>\n    <p class=\"error\">The analysis result cannot be displayed. The error description:\n        <span class=\"error__description\">{{ outputs.error_messages }}</span>\n    </p>\n</ng-template>","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AnalysesService } from '../../services/analysis.service';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { of, Subscription } from 'rxjs';\nimport { FlatTreeControl } from '@angular/cdk/tree';\nimport { Operation } from '../../models/operation';\nimport {\n  MatTreeFlattener,\n  MatTreeFlatDataSource\n} from '@angular/material/tree';\n\n/**\n * Operation category with nested structure.\n * Each node has a name and an optional list of children.\n */\ninterface OperationCategoryNode {\n  name: string;\n  children?: Operation[];\n}\n\n/**\n * Flat node with expandable and level information\n */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n}\n\n/**\n * Presentational states of operation execution process\n */\nenum operationExecution {\n  InProcess,\n  RunningAnalysis,\n  PreparingData,\n  Finished\n}\n\n/**\n * Executed Operation Component\n * used for displaying the list of executed operations (tree) and their results\n */\n\n@Component({\n  selector: 'mev-executed-operation',\n  templateUrl: './executed-operation.component.html',\n  styleUrls: ['./executed-operation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class ExecutedOperationComponent implements OnInit {\n  private executedOperationResultSubscription: Subscription = new Subscription();\n  execOperations;\n  execOperationResult;\n  selectedExecOperationId: string;\n  selectedExecOperationName: string;\n  data;\n\n  @Input() execOperationId: string;\n  outputs;\n  operationExecutionStateType = operationExecution;\n  operationExecutionState: operationExecution;\n  categories = new Set();\n  subcategories = [];\n\n  isTreePanelCollapsed = false;\n  activeNode: Operation;\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level,\n    node => node.expandable\n  );\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  private _transformer = (node: OperationCategoryNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      level: level,\n      ...node\n    };\n  };\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: AnalysesService\n  ) {}\n\n  /**\n   * Initialize the datasource for the Operation Tree\n   */\n  ngOnInit(): void {\n    const operationTree = {};\n    const workspaceId = this.route.snapshot.paramMap.get('workspaceId');\n    this.executedOperationResultSubscription = this.apiService\n      .getExecOperations(workspaceId)\n      .pipe(\n        tap(operations => {\n          this.execOperations = operations;\n          operations.forEach(execOperation => {\n            execOperation = { ...execOperation, name: execOperation.job_name };\n            const categories = execOperation.operation.categories;\n            const operation = execOperation.operation.operation_name;\n            categories.forEach(category => {\n              if (category in operationTree) {\n                const level = operationTree[category];\n                if (operation in level) {\n                  level[operation].push(execOperation);\n                } else {\n                  level[operation] = [execOperation];\n                }\n              } else {\n                const level = {};\n                level[operation] = [execOperation];\n                operationTree[category] = level;\n              }\n            });\n            const operationTreeArr = [];\n            for (const elem in operationTree) {\n              const categoryLevel = { name: elem, children: [] };\n              for (const subElem in operationTree[elem]) {\n                categoryLevel.children.push({\n                  name: subElem,\n                  children: operationTree[elem][subElem]\n                });\n              }\n              operationTreeArr.push(categoryLevel);\n            }\n            operationTreeArr.sort(function(a, b) {\n              var nameA = a.name.toUpperCase();\n              var nameB = b.name.toUpperCase();\n              if (nameA < nameB) {\n                return -1;\n              }\n              if (nameA > nameB) {\n                return 1;\n              }\n              return 0;\n            });\n            this.dataSource.data = operationTreeArr.sort();\n          });\n        }),\n        switchMap(() => {\n          if (this.execOperationId) {\n            this.operationExecutionState = operationExecution.InProcess;\n\n            this.selectedExecOperationId = this.execOperationId;\n            const execOperation = this.getExecOperationByOperationId(\n              this.execOperationId\n            );\n\n            // expand the parent nodes if there is an operation selected\n            const nodesToExpand = [\n              execOperation.operation.operation_name,\n              ...execOperation.operation.categories\n            ];\n            this.treeControl.dataNodes.forEach((node, i) => {\n              if (nodesToExpand.includes(node.name)) {\n                this.treeControl.expand(this.treeControl.dataNodes[i]);\n              }\n            });\n            this.activeNode = execOperation;\n            this.selectedExecOperationName = execOperation.job_name;\n\n            // if the opertion has been already completed, just extract its data from the list\n            if (execOperation?.outputs || execOperation?.error_messages) {\n              this.outputs = {\n                operation: execOperation.operation,\n                job_name: execOperation.job_name,\n                ...execOperation.outputs,\n                ...execOperation.inputs,\n                error_messages: execOperation.error_messages\n              };\n              return of({ body: execOperation });\n            }\n\n            return this.apiService.getExecutedOperationResult(\n              this.execOperationId\n            );\n          }\n          return of();\n        })\n      )\n      .subscribe((response: any) => {\n        this.updateOperationExecutionState(response.status);\n        this.outputs = {\n          operation: response?.body?.operation,\n          job_name: response?.body?.job_name,\n          ...response?.body?.outputs,\n          ...response?.body?.inputs,\n          error_messages: response?.body?.error_messages\n        };\n      });\n  }\n\n  /**\n   * Find the operation data by OperationID\n   */\n  getOutputs(operationId) {\n    const idx = this.execOperations.findIndex(val => val.id === operationId);\n    return this.execOperations[idx].outputs;\n  }\n\n  /**\n   * Function is triggered when the user selects an operation in the tree\n   */\n  onSelectExecOperation(execOperation) {\n    console.log('SELECTED');\n    console.log(execOperation);\n    this.activeNode = execOperation;\n    this.operationExecutionState = operationExecution.InProcess;\n\n    this.executedOperationResultSubscription.unsubscribe();\n    this.execOperationId = execOperation.id;\n    this.selectedExecOperationName = execOperation.job_name;\n\n    // if the operation has been already completed, just extract its data from the list\n    if (execOperation.outputs || execOperation.error_messages) {\n      this.outputs = {\n        operation: execOperation.operation,\n        job_name: execOperation.job_name,\n        ...execOperation.outputs,\n        ...execOperation.inputs,\n        error_messages: execOperation.error_messages\n      };\n      this.operationExecutionState = operationExecution.Finished;\n    } else {\n      this.executedOperationResultSubscription = this.apiService\n        .getExecutedOperationResult(this.execOperationId)\n        .subscribe(response => {\n          this.outputs = {\n            operation: response?.body?.operation,\n            job_name: response?.body?.job_name,\n            ...response?.body?.outputs,\n            ...response?.body?.inputs,\n            error_messages: response?.body?.error_messages\n          };\n\n          this.updateOperationExecutionState(response.status);\n        });\n    }\n  }\n\n  /**\n   * Update the operation execution state depending on the server response\n   */\n  updateOperationExecutionState(status) {\n    if (status === 204) {\n      this.operationExecutionState = operationExecution.RunningAnalysis;\n    } else if (status === 202 || status === 208) {\n      this.operationExecutionState = operationExecution.PreparingData;\n    } else {\n      this.operationExecutionState = operationExecution.Finished;\n      this.execOperations.filter(\n        op => op.id === this.execOperationId\n      )[0].execution_stop_datetime = new Date();\n    }\n  }\n\n  /**\n   * Function to check if an operation failed\n   */\n  isOperationFailed(operation): boolean {\n    return operation.job_failed;\n  }\n\n  /**\n   * Function to check if an operation is still executing\n   */\n  isOperationExecuting(operation): boolean {\n    if (operation.execution_stop_datetime) return false;\n\n    // if execution_stop_datetime is null, check if the list of operations has an updated value\n    const arr = this.execOperations.filter(op => op.id === operation.id);\n    if (arr.length) {\n      return !arr[0].execution_stop_datetime;\n    }\n    return true;\n  }\n\n  getExecOperationByOperationId(operationId: string) {\n    const idx = this.execOperations.findIndex(val => val.id === operationId);\n    return this.execOperations[idx];\n  }\n\n  public ngOnDestroy(): void {\n    this.executedOperationResultSubscription.unsubscribe();\n  }\n\n  /**\n   * Control if the left side panel is collapsed or expanded\n   */\n  toggleTreePanel(): void {\n    this.isTreePanelCollapsed = !this.isTreePanelCollapsed;\n  }\n}\n","<section class=\"container\">\n\n  <p>\n    The analysis pane on the left side displays the list of executed opertations.\n    Expand and collapse the list of operations clicking on an operation category.\n    Click on an operation to view results.\n  </p>\n  <p *ngIf=\"dataSource.data.length === 0\">\n    No executed operations available\n  </p>\n  <div *ngIf=\"dataSource.data.length !== 0\" class=\"vertical-tab-container\">\n    <div class=\"tree-container\">\n      <div class=\"collapseBtn\" (click)=\"toggleTreePanel()\" title=\"Click the button to toggle between showing and hiding the panel content\"> \n        <mat-icon color=\"accent\" [ngClass]=\"{'hidden': isTreePanelCollapsed}\">arrow_back</mat-icon>\n        <mat-icon color=\"accent\" [ngClass]=\"{'hidden': !isTreePanelCollapsed}\">arrow_forward</mat-icon>\n      </div>\n\n      <mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" [ngClass]=\"{'collapsed': isTreePanelCollapsed}\">\n        <!-- tree node template for leaf nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding [ngClass]=\"{ 'active-node': activeNode?.id === node.id }\">\n          <!-- use a disabled button to provide padding for tree leaf -->\n          <!-- <button mat-icon-button disabled></button> -->\n          <button (click)=\"onSelectExecOperation(node)\">\n            {{ node.name }} \n            <mat-icon *ngIf=\"isOperationExecuting(node)\" class=\"mat-icon--timer\">timer</mat-icon>\n            <mat-icon *ngIf=\"node.job_failed\" class=\"mat-icon--error\">error_outline</mat-icon>                          \n          </button>\n        </mat-tree-node>\n        <!-- tree node template for expandable nodes -->\n        <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n          <button matTreeNodeToggle [attr.aria-label]=\"'Toggle ' + node.name\">\n            <mat-icon class=\"mat-icon-rtl-mirror\">\n              {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n            </mat-icon>\n            {{node.name}}\n          </button>\n          \n        </mat-tree-node>\n      </mat-tree>\n    </div>\n   \n\n    <mat-divider [vertical]=\"true\"></mat-divider>\n\n    <div class=\"operation-container\">\n      <!-- <div *ngIf=\"selectedExecOperationId && isInProgress\" class=\"operation-status\">Building chart, please wait...</div> -->\n      <div *ngIf=\"operationExecutionState === operationExecutionStateType.RunningAnalysis\" class=\"operation-status\">\n        Running analysis, please wait...\n      </div>\n      <div *ngIf=\"operationExecutionState === operationExecutionStateType.PreparingData\" class=\"operation-status\">\n        Preparing data and visualization...\n      </div>\n      <div *ngIf=\"operationExecutionState === operationExecutionStateType.InProcess\" class=\"operation-status\">\n        Please wait...\n      </div>\n      <mev-analysis-result *ngIf=\"operationExecutionState === operationExecutionStateType.Finished\" [outputs]=\"outputs\"></mev-analysis-result>\n    </div>\n  </div>\n\n</section>","import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  EventEmitter,\n  Output,\n  OnChanges\n} from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { AnalysesService } from '../../services/analysis.service';\nimport { Workspace } from '@app/features/workspace-manager/models/workspace';\nimport { Observable } from 'rxjs';\nimport { Operation } from '../../models/operation';\nimport { MetadataService } from '@app/core/metadata/metadata.service';\nimport { AnalysisPlottingResultComponent } from '../analysis-plotting-result/analysis-plotting-result.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n/**\n * Operation Component\n * used for displaying the input parameters of an operation\n */\n@Component({\n  selector: 'mev-operation',\n  templateUrl: './operation.component.html',\n  styleUrls: ['./operation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class OperationComponent implements OnChanges {\n  analysesForm: FormGroup;\n  submitted = false;\n  multipleResourcesDropdownSettings = {};\n\n  @Input() workspaceId: string;\n  @Input() workspace$: Observable<Workspace>;\n  @Input() operation: Operation;\n\n  @Output() executedOperationId: EventEmitter<any> = new EventEmitter<any>();\n\n  // default settings for analyses fields\n  numFields = [];\n  intFields = [];\n  resourceFields = [];\n  multipleResourceFields = [];\n  textFields = [];\n  optionFields = [];\n  booleanFields = [];\n  observationFields = [];\n  featureFields = [];\n\n  boxPlotData;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: AnalysesService,\n    private metadataService: MetadataService,\n    public dialog: MatDialog\n  ) {\n    this.multipleResourcesDropdownSettings = {\n      text: '',\n      selectAllText: 'Select All',\n      unSelectAllText: 'Unselect All',\n      classes: 'resource-dropdown'\n    };\n  }\n\n  ngOnChanges(): void {\n    this.loadData();\n  }\n\n  /**\n   * Configure the control setting for different types of input operation parameters\n   * The supported types are ObservationSet, FeatureSet, DataResource, BoundedFloat, Integer,\n   * Positive Integer, String, OptionString\n   */\n  createForm(data) {\n    const inputs = data.inputs;\n    const controlsConfig = {};\n    this.numFields = [];\n    this.intFields = [];\n    this.resourceFields = [];\n    this.multipleResourceFields = [];\n    this.textFields = [];\n    this.booleanFields = [];\n    this.optionFields = [];\n    this.observationFields = [];\n    this.featureFields = [];\n\n    for (const key in inputs) {\n      if (inputs.hasOwnProperty(key)) {\n        const input = inputs[key];\n        const field_type = input.spec.attribute_type;\n\n        switch (field_type) {\n          case 'ObservationSet': {\n            const observationField = {\n              key: key,\n              name: input.name,\n              desc: input.description,\n              required: input.required,\n              sets: []\n            };\n            const availableObsSets = this.metadataService.getCustomObservationSets();\n            observationField.sets = availableObsSets.map(set => {\n              const newSet = set.elements.map(elem => {\n                const o = { id: elem.id };\n                return o;\n              });\n              return { ...set, elements: newSet };\n            });\n            this.observationFields.push(observationField);\n            const configObservationSetsField = [\n              '',\n              [...(input.required ? [Validators.required] : [])]\n            ];\n            controlsConfig[key] = configObservationSetsField;\n            break;\n          }\n          case 'FeatureSet': {\n            const featureField = {\n              key: key,\n              name: input.name,\n              desc: input.description,\n              required: input.required,\n              sets: []\n            };\n            const availableFeatSets = this.metadataService.getCustomFeatureSets();\n            featureField.sets = availableFeatSets.map(set => {\n              const newSet = set.elements.map(elem => {\n                const o = { id: elem.id };\n                return o;\n              });\n              return { ...set, elements: newSet };\n            });\n            this.featureFields.push(featureField);\n            const configFeatureSetsField = [\n              '',\n              [...(input.required ? [Validators.required] : [])]\n            ];\n            controlsConfig[key] = configFeatureSetsField;\n            break;\n          }\n          case 'DataResource': {\n            const resourceField = {\n              key: key,\n              name: input.name,\n              resource_types: input.spec.resource_types,\n              desc: input.description,\n              required: input.required,\n              files: [],\n              selectedFiles: []\n            };\n            this.apiService\n              .getAvailableResourcesByParam(\n                input.spec.resource_types,\n                this.workspaceId\n              )\n              .subscribe(data => {\n                resourceField.files = data;\n                if (input.spec.many === false) {\n                  this.resourceFields.push(resourceField);\n                } else {\n                  this.multipleResourceFields.push(resourceField);\n                }\n              });\n\n            const configResourceField = [\n              '',\n              [...(input.required ? [Validators.required] : [])]\n            ];\n            controlsConfig[key] = configResourceField;\n            break;\n          }\n          case 'BoundedFloat': {\n            const numField = {\n              key: key,\n              name: input.name,\n              min: input.spec.min,\n              max: input.spec.max,\n              desc: input.description,\n              required: input.required\n            };\n            this.numFields.push(numField);\n\n            const configNumField = [\n              input.spec.default_value,\n              [\n                ...(input.required ? [Validators.required] : []),\n                Validators.min(input.spec.min),\n                Validators.max(input.spec.max),\n                Validators.pattern(/^-?\\d*(\\.\\d+)?$/)\n              ]\n            ];\n            controlsConfig[key] = configNumField;\n            break;\n          }\n          case 'Integer': {\n            const intField = {\n              key: key,\n              name: input.name,\n              min: 0,\n              desc: input.description,\n              required: input.required\n            };\n            this.intFields.push(intField);\n\n            const configIntField = [\n              input.spec.default_value,\n              [\n                ...(input.required ? [Validators.required] : []),\n                Validators.min(input.spec.min),\n                Validators.pattern(/^[0-9]\\d*$/)\n              ]\n            ];\n            controlsConfig[key] = configIntField;\n            break;\n          }\n          case 'PositiveInteger': {\n            const posIntField = {\n              key: key,\n              name: input.name,\n              min: 1,\n              desc: input.description,\n              required: input.required\n            };\n            this.intFields.push(posIntField);\n\n            const configPosIntField = [\n              input.spec.default_value,\n              [\n                ...(input.required ? [Validators.required] : []),\n                Validators.min(input.spec.min),\n                Validators.pattern(/^[1-9]\\d*$/)\n              ]\n            ];\n            controlsConfig[key] = configPosIntField;\n            break;\n          }\n          case 'String': {\n            const textField = {\n              key: key,\n              name: input.name,\n              desc: input.description,\n              required: input.required\n            };\n            this.textFields.push(textField);\n\n            const configTextField = [\n              input.spec.default_value,\n              [...(input.required ? [Validators.required] : [])]\n            ];\n            controlsConfig[key] = configTextField;\n            break;\n          }\n          case 'OptionString': {\n            const optionField = {\n              key: key,\n              name: input.name,\n              desc: input.description,\n              required: input.required,\n              options: input.spec.options,\n              selectedOptions: []\n            };\n            this.optionFields.push(optionField);\n            const configOptionField = [\n              input.spec.default_value,\n              [...(input.required ? [Validators.required] : [])]\n            ];\n            controlsConfig[key] = configOptionField;\n            break;\n          }\n          case 'Boolean': {\n            const booleanField = {\n              key: key,\n              name: input.name,\n              desc: input.description,\n              required: input.required\n            };\n            this.booleanFields.push(booleanField);\n\n            const configBooleanField = [\n              input.spec.default_value,\n              [...(input.required ? [Validators.required] : [])]\n            ];\n            controlsConfig[key] = configBooleanField;\n            break;\n          }\n          default: {\n            break;\n          }\n        }\n      }\n    }\n\n    controlsConfig['job_name'] = [\n      '',\n      [...(this.operation.mode !== 'client' ? [Validators.required] : [])]\n    ];\n    this.analysesForm = this.formBuilder.group(controlsConfig);\n  }\n\n  /**\n   * Load operation data before creating form controls\n   */\n  loadData() {\n    if (this.operation.mode === 'client') {\n      this.createForm(this.operation);\n    } else {\n      this.apiService.getOperation(this.operation.id).subscribe(data => {\n        this.createForm(data);\n      });\n    }\n  }\n\n  onSubmit() {\n    this.submitted = true;\n  }\n\n  /**\n   * Function is used to convert strings to floats for numeric values\n   * before sending the data to execute the operation\n   */\n  convertToFloatObj(obj) {\n    const res = {};\n    for (const key in obj) {\n      res[key] =\n        isNaN(obj[key]) || typeof obj[key] === 'boolean'\n          ? obj[key]\n          : parseFloat(obj[key]);\n    }\n    return res;\n  }\n\n  /**\n   * Function is triggered when the user clicks the Run button\n   * to start analysis\n   */\n  startAnalysis() {\n    const inputs = this.convertToFloatObj(this.analysesForm.value);\n    this.apiService\n      .executeOperation(this.operation.id, this.workspaceId, inputs)\n      .subscribe(data => {\n        this.executedOperationId.emit(data.executed_operation_id);\n      });\n  }\n\n  /**\n   * Function is triggered when the user clicks the Show button\n   * to visualize normalization results\n   */\n  showPlots() {\n    const inputs = this.convertToFloatObj(this.analysesForm.value);\n    this.boxPlotData = { ...inputs };\n\n    this.dialog.open(AnalysisPlottingResultComponent, {\n      data: {\n        boxPlotData: { ...inputs }\n      }\n    });\n  }\n\n  /**\n   * Convenience getter for easy access to form fields\n   */\n  get f() {\n    return this.analysesForm.controls;\n  }\n}\n","<h3>{{ operation.name }}</h3>\n<p>{{ operation.description }} </p>\n\n<form *ngIf=\"analysesForm\" [formGroup]=\"analysesForm\" (ngSubmit)=\"onSubmit()\">\n\n  <!-- OPERATION NAME -->\n  <ng-container *ngIf=\"operation.mode !== 'client'\">\n    <div class=\"label\">\n      Operation name:\n      <mat-icon class=\"analyses-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n        matTooltip=\"Type operation name\" aria-label=\"Info tooltip about the field\">info\n      </mat-icon>\n    </div>\n\n    <mat-form-field class=\"form-control\" color=\"accent\">\n      <input matInput formControlName=\"job_name\" name=\"job_name\">\n    </mat-form-field>\n  </ng-container>\n\n  <!-- SINGLE SELECT LISTS FOR RESOURCES -->\n  <div *ngFor=\"let resourceField of resourceFields\">\n    <div class=\"label\">\n      {{ resourceField.name }}\n      <mat-icon class=\"analyses-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n        matTooltip=\"{{ resourceField.desc}}\" aria-label=\"Info tooltip about the field\">info\n      </mat-icon>\n    </div>\n    <mat-form-field class=\"form-control\" color=\"accent\">\n      <mat-select [formControlName]=\"resourceField.key\">\n        <mat-option *ngFor=\"let file of resourceField.files\" [value]=\"file.id\">\n          {{ file.name }}\n        </mat-option>\n      </mat-select>\n      <div *ngIf=\"submitted && f[resourceField.key].errors\">\n        <mat-error *ngIf=\"f[resourceField.key].errors.required\">\n          This field is required\n        </mat-error>\n      </div>\n    </mat-form-field>\n  </div>\n\n\n\n  <!-- MULTIPLE SELECT LISTS FOR RESOURCES -->\n  <div *ngFor=\"let multipleResourceField of multipleResourceFields\">\n    <div class=\"form-control form-control--multiselect\">\n      <div class=\"label\">\n        {{ multipleResourceField.name }}\n        <mat-icon class=\"analyses-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n          matTooltip=\"{{ multipleResourceField.desc}}\" aria-label=\"Info tooltip about the field\">info\n        </mat-icon>\n      </div>\n      <angular2-multiselect [formControlName]=\"multipleResourceField.key\" [data]=\"multipleResourceField.files\"\n        [(ngModel)]=\"multipleResourceField.selectedFiles\" [settings]=\"multipleResourcesDropdownSettings\">\n        <c-item>\n          <ng-template let-item=\"item\">\n            <label>{{ item.name }} Type: {{ item.readable_resource_type || 'N/A' }}</label>\n          </ng-template>\n        </c-item>\n        <c-badge>\n          <ng-template let-item=\"item\">\n            <label>{{ item.name }}</label>\n          </ng-template>\n        </c-badge>\n      </angular2-multiselect>\n    </div>\n  </div>\n\n\n\n\n  <!-- NUMERIC FIELDS -->\n\n  <div *ngFor=\"let numField of numFields\">\n    <div class=\"label\">\n      {{ numField.name }}\n      <mat-icon class=\"analyses-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n        matTooltip=\"{{ numField.desc}}\" aria-label=\"Info tooltip about the field\">info\n      </mat-icon>\n    </div>\n    <mat-form-field class=\"form-control\" color=\"accent\">\n      <input matInput [formControlName]=\"numField.key\" [name]=\"numField.key\">\n      <div *ngIf=\"submitted && f[numField.key].errors\">\n        <mat-error *ngIf=\"f[numField.key].errors.required\">\n          This field is required\n        </mat-error>\n        <mat-error *ngIf=\"f[numField.key].errors.min || f[numField.key].errors.max || f[numField.key].errors.pattern\">\n          The value should be a number between {{ numField.min }} and {{ numField.max }}.\n        </mat-error>\n      </div>\n    </mat-form-field>\n  </div>\n\n  <!-- INTEGER FIELDS -->\n\n  <div *ngFor=\"let intField of intFields\">\n    <div class=\"label\">\n      {{ intField.name }}\n      <mat-icon class=\"analyses-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n        matTooltip=\"{{ intField.desc}}\" aria-label=\"Info tooltip about the field\">info\n      </mat-icon>\n    </div>\n    <mat-form-field class=\"form-control\" color=\"accent\">\n      <input matInput [formControlName]=\"intField.key\" [name]=\"intField.key\">\n      <div *ngIf=\"f[intField.key].value && f[intField.key].errors\">\n        <mat-error *ngIf=\"f[intField.key].errors.required\">\n          This field is required\n        </mat-error>\n        <mat-error *ngIf=\"f[intField.key].errors.min || f[intField.key].errors.max || f[intField.key].errors.pattern\">\n          The value should be an integer greater than or equal to {{ intField.min }}\n        </mat-error>\n      </div>\n    </mat-form-field>\n  </div>\n\n\n  <!-- TEXT FIELDS -->\n\n  <div *ngFor=\"let textField of textFields\">\n    <div class=\"label\">\n      {{ textField.name }}\n      <mat-icon class=\"analyses-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n        matTooltip=\"{{ textField.desc}}\" aria-label=\"Info tooltip about the field\">info\n      </mat-icon>\n    </div>\n\n    <mat-form-field class=\"form-control\" color=\"accent\">\n      <input matInput [formControlName]=\"textField.key\" [name]=\"textField.key\">\n      <div *ngIf=\"submitted && f[textField.key].errors\">\n        <mat-error *ngIf=\"f[textField.key].errors.required\">\n          This field is required\n        </mat-error>\n      </div>\n    </mat-form-field>\n  </div>\n\n\n  <!-- SINGLE SELECT LISTS FOR OBSERVATION SETS -->\n  <div *ngFor=\"let observationField of observationFields\">\n    <div class=\"label\">\n      {{ observationField.name }}\n      <mat-icon class=\"analyses-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n        matTooltip=\"{{ observationField.desc}}\" aria-label=\"Info tooltip about the field\">info\n      </mat-icon>\n    </div>\n\n    <mat-form-field class=\"form-control\" color=\"accent\">\n      <mat-select [formControlName]=\"observationField.key\">\n        <mat-option *ngFor=\"let set of observationField.sets\" [value]=\"set\">\n          {{ set.name }}\n        </mat-option>\n      </mat-select>\n      <div *ngIf=\"submitted && f[observationField.key].errors\">\n        <mat-error *ngIf=\"f[observationField.key].errors.required\">\n          This field is required\n        </mat-error>\n      </div>\n    </mat-form-field>\n  </div>\n\n  <!-- SINGLE SELECT LISTS FOR FEATURE SETS -->\n  <div *ngFor=\"let featureField of featureFields\">\n    <div class=\"label\">\n      {{ featureField.name }}\n      <mat-icon class=\"analyses-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n        matTooltip=\"{{ featureField.desc}}\" aria-label=\"Info tooltip about the field\">info\n      </mat-icon>\n    </div>\n\n    <mat-form-field class=\"form-control\" color=\"accent\">\n      <mat-select [formControlName]=\"featureField.key\">\n        <mat-option *ngFor=\"let set of featureField.sets\" [value]=\"set\">\n          {{ set.name }}\n        </mat-option>\n      </mat-select>\n      <div *ngIf=\"submitted && f[featureField.key].errors\">\n        <mat-error *ngIf=\"f[featureField.key].errors.required\">\n          This field is required\n        </mat-error>\n      </div>\n    </mat-form-field>\n  </div>\n\n\n  <!-- SINGLE SELECT LISTS FOR OPERATION OPTIONS -->\n  <div *ngFor=\"let optionField of optionFields\">\n    <div class=\"label\">\n      {{ optionField.name }}\n      <mat-icon class=\"analyses-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n        matTooltip=\"{{ optionField.desc}}\" aria-label=\"Info tooltip about the field\">info\n      </mat-icon>\n    </div>\n    <mat-form-field class=\"form-control\" color=\"accent\">\n      <mat-select [formControlName]=\"optionField.key\">\n        <mat-option *ngFor=\"let option of optionField.options\" [value]=\"option\">\n          {{ option }}\n        </mat-option>\n      </mat-select>\n      <div *ngIf=\"submitted && f[optionField.key].errors\">\n        <mat-error *ngIf=\"f[optionField.key].errors.required\">\n          This field is required\n        </mat-error>\n      </div>\n    </mat-form-field>\n  </div>\n\n\n  <!-- CHECKBOXES FOR BOOLEAN FIELDS -->\n  <ng-container *ngFor=\"let booleanField of booleanFields\">\n    <div class=\"form-control\" color=\"accent\">\n      <mat-checkbox [formControlName]=\"booleanField.key\" [checked]=\"booleanField.checked\">\n      </mat-checkbox>\n      <span class=\"label\">\n        {{ booleanField.name }}\n        <mat-icon class=\"analyses-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n          matTooltip=\"{{ booleanField.desc}}\" aria-label=\"Info tooltip about the field\">info\n        </mat-icon>\n      </span>\n    </div>\n  </ng-container>\n\n  <div *ngIf=\"operation.mode !== 'client'; else plotContainer\">\n    <button mat-raised-button color=\"accent\" type=\"submit\" [disabled]=\"!analysesForm.valid\"\n      (click)=\"startAnalysis()\">Run\n    </button>\n  </div>\n\n  <ng-template #plotContainer>\n    <button mat-raised-button color=\"accent\" [disabled]=\"!analysesForm.valid\" (click)=\"showPlots()\">Show plots\n    </button>\n\n  </ng-template>\n\n</form>","import { FileType } from '@app/shared/models/file-type';\nimport { Injectable } from '@angular/core';\n\nexport class WorkspaceResource {\n  constructor(\n    public id: string,\n    public url: string,\n    public name: string,\n    public resource_type: FileType,\n    public readable_resource_type: string,\n    public owner_email: string,\n    public is_active: boolean,\n    public is_public: boolean,\n    public status: string,\n    public workspace: string,\n    public workspace_name: string,\n    public created: Date,\n    public size: number\n  ) {}\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkspaceResourceAdapter {\n  adapt(item: any): WorkspaceResource {\n    const re = /[()]/g;\n    const created_formatted = item.created.replace(re, '');\n\n    return new WorkspaceResource(\n      item.id,\n      item.url,\n      item.name,\n      item.resource_type,\n      item.readable_resource_type,\n      item.owner_email,\n      item.is_active,\n      item.is_public,\n      item.status,\n      item.workspace,\n      item.workspace_name,\n      new Date(created_formatted),\n      item.size\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '@environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Workspace } from '@workspace-manager/models/workspace';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport {\n  WorkspaceResource,\n  WorkspaceResourceAdapter\n} from '../models/workspace-resource';\nimport { File, FileAdapter } from '@app/shared/models/file';\n\n/**\n * Workspace Detail service\n *\n * Used for operations within a current workspace\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkspaceDetailService {\n  private readonly API_URL = environment.apiUrl;\n  constructor(\n    private httpClient: HttpClient,\n    private fileAdapter: FileAdapter,\n    private wsAdapter: WorkspaceResourceAdapter\n  ) {}\n\n  /**\n   * Get the list of resources that can be potentially added to a workspace\n   *\n   */\n  getAvailableResources(): Observable<File[]> {\n    return <Observable<File[]>>(\n      this.httpClient\n        .get(`${this.API_URL}/resources/`)\n        .pipe(\n          map((data: any[]) => data.map(item => this.fileAdapter.adapt(item)))\n        )\n    );\n  }\n\n  /**\n   * Get the list of connected resources that has been already added to a workspace\n   *\n   */\n  getConnectedResources(workspaceId: string): Observable<WorkspaceResource[]> {\n    return <Observable<WorkspaceResource[]>>(\n      this.httpClient\n        .get(`${this.API_URL}/workspaces/${workspaceId}/resources/`)\n        .pipe(\n          map((data: any[]) => data.map(item => this.wsAdapter.adapt(item)))\n        )\n    );\n  }\n\n  /**\n   * Get workspace properties\n   *\n   */\n  getWorkspaceDetail(workspaceId: number | string): Observable<Workspace> {\n    return <Observable<Workspace>>(\n      this.httpClient.get(`${this.API_URL}/workspaces/${workspaceId}/`)\n    );\n  }\n\n  /**\n   * Preview workspace resource content. Display only the first 5 rows\n   *\n   */\n  getResourcePreview(resourceId: number | string): Observable<any> {\n    const params = {\n      params: new HttpParams().set('page', '1').set('page_size', '5')\n    };\n    return <Observable<any>>(\n      this.httpClient.get(\n        `${this.API_URL}/resources/${resourceId}/contents/`,\n        params\n      )\n    );\n  }\n\n  /**\n   * Get workspace resource metadata\n   *\n   */\n  getResourceMetadata(resourceId: number | string): Observable<any> {\n    return <Observable<any>>(\n      this.httpClient.get(`${this.API_URL}/resources/${resourceId}/metadata/`)\n    );\n  }\n\n  /**\n   * Get workspace metadata\n   *\n   */\n  getWorkspaceMetadata(workspaceId: number | string): Observable<any> {\n    return <Observable<any>>(\n      this.httpClient.get(`${this.API_URL}/workspaces/${workspaceId}/metadata/`)\n    );\n  }\n\n  /**\n   * Get workspace resource observations\n   *\n   */\n  getResourceMetadataObservations(\n    resourceId: number | string\n  ): Observable<any> {\n    return <Observable<any>>(\n      this.httpClient.get(\n        `${this.API_URL}/resources/${resourceId}/metadata/observations/`\n      )\n    );\n  }\n\n  /**\n   * Get all workspace observations\n   *\n   */\n  getWorkspaceMetadataObservations(\n    workspaceId: number | string\n  ): Observable<any> {\n    return <Observable<any>>(\n      this.httpClient.get(\n        `${this.API_URL}/workspaces/${workspaceId}/metadata/observations/`\n      )\n    );\n  }\n\n  /**\n   * Get workspace resource features\n   *\n   */\n  getResourceMetadataFeatures(resourceId: number | string): Observable<any> {\n    return <Observable<any>>(\n      this.httpClient.get(\n        `${this.API_URL}/resources/${resourceId}/metadata/features/`\n      )\n    );\n  }\n\n  /**\n   * Get all workspace features\n   *\n   */\n  getWorkspaceMetadataFeatures(workspaceId: number | string): Observable<any> {\n    return <Observable<any>>(\n      this.httpClient.get(\n        `${this.API_URL}/workspaces/${workspaceId}/metadata/features/`\n      )\n    );\n  }\n\n  /**\n   * Connect a file to the current workspace\n   *\n   */\n  addResourceToWorkspace(\n    resourceId: string,\n    workspaceId: string\n  ): Observable<any> {\n    return <Observable<any>>(\n      this.httpClient.post(\n        `${this.API_URL}/workspaces/${workspaceId}/resources/add/`,\n        { resource_uuid: resourceId }\n      )\n    );\n  }\n\n  /**\n   * Delete a file from the current workspace\n   *\n   */\n  deleteResourceFromWorkspace(\n    resourceId: string,\n    workspaceId: string\n  ): Observable<any> {\n    return <Observable<any>>(\n      this.httpClient.get(\n        `${this.API_URL}/workspaces/${workspaceId}/resources/${resourceId}/remove/`\n      )\n    );\n  }\n}\n","import * as d3 from 'd3';\n\nexport class Utils {\n  /**\n   * Help function to get random color.\n   */\n  public static getRandomColor() {\n    const letters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  /**\n   * Help function to get color scheme for charts\n   */\n  public static getColorScheme() {\n    const colors = [\n      '#332288',\n      '#88CCEE',\n      '#44AA99',\n      '#117733',\n      '#999933',\n      '#DDCC77',\n      '#CC6677',\n      '#882255',\n      '#AA4499',\n      '#DDDDDD'\n    ];\n    return colors;\n  }\n\n  /**\n   * Help function to calculate basic statistics for Box Plot\n   */\n  public static getBoxPlotStatistics(numbers: number[]) {\n    const q1 = d3.quantile(numbers, 0.25);\n    const q3 = d3.quantile(numbers, 0.75);\n    return {\n      q1: q1,\n      median: d3.quantile(numbers, 0.5),\n      q3: q3,\n      iqr: q3 - q1,\n      min: d3.min(numbers), // q1 - 1.5 * interQuantileRange\n      max: d3.max(numbers) // q3 + 1.5 * interQuantileRange\n    };\n  }\n\n  /*\n  *  Compares to lists of strings. Returns a boolean indicating their set equality.\n  */\n  public static stringArraysEquivalent(listA: string[], listB: string[]) {\n    let setA = new Set(listA);\n    let setB = new Set(listB);\n\n    let _difference = new Set(setA)\n    for (let elem of setB) {\n        if (_difference.has(elem)) {\n            _difference.delete(elem)\n        } else {\n            _difference.add(elem)\n        }\n    }\n    return _difference.size == 0;\n  }\n}\n"],"sourceRoot":"webpack:///"}