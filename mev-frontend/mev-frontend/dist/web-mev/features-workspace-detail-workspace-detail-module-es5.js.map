{"version":3,"sources":["webpack:///mev-frontend/node_modules/@ncstate/sat-popover/__ivy_ngcc__/fesm2015/ncstate-sat-popover.js","webpack:///src/app/features/workspace-detail/components/dialogs/add-dialog/add-dialog.component.ts","webpack:///src/app/features/workspace-detail/components/dialogs/add-dialog/add-dialog.component.html","webpack:///src/app/features/workspace-detail/components/dialogs/delete-dialog/delete-dialog.component.ts","webpack:///src/app/features/workspace-detail/components/dialogs/delete-dialog/delete-dialog.component.html","webpack:///src/app/features/workspace-detail/components/dialogs/edit-dialog/edit-dialog/edit-dialog.component.ts","webpack:///src/app/features/workspace-detail/components/dialogs/edit-dialog/edit-dialog/edit-dialog.component.html","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/add-annotation-dialog/add-annotation-dialog.component.ts","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/add-annotation-dialog/add-annotation-dialog.component.html","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/add-observation-set-dialog/add-observation-set-dialog.component.ts","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/add-observation-set-dialog/add-observation-set-dialog.component.html","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/delete-set-dialog/delete-set-dialog.component.ts","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/delete-set-dialog/delete-set-dialog.component.html","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/edit-feature-set-dialog/edit-feature-set-dialog.component.ts","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/edit-feature-set-dialog/edit-feature-set-dialog.component.html","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/view-info-dialog/view-info-dialog.component.ts","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/view-info-dialog/view-info-dialog.component.html","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/view-set-dialog/view-set-dialog.component.ts","webpack:///src/app/features/workspace-detail/components/metadata/dialogs/view-set-dialog/view-set-dialog.component.html","webpack:///src/app/features/workspace-detail/components/metadata/metadata.component.ts","webpack:///src/app/features/workspace-detail/components/metadata/metadata.component.html","webpack:///src/app/features/workspace-detail/components/workspace-detail/workspace-detail.component.ts","webpack:///src/app/features/workspace-detail/components/workspace-detail/workspace-detail.component.html","webpack:///src/app/features/workspace-detail/pipes/annotation-files.ts","webpack:///src/app/features/workspace-detail/pipes/search.ts","webpack:///src/app/features/workspace-detail/pipes/valid-files.ts","webpack:///src/app/features/workspace-detail/workspace-detail-routing.module.ts","webpack:///src/app/features/workspace-detail/workspace-detail.module.ts"],"names":["_c0","SatPopover_ng_template_0_Template","rf","ctx","_r3","SatPopover_ng_template_0_Template_div_animation_transformPopover_done_0_listener","$event","ctx_r2","_onAnimationDone","ctx_r0","_classList","_getAnimation","_c1","transformPopover","opacity","transform","VALID_SCROLL","VALID_HORIZ_ALIGN","VALID_VERT_ALIGN","getUnanchoredPopoverError","Error","getInvalidPopoverAnchorError","getInvalidPopoverError","getInvalidSatPopoverAnchorError","getInvalidHorizontalAlignError","alignment","generateGenericError","getInvalidVerticalAlignError","getInvalidScrollStrategyError","strategy","apiName","invalid","valid","map","v","join","SatPopoverAnchoringService","_overlay","_ngZone","_dir","popoverOpened","popoverClosed","_popoverOpen","_onDestroy","_destroyPopover","_notificationsSubscription","unsubscribe","_positionChangeSubscription","next","complete","popover","viewContainerRef","anchor","_popover","_viewContainerRef","_overlayRef","_anchor","nativeElement","config","getConfig","positionStrategy","setOrigin","updatePosition","closePopover","openPopover","options","_applyOpenOptions","_createOverlay","_subscribeToBackdrop","_subscribeToEscape","_subscribeToDetachments","_saveOpenedState","value","_saveClosedState","detach","updatePopoverConfig","_destroyPopoverOnceClosed","reapplyLastPosition","restoreFocus","_restoreFocusOverride","autoFocus","_autoFocusOverride","_portal","_templateRef","popoverConfig","horizontalAlign","verticalAlign","hasBackdrop","backdropClass","scrollStrategy","forceAlignment","lockAlignment","overlayConfig","_getOverlayConfig","_subscribeToPositionChanges","create","attach","dispose","isPopoverOpen","detachments","pipe","subscribe","backdropClick","backdropClicked","emit","interactiveClose","keydownEvents","event","overlayKeydown","keyCode","_open","opened","closed","_getPositionStrategy","_getScrollStrategyInstance","direction","_getDirection","position","positionChanges","change","run","_setAlignmentClasses","getHorizontalPopoverAlignment","connectionPair","overlayX","getVerticalPopoverAlignment","overlayY","scrollStrategies","block","reposition","close","noop","horizontalTarget","verticalTarget","targetPosition","getPosition","positions","flexibleConnectedTo","withFlexibleDimensions","withPush","withViewportMargin","withLockedPosition","fallbacks","_getFallbacks","push","withPositions","hTarget","vTarget","horizontalOverlapAllowed","verticalOverlapAllowed","possibleHorizontalAlignments","possibleVerticalAlignments","prioritizeAroundTarget","forEach","h","slice","length","ɵfac","SatPopoverAnchoringService_Factory","t","ɵprov","token","factory","ctorParameters","type","decorators","getHorizontalConnectionPosPair","originX","getVerticalConnectionPosPair","originY","target","targetIndex","indexOf","reordered","left","right","reverse","pop","DEFAULT_TRANSITION","SatPopoverAnchor","elementRef","val","SatPopover","SatPopoverAnchor_Factory","ɵdir","selectors","inputs","exportAs","propDecorators","args","selector","_focusTrapFactory","_anchoringService","_document","_horizontalAlign","_verticalAlign","_forceAlignment","_lockAlignment","_autoFocus","_restoreFocus","_scrollStrategy","_hasBackdrop","_interactiveClose","_openTransition","_closeTransition","afterOpen","afterClose","togglePopover","realignPopoverToAnchor","viewContainer","el","params","openTransition","closeTransition","toState","_trapFocus","_restoreFocusAndDestroyTrap","horizAlign","vertAlign","_savePreviouslyFocusedElement","_focusTrapElement","_focusTrap","focusInitialElementWhenReady","toFocus","_previouslyFocusedElement","focus","destroy","undefined","activeElement","pos","HTMLElement","_validateHorizontalAlign","repositionPopover","_validateVerticalAlign","coercedVal","_validateScrollStrategy","SatPopover_Factory","ɵcmp","viewQuery","SatPopover_Query","_t","first","xAlign","yAlign","outputs","features","ngContentSelectors","decls","vars","consts","template","SatPopover_Template","directives","styles","encapsulation","data","animation","None","animations","providers","SatPopoverHoverDirective","_satPopoverHover","_onMouseEnter","_onMouseLeave","open","SatPopoverHoverDirective_Factory","hostBindings","SatPopoverHoverDirective_HostBindings","SatPopoverHoverDirective_mouseenter_HostBindingHandler","showPopover","SatPopoverHoverDirective_mouseleave_HostBindingHandler","satPopoverHover","SatPopoverModule","ɵmod","ɵinj","SatPopoverModule_Factory","imports","ngJitMode","declarations","exports","AddDialogComponent","dialogRef","apiService","files","selectedFiles","dropdownSettings","formControl","required","workspaceId","getAvailableResources","text","selectAllText","unSelectAllText","enableSearchFilter","searchBy","lazyLoading","classes","file","addResourceToWorkspace","id","confirmAdd","onNoClick","templateUrl","styleUrls","changeDetection","OnPush","DeleteDialogComponent","service","resource","deleteResourceFromWorkspace","error","console","confirmDelete","EditDialogComponent","fileService","hasError","updateFile","stopEdit","AddAnnotationDialogComponent","formBuilder","attributes","annotationFileContent","attributeValues","selectedAttributeValues","form","group","annotation","attribute","attributeValue","primaryKey","workspaceResources","getResourceContent","selectedAnnotationFileId","response","Object","keys","values","Set","item","selectedAttribute","name","customSets","attrValue","attrSamples","filter","sample","rowname","customSet","ObservationSet","elements","color","getRandomColor","multiple","onSelectAnnonation","stopPropagation","selection","AddObservationSetDialogComponent","submitted","observationForm","observationSetName","observationSetColor","allObservationSetsDS","observationSetDS","observationSetsDisplayedColumns","observationSetsDisplayedColumnsAttributesOnly","paginator","samples","selected","observationSet","numSelected","numRows","filteredData","isAllSelected","clear","row","select","filterValue","trim","toLowerCase","controls","applyFilter","DeleteSetDialogComponent","EditFeatureSetDialogComponent","isObservationSet","customSetType","FeatureSet","selectedElements","some","selEl","confirmEdit","Default","ViewInfoDialogComponent","ViewSetDialogComponent","MetadataComponent","metadataService","storage","route","cd","dialog","displayedColumns","displayedColumnsAttributesOnly","customSetsDisplayedColumns","globalObservationSets","isWait","onDestroy","snapshot","paramMap","get","currentObsSet","JSON","parse","localStorage","getItem","generateMetadataColumns","getCustomSets","customSetDS","storageSubscription","watch","generateObservationSetsVisualization","markForCheck","afterClosed","newCustomSets","newCustomSet","addCustomSet","getWorkspaceMetadataObservations","metadata","observation_set","globalObservationSetsDS","obsSetsWithAttr","set","hasOwnProperty","newObservationSet","visTable","customObservationSets","getCustomObservationSets","visObsDisplayedColumns","visObsDisplayedColumnsSetsOnly","getGlobalObservationSets","elem","sampleName","e","visObservationSetDS","setId","result","deleteCustomSet","updatedObservationSet","updateCustomSet","metadataObsDisplayedColumns","metadataObsDisplayedColumnsAttributesOnly","subject","asObservable","viewCustomSetInfo","onCreateObservationSet","onChooseAnnotation","WorkspaceDetailComponent","loadData","getConnectedResources","workspaceResourcesDS","sort","workspace$","getWorkspaceDetail","log","refresh","resourceId","getResourcePreview","previewData","results","minN","Math","min","slicedData","columns","rows","rowValues","elemValues","col","setTimeout","resource_type","selectedTabIndex","clickedIndex","index","executedOperationId","execOperationId","goToAnalysesTab","onTabChanged","AnnotationFilesPipe","isArray","Array","FilterPipe","resources","find","search","entries","obj","key","includes","String","ValidFilesPipe","workspace","routes","path","component","pathMatch","WorkspaceDetailRoutingModule","forChild","WorkspaceDetailModule"],"mappings":"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","file":"features-workspace-detail-workspace-detail-module-es5.js","sourcesContent":["import { ElementRef, Injectable, NgZone, Optional, Directive, ViewContainerRef, Input, EventEmitter, Component, ViewEncapsulation, Inject, Output, ViewChild, TemplateRef, HostListener, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { OverlayConfig, ConnectionPositionPair, Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { FocusTrapFactory, A11yModule } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { Subject, of } from 'rxjs';\nimport { take, takeUntil, tap, filter, switchMap, delay } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"focusTrapElement\"];\nfunction SatPopover_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵlistener(\"@transformPopover.done\", function SatPopover_ng_template_0_Template_div_animation_transformPopover_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onAnimationDone($event); });\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r0._classList)(\"@transformPopover\", ctx_r0._getAnimation());\n} }\nconst _c1 = [\"*\"];\nconst transformPopover = trigger('transformPopover', [\n    transition(':enter', [\n        style({ opacity: 0, transform: 'scale(0.3)' }),\n        animate('{{openTransition}}', style({ opacity: 1, transform: 'scale(1)' }))\n    ]),\n    transition(':leave', [\n        animate('{{closeTransition}}', style({ opacity: 0, transform: 'scale(0.5)' }))\n    ])\n]);\n\nconst VALID_SCROLL = [\n    'noop',\n    'block',\n    'reposition',\n    'close'\n];\nconst VALID_HORIZ_ALIGN = [\n    'before',\n    'start',\n    'center',\n    'end',\n    'after'\n];\nconst VALID_VERT_ALIGN = [\n    'above',\n    'start',\n    'center',\n    'end',\n    'below'\n];\n\nfunction getUnanchoredPopoverError() {\n    return Error('SatPopover does not have an anchor.');\n}\nfunction getInvalidPopoverAnchorError() {\n    return Error('SatPopover#anchor must be an instance of SatPopoverAnchor, ElementRef, or HTMLElement.');\n}\nfunction getInvalidPopoverError() {\n    return Error('SatPopoverAnchor#satPopoverAnchor must be an instance of SatPopover.');\n}\nfunction getInvalidSatPopoverAnchorError() {\n    return Error(`SatPopoverAnchor must be associated with a ` +\n        `SatPopover component. ` +\n        `Examples: <sat-popover [anchor]=\"satPopoverAnchorTemplateRef\"> or ` +\n        `<button satPopoverAnchor [satPopoverAnchor]=\"satPopoverTemplateRef\">`);\n}\nfunction getInvalidHorizontalAlignError(alignment) {\n    return Error(generateGenericError('horizontalAlign/xAlign', alignment, VALID_HORIZ_ALIGN));\n}\nfunction getInvalidVerticalAlignError(alignment) {\n    return Error(generateGenericError('verticalAlign/yAlign', alignment, VALID_VERT_ALIGN));\n}\nfunction getInvalidScrollStrategyError(strategy) {\n    return Error(generateGenericError('scrollStrategy', strategy, VALID_SCROLL));\n}\nfunction generateGenericError(apiName, invalid, valid) {\n    return `Invalid ${apiName}: '${invalid}'. Valid options are ${valid.map(v => `'${v}'`).join(', ')}.`;\n}\n\nclass SatPopoverAnchoringService {\n    constructor(_overlay, _ngZone, _dir) {\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        /** Emits when the popover is opened. */\n        this.popoverOpened = new Subject();\n        /** Emits when the popover is closed. */\n        this.popoverClosed = new Subject();\n        /** Whether the popover is presently open. */\n        this._popoverOpen = false;\n        /** Emits when the service is destroyed. */\n        this._onDestroy = new Subject();\n    }\n    ngOnDestroy() {\n        // Destroy popover before terminating subscriptions so that any resulting\n        // detachments update 'closed state'\n        this._destroyPopover();\n        // Terminate subscriptions\n        if (this._notificationsSubscription) {\n            this._notificationsSubscription.unsubscribe();\n        }\n        if (this._positionChangeSubscription) {\n            this._positionChangeSubscription.unsubscribe();\n        }\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        this.popoverOpened.complete();\n        this.popoverClosed.complete();\n    }\n    /** Anchor a popover instance to a view and connection element. */\n    anchor(popover, viewContainerRef, anchor) {\n        // If we're just changing the anchor element and the overlayRef already exists,\n        // simply update the existing _overlayRef's anchor.\n        if (this._popover === popover &&\n            this._viewContainerRef === viewContainerRef &&\n            this._overlayRef) {\n            this._anchor = anchor instanceof ElementRef\n                ? anchor.nativeElement\n                : anchor;\n            const config = this._overlayRef.getConfig();\n            const strategy = config.positionStrategy;\n            strategy.setOrigin(this._anchor);\n            this._overlayRef.updatePosition();\n            return;\n        }\n        // Destroy any previous popovers\n        this._destroyPopover();\n        // Assign local refs\n        this._popover = popover;\n        this._viewContainerRef = viewContainerRef;\n        this._anchor = anchor instanceof ElementRef\n            ? anchor.nativeElement\n            : anchor;\n    }\n    /** Gets whether the popover is presently open. */\n    isPopoverOpen() {\n        return this._popoverOpen;\n    }\n    /** Toggles the popover between the open and closed states. */\n    togglePopover() {\n        return this._popoverOpen ? this.closePopover() : this.openPopover();\n    }\n    /** Opens the popover. */\n    openPopover(options = {}) {\n        if (!this._popoverOpen) {\n            this._applyOpenOptions(options);\n            this._createOverlay();\n            this._subscribeToBackdrop();\n            this._subscribeToEscape();\n            this._subscribeToDetachments();\n            this._saveOpenedState();\n        }\n    }\n    /** Closes the popover. */\n    closePopover(value) {\n        if (this._overlayRef) {\n            this._saveClosedState(value);\n            this._overlayRef.detach();\n        }\n    }\n    /** TODO: implement when the overlay's position can be dynamically changed */\n    repositionPopover() {\n        this.updatePopoverConfig();\n    }\n    /** TODO: when the overlay's position can be dynamically changed, do not destroy */\n    updatePopoverConfig() {\n        this._destroyPopoverOnceClosed();\n    }\n    /** Realign the popover to the anchor. */\n    realignPopoverToAnchor() {\n        if (this._overlayRef) {\n            const config = this._overlayRef.getConfig();\n            const strategy = config.positionStrategy;\n            strategy.reapplyLastPosition();\n        }\n    }\n    /** Get a reference to the anchor element. */\n    getAnchorElement() {\n        return this._anchor;\n    }\n    /** Apply behavior properties on the popover based on the open options. */\n    _applyOpenOptions(options) {\n        // Only override restoreFocus as `false` if the option is explicitly `false`\n        const restoreFocus = options.restoreFocus !== false;\n        this._popover._restoreFocusOverride = restoreFocus;\n        // Only override autoFocus as `false` if the option is explicitly `false`\n        const autoFocus = options.autoFocus !== false;\n        this._popover._autoFocusOverride = autoFocus;\n    }\n    /** Create an overlay to be attached to the portal. */\n    _createOverlay() {\n        // Create overlay if it doesn't yet exist\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this._popover._templateRef, this._viewContainerRef);\n            const popoverConfig = {\n                horizontalAlign: this._popover.horizontalAlign,\n                verticalAlign: this._popover.verticalAlign,\n                hasBackdrop: this._popover.hasBackdrop,\n                backdropClass: this._popover.backdropClass,\n                scrollStrategy: this._popover.scrollStrategy,\n                forceAlignment: this._popover.forceAlignment,\n                lockAlignment: this._popover.lockAlignment,\n            };\n            const overlayConfig = this._getOverlayConfig(popoverConfig, this._anchor);\n            this._subscribeToPositionChanges(overlayConfig.positionStrategy);\n            this._overlayRef = this._overlay.create(overlayConfig);\n        }\n        // Actually open the popover\n        this._overlayRef.attach(this._portal);\n        return this._overlayRef;\n    }\n    /** Removes the popover from the DOM. Does NOT update open state. */\n    _destroyPopover() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    /**\n     * Destroys the popover immediately if it is closed, or waits until it\n     * has been closed to destroy it.\n     */\n    _destroyPopoverOnceClosed() {\n        if (this.isPopoverOpen() && this._overlayRef) {\n            this._overlayRef.detachments().pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => this._destroyPopover());\n        }\n        else {\n            this._destroyPopover();\n        }\n    }\n    /** Close popover when backdrop is clicked. */\n    _subscribeToBackdrop() {\n        this._overlayRef\n            .backdropClick()\n            .pipe(tap(() => this._popover.backdropClicked.emit()), filter(() => this._popover.interactiveClose), takeUntil(this.popoverClosed), takeUntil(this._onDestroy))\n            .subscribe(() => this.closePopover());\n    }\n    /** Close popover when escape keydown event occurs. */\n    _subscribeToEscape() {\n        this._overlayRef\n            .keydownEvents()\n            .pipe(tap(event => this._popover.overlayKeydown.emit(event)), filter(event => event.keyCode === ESCAPE), filter(() => this._popover.interactiveClose), takeUntil(this.popoverClosed), takeUntil(this._onDestroy))\n            .subscribe(() => this.closePopover());\n    }\n    /** Set state back to closed when detached. */\n    _subscribeToDetachments() {\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => this._saveClosedState());\n    }\n    /** Save the opened state of the popover and emit. */\n    _saveOpenedState() {\n        if (!this._popoverOpen) {\n            this._popover._open = this._popoverOpen = true;\n            this.popoverOpened.next();\n            this._popover.opened.emit();\n        }\n    }\n    /** Save the closed state of the popover and emit. */\n    _saveClosedState(value) {\n        if (this._popoverOpen) {\n            this._popover._open = this._popoverOpen = false;\n            this.popoverClosed.next(value);\n            this._popover.closed.emit(value);\n        }\n    }\n    /** Gets the text direction of the containing app. */\n    _getDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Create and return a config for creating the overlay. */\n    _getOverlayConfig(config, anchor) {\n        return new OverlayConfig({\n            positionStrategy: this._getPositionStrategy(config.horizontalAlign, config.verticalAlign, config.forceAlignment, config.lockAlignment, anchor),\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: config.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._getScrollStrategyInstance(config.scrollStrategy),\n            direction: this._getDirection(),\n        });\n    }\n    /**\n     * Listen to changes in the position of the overlay and set the correct alignment classes,\n     * ensuring that the animation origin is correct, even with a fallback position.\n     */\n    _subscribeToPositionChanges(position) {\n        if (this._positionChangeSubscription) {\n            this._positionChangeSubscription.unsubscribe();\n        }\n        this._positionChangeSubscription = position.positionChanges\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(change => {\n            // Position changes may occur outside the Angular zone\n            this._ngZone.run(() => {\n                this._popover._setAlignmentClasses(getHorizontalPopoverAlignment(change.connectionPair.overlayX), getVerticalPopoverAlignment(change.connectionPair.overlayY));\n            });\n        });\n    }\n    /** Map a scroll strategy string type to an instance of a scroll strategy. */\n    _getScrollStrategyInstance(strategy) {\n        switch (strategy) {\n            case 'block':\n                return this._overlay.scrollStrategies.block();\n            case 'reposition':\n                return this._overlay.scrollStrategies.reposition();\n            case 'close':\n                return this._overlay.scrollStrategies.close();\n            case 'noop':\n            default:\n                return this._overlay.scrollStrategies.noop();\n        }\n    }\n    /** Create and return a position strategy based on config provided to the component instance. */\n    _getPositionStrategy(horizontalTarget, verticalTarget, forceAlignment, lockAlignment, anchor) {\n        // Attach the overlay at the preferred position\n        const targetPosition = getPosition(horizontalTarget, verticalTarget);\n        const positions = [targetPosition];\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(anchor)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0)\n            .withLockedPosition(lockAlignment);\n        // Unless the alignment is forced, add fallbacks based on the preferred positions\n        if (!forceAlignment) {\n            const fallbacks = this._getFallbacks(horizontalTarget, verticalTarget);\n            positions.push(...fallbacks);\n        }\n        return strategy.withPositions(positions);\n    }\n    /** Get fallback positions based around target alignments. */\n    _getFallbacks(hTarget, vTarget) {\n        // Determine if the target alignments overlap the anchor\n        const horizontalOverlapAllowed = hTarget !== 'before' && hTarget !== 'after';\n        const verticalOverlapAllowed = vTarget !== 'above' && vTarget !== 'below';\n        // If a target alignment doesn't cover the anchor, don't let any of the fallback alignments\n        // cover the anchor\n        const possibleHorizontalAlignments = horizontalOverlapAllowed ?\n            ['before', 'start', 'center', 'end', 'after'] :\n            ['before', 'after'];\n        const possibleVerticalAlignments = verticalOverlapAllowed ?\n            ['above', 'start', 'center', 'end', 'below'] :\n            ['above', 'below'];\n        // Create fallbacks for each allowed prioritized fallback alignment combo\n        const fallbacks = [];\n        prioritizeAroundTarget(hTarget, possibleHorizontalAlignments).forEach(h => {\n            prioritizeAroundTarget(vTarget, possibleVerticalAlignments).forEach(v => {\n                fallbacks.push(getPosition(h, v));\n            });\n        });\n        // Remove the first item since it will be the target alignment and isn't considered a fallback\n        return fallbacks.slice(1, fallbacks.length);\n    }\n}\nSatPopoverAnchoringService.ɵfac = function SatPopoverAnchoringService_Factory(t) { return new (t || SatPopoverAnchoringService)(ɵngcc0.ɵɵinject(ɵngcc1.Overlay), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc2.Directionality, 8)); };\nSatPopoverAnchoringService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: SatPopoverAnchoringService, factory: SatPopoverAnchoringService.ɵfac });\nSatPopoverAnchoringService.ctorParameters = () => [\n    { type: Overlay },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SatPopoverAnchoringService, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\n/** Helper function to get a cdk position pair from SatPopover alignments. */\nfunction getPosition(h, v) {\n    const { originX, overlayX } = getHorizontalConnectionPosPair(h);\n    const { originY, overlayY } = getVerticalConnectionPosPair(v);\n    return new ConnectionPositionPair({ originX, originY }, { overlayX, overlayY });\n}\n/** Helper function to convert an overlay connection position to equivalent popover alignment. */\nfunction getHorizontalPopoverAlignment(h) {\n    if (h === 'start') {\n        return 'after';\n    }\n    if (h === 'end') {\n        return 'before';\n    }\n    return 'center';\n}\n/** Helper function to convert an overlay connection position to equivalent popover alignment. */\nfunction getVerticalPopoverAlignment(v) {\n    if (v === 'top') {\n        return 'below';\n    }\n    if (v === 'bottom') {\n        return 'above';\n    }\n    return 'center';\n}\n/** Helper function to convert alignment to origin/overlay position pair. */\nfunction getHorizontalConnectionPosPair(h) {\n    switch (h) {\n        case 'before':\n            return { originX: 'start', overlayX: 'end' };\n        case 'start':\n            return { originX: 'start', overlayX: 'start' };\n        case 'end':\n            return { originX: 'end', overlayX: 'end' };\n        case 'after':\n            return { originX: 'end', overlayX: 'start' };\n        default:\n            return { originX: 'center', overlayX: 'center' };\n    }\n}\n/** Helper function to convert alignment to origin/overlay position pair. */\nfunction getVerticalConnectionPosPair(v) {\n    switch (v) {\n        case 'above':\n            return { originY: 'top', overlayY: 'bottom' };\n        case 'start':\n            return { originY: 'top', overlayY: 'top' };\n        case 'end':\n            return { originY: 'bottom', overlayY: 'bottom' };\n        case 'below':\n            return { originY: 'bottom', overlayY: 'top' };\n        default:\n            return { originY: 'center', overlayY: 'center' };\n    }\n}\n/**\n * Helper function that takes an ordered array options and returns a reorderded\n * array around the target item. e.g.:\n *\n * target: 3; options: [1, 2, 3, 4, 5, 6, 7];\n *\n * return: [3, 4, 2, 5, 1, 6, 7]\n */\nfunction prioritizeAroundTarget(target, options) {\n    const targetIndex = options.indexOf(target);\n    // Set the first item to be the target\n    const reordered = [target];\n    // Make left and right stacks where the highest priority item is last\n    const left = options.slice(0, targetIndex);\n    const right = options.slice(targetIndex + 1, options.length).reverse();\n    // Alternate between stacks until one is empty\n    while (left.length && right.length) {\n        reordered.push(right.pop());\n        reordered.push(left.pop());\n    }\n    // Flush out right side\n    while (right.length) {\n        reordered.push(right.pop());\n    }\n    // Flush out left side\n    while (left.length) {\n        reordered.push(left.pop());\n    }\n    return reordered;\n}\n\n// See http://cubic-bezier.com/#.25,.8,.25,1 for reference.\nconst DEFAULT_TRANSITION = '200ms cubic-bezier(0.25, 0.8, 0.25, 1)';\nclass SatPopoverAnchor {\n    constructor(elementRef, viewContainerRef) {\n        this.elementRef = elementRef;\n        this.viewContainerRef = viewContainerRef;\n    }\n    get popover() {\n        return this._popover;\n    }\n    set popover(val) {\n        if (val instanceof SatPopover) {\n            val.anchor = this;\n        }\n        else {\n            // when a directive is added with no arguments,\n            // angular assigns `''` as the argument\n            if (val !== '') {\n                throw getInvalidPopoverError();\n            }\n        }\n    }\n    ngAfterViewInit() {\n        if (!this.popover) {\n            throw getInvalidSatPopoverAnchorError();\n        }\n    }\n}\nSatPopoverAnchor.ɵfac = function SatPopoverAnchor_Factory(t) { return new (t || SatPopoverAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nSatPopoverAnchor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SatPopoverAnchor, selectors: [[\"\", \"satPopoverAnchor\", \"\"]], inputs: { popover: [\"satPopoverAnchor\", \"popover\"] }, exportAs: [\"satPopoverAnchor\"] });\nSatPopoverAnchor.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ViewContainerRef }\n];\nSatPopoverAnchor.propDecorators = {\n    popover: [{ type: Input, args: ['satPopoverAnchor',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SatPopoverAnchor, [{\n        type: Directive,\n        args: [{\n                selector: '[satPopoverAnchor]',\n                exportAs: 'satPopoverAnchor'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }]; }, { popover: [{\n            type: Input,\n            args: ['satPopoverAnchor']\n        }] }); })();\nclass SatPopover {\n    constructor(_focusTrapFactory, _anchoringService, _viewContainerRef, _document) {\n        this._focusTrapFactory = _focusTrapFactory;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._horizontalAlign = 'center';\n        this._verticalAlign = 'center';\n        this._forceAlignment = false;\n        this._lockAlignment = false;\n        this._autoFocus = true;\n        this._autoFocusOverride = true;\n        this._restoreFocus = true;\n        this._restoreFocusOverride = true;\n        this._scrollStrategy = 'reposition';\n        this._hasBackdrop = false;\n        this._interactiveClose = true;\n        this._openTransition = DEFAULT_TRANSITION;\n        this._closeTransition = DEFAULT_TRANSITION;\n        /** Optional backdrop class. */\n        this.backdropClass = '';\n        /** Emits when the popover is opened. */\n        this.opened = new EventEmitter();\n        /** Emits when the popover is closed. */\n        this.closed = new EventEmitter();\n        /** Emits when the popover has finished opening. */\n        this.afterOpen = new EventEmitter();\n        /** Emits when the popover has finished closing. */\n        this.afterClose = new EventEmitter();\n        /** Emits when the backdrop is clicked. */\n        this.backdropClicked = new EventEmitter();\n        /** Emits when a keydown event is targeted to this popover's overlay. */\n        this.overlayKeydown = new EventEmitter();\n        /** Classes to be added to the popover for setting the correct transform origin. */\n        this._classList = {};\n        /** Whether the popover is presently open. */\n        this._open = false;\n        // `@internal` stripping doesn't seem to work if the property is\n        // declared inside the constructor\n        this._anchoringService = _anchoringService;\n    }\n    /** Anchor element. */\n    get anchor() {\n        return this._anchor;\n    }\n    set anchor(val) {\n        if (val instanceof SatPopoverAnchor) {\n            val._popover = this;\n            this._anchoringService.anchor(this, val.viewContainerRef, val.elementRef);\n            this._anchor = val;\n        }\n        else if (val instanceof ElementRef || val instanceof HTMLElement) {\n            this._anchoringService.anchor(this, this._viewContainerRef, val);\n            this._anchor = val;\n        }\n        else if (val) {\n            throw getInvalidPopoverAnchorError();\n        }\n    }\n    /** Alignment of the popover on the horizontal axis. */\n    get horizontalAlign() {\n        return this._horizontalAlign;\n    }\n    set horizontalAlign(val) {\n        this._validateHorizontalAlign(val);\n        if (this._horizontalAlign !== val) {\n            this._horizontalAlign = val;\n            this._anchoringService.repositionPopover();\n        }\n    }\n    /** Alignment of the popover on the x axis. Alias for `horizontalAlign`. */\n    get xAlign() {\n        return this.horizontalAlign;\n    }\n    set xAlign(val) {\n        this.horizontalAlign = val;\n    }\n    /** Alignment of the popover on the vertical axis. */\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n    set verticalAlign(val) {\n        this._validateVerticalAlign(val);\n        if (this._verticalAlign !== val) {\n            this._verticalAlign = val;\n            this._anchoringService.repositionPopover();\n        }\n    }\n    /** Alignment of the popover on the y axis. Alias for `verticalAlign`. */\n    get yAlign() {\n        return this.verticalAlign;\n    }\n    set yAlign(val) {\n        this.verticalAlign = val;\n    }\n    /** Whether the popover always opens with the specified alignment. */\n    get forceAlignment() {\n        return this._forceAlignment;\n    }\n    set forceAlignment(val) {\n        const coercedVal = coerceBooleanProperty(val);\n        if (this._forceAlignment !== coercedVal) {\n            this._forceAlignment = coercedVal;\n            this._anchoringService.repositionPopover();\n        }\n    }\n    /**\n     * Whether the popover's alignment is locked after opening. This prevents the popover\n     * from changing its alignement when scrolling or changing the size of the viewport.\n     */\n    get lockAlignment() {\n        return this._lockAlignment;\n    }\n    set lockAlignment(val) {\n        const coercedVal = coerceBooleanProperty(val);\n        if (this._lockAlignment !== coercedVal) {\n            this._lockAlignment = coerceBooleanProperty(val);\n            this._anchoringService.repositionPopover();\n        }\n    }\n    /** Whether the first focusable element should be focused on open. */\n    get autoFocus() {\n        return this._autoFocus && this._autoFocusOverride;\n    }\n    set autoFocus(val) {\n        this._autoFocus = coerceBooleanProperty(val);\n    }\n    /** Whether the popover should return focus to the previously focused element after closing. */\n    get restoreFocus() {\n        return this._restoreFocus && this._restoreFocusOverride;\n    }\n    set restoreFocus(val) {\n        this._restoreFocus = coerceBooleanProperty(val);\n    }\n    /** How the popover should handle scrolling. */\n    get scrollStrategy() {\n        return this._scrollStrategy;\n    }\n    set scrollStrategy(val) {\n        this._validateScrollStrategy(val);\n        if (this._scrollStrategy !== val) {\n            this._scrollStrategy = val;\n            this._anchoringService.updatePopoverConfig();\n        }\n    }\n    /** Whether the popover should have a backdrop (includes closing on click). */\n    get hasBackdrop() {\n        return this._hasBackdrop;\n    }\n    set hasBackdrop(val) {\n        this._hasBackdrop = coerceBooleanProperty(val);\n    }\n    /** Whether the popover should close when the user clicks the backdrop or presses ESC. */\n    get interactiveClose() {\n        return this._interactiveClose;\n    }\n    set interactiveClose(val) {\n        this._interactiveClose = coerceBooleanProperty(val);\n    }\n    /** Custom transition to use while opening. */\n    get openTransition() {\n        return this._openTransition;\n    }\n    set openTransition(val) {\n        if (val) {\n            this._openTransition = val;\n        }\n    }\n    /** Custom transition to use while closing. */\n    get closeTransition() {\n        return this._closeTransition;\n    }\n    set closeTransition(val) {\n        if (val) {\n            this._closeTransition = val;\n        }\n    }\n    ngOnInit() {\n        this._setAlignmentClasses();\n    }\n    /** Open this popover. */\n    open(options = {}) {\n        if (this._anchor) {\n            this._anchoringService.openPopover(options);\n            return;\n        }\n        throw getUnanchoredPopoverError();\n    }\n    /** Close this popover. */\n    close(value) {\n        this._anchoringService.closePopover(value);\n    }\n    /** Toggle this popover open or closed. */\n    toggle() {\n        this._anchoringService.togglePopover();\n    }\n    /** Realign the popover to the anchor. */\n    realign() {\n        this._anchoringService.realignPopoverToAnchor();\n    }\n    /** Gets whether the popover is presently open. */\n    isOpen() {\n        return this._open;\n    }\n    /** Allows programmatically setting a custom anchor. */\n    setCustomAnchor(viewContainer, el) {\n        this._anchor = el;\n        this._anchoringService.anchor(this, viewContainer, el);\n    }\n    /** Gets an animation config with customized (or default) transition values. */\n    _getAnimation() {\n        return {\n            value: 'visible',\n            params: { openTransition: this.openTransition, closeTransition: this.closeTransition }\n        };\n    }\n    /** Callback for when the popover is finished animating in or out. */\n    _onAnimationDone(event) {\n        if (event.toState === 'visible') {\n            this._trapFocus();\n            this.afterOpen.emit();\n        }\n        else if (event.toState === 'void') {\n            this._restoreFocusAndDestroyTrap();\n            this.afterClose.emit();\n        }\n    }\n    /** Apply alignment classes based on alignment inputs. */\n    _setAlignmentClasses(horizAlign = this.horizontalAlign, vertAlign = this.verticalAlign) {\n        this._classList['sat-popover-before'] = horizAlign === 'before' || horizAlign === 'end';\n        this._classList['sat-popover-after'] = horizAlign === 'after' || horizAlign === 'start';\n        this._classList['sat-popover-above'] = vertAlign === 'above' || vertAlign === 'end';\n        this._classList['sat-popover-below'] = vertAlign === 'below' || vertAlign === 'start';\n        this._classList['sat-popover-center'] = horizAlign === 'center' || vertAlign === 'center';\n    }\n    /** Move the focus inside the focus trap and remember where to return later. */\n    _trapFocus() {\n        this._savePreviouslyFocusedElement();\n        // There won't be a focus trap element if the close animation starts before open finishes\n        if (!this._focusTrapElement) {\n            return;\n        }\n        if (!this._focusTrap && this._focusTrapElement) {\n            this._focusTrap = this._focusTrapFactory.create(this._focusTrapElement.nativeElement);\n        }\n        if (this.autoFocus) {\n            this._focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    /** Restore focus to the element focused before the popover opened. Also destroy trap. */\n    _restoreFocusAndDestroyTrap() {\n        const toFocus = this._previouslyFocusedElement;\n        // Must check active element is focusable for IE sake\n        if (toFocus && 'focus' in toFocus && this.restoreFocus) {\n            this._previouslyFocusedElement.focus();\n        }\n        this._previouslyFocusedElement = null;\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n            this._focusTrap = undefined;\n        }\n    }\n    /** Save a reference to the element focused before the popover was opened. */\n    _savePreviouslyFocusedElement() {\n        if (this._document) {\n            this._previouslyFocusedElement = this._document.activeElement;\n        }\n    }\n    /** Throws an error if the alignment is not a valid horizontalAlign. */\n    _validateHorizontalAlign(pos) {\n        if (VALID_HORIZ_ALIGN.indexOf(pos) === -1) {\n            throw getInvalidHorizontalAlignError(pos);\n        }\n    }\n    /** Throws an error if the alignment is not a valid verticalAlign. */\n    _validateVerticalAlign(pos) {\n        if (VALID_VERT_ALIGN.indexOf(pos) === -1) {\n            throw getInvalidVerticalAlignError(pos);\n        }\n    }\n    /** Throws an error if the scroll strategy is not a valid strategy. */\n    _validateScrollStrategy(strategy) {\n        if (VALID_SCROLL.indexOf(strategy) === -1) {\n            throw getInvalidScrollStrategyError(strategy);\n        }\n    }\n}\nSatPopover.ɵfac = function SatPopover_Factory(t) { return new (t || SatPopover)(ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(SatPopoverAnchoringService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nSatPopover.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SatPopover, selectors: [[\"sat-popover\"]], viewQuery: function SatPopover_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._templateRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._focusTrapElement = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", anchor: \"anchor\", horizontalAlign: \"horizontalAlign\", xAlign: \"xAlign\", verticalAlign: \"verticalAlign\", yAlign: \"yAlign\", forceAlignment: \"forceAlignment\", lockAlignment: \"lockAlignment\", autoFocus: \"autoFocus\", restoreFocus: \"restoreFocus\", scrollStrategy: \"scrollStrategy\", hasBackdrop: \"hasBackdrop\", interactiveClose: \"interactiveClose\", openTransition: \"openTransition\", closeTransition: \"closeTransition\" }, outputs: { opened: \"opened\", closed: \"closed\", afterOpen: \"afterOpen\", afterClose: \"afterClose\", backdropClicked: \"backdropClicked\", overlayKeydown: \"overlayKeydown\" }, features: [ɵngcc0.ɵɵProvidersFeature([SatPopoverAnchoringService])], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[1, \"sat-popover-container\", 3, \"ngClass\"], [\"focusTrapElement\", \"\"]], template: function SatPopover_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, SatPopover_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc4.NgClass], styles: [\".cdk-global-overlay-wrapper,.cdk-overlay-container{height:100%;left:0;pointer-events:none;top:0;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper,.cdk-overlay-pane{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{box-sizing:border-box;max-height:100%;max-width:100%;pointer-events:auto}.cdk-overlay-backdrop{-webkit-tap-highlight-color:transparent;bottom:0;left:0;opacity:0;pointer-events:auto;position:absolute;right:0;top:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1);z-index:1000}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{display:flex;flex-direction:column;min-height:1px;min-width:1px;position:absolute;z-index:1000}.cdk-global-scrollblock{overflow-y:scroll;position:fixed;width:100%}.sat-popover-container.sat-popover-before.sat-popover-above{transform-origin:right bottom}[dir=rtl] .sat-popover-container.sat-popover-before.sat-popover-above{transform-origin:left bottom}.sat-popover-container.sat-popover-before.sat-popover-center{transform-origin:right center}[dir=rtl] .sat-popover-container.sat-popover-before.sat-popover-center{transform-origin:left center}.sat-popover-container.sat-popover-before.sat-popover-below{transform-origin:right top}[dir=rtl] .sat-popover-container.sat-popover-before.sat-popover-below{transform-origin:left top}.sat-popover-container.sat-popover-center.sat-popover-above{transform-origin:center bottom}.sat-popover-container.sat-popover-center.sat-popover-below{transform-origin:center top}.sat-popover-container.sat-popover-after.sat-popover-above{transform-origin:left bottom}[dir=rtl] .sat-popover-container.sat-popover-after.sat-popover-above{transform-origin:right bottom}.sat-popover-container.sat-popover-after.sat-popover-center{transform-origin:left center}[dir=rtl] .sat-popover-container.sat-popover-after.sat-popover-center{transform-origin:right center}.sat-popover-container.sat-popover-after.sat-popover-below{transform-origin:left top}[dir=rtl] .sat-popover-container.sat-popover-after.sat-popover-below{transform-origin:right top}\"], encapsulation: 2, data: { animation: [transformPopover] } });\nSatPopover.ctorParameters = () => [\n    { type: FocusTrapFactory },\n    { type: SatPopoverAnchoringService },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nSatPopover.propDecorators = {\n    anchor: [{ type: Input }],\n    horizontalAlign: [{ type: Input }],\n    xAlign: [{ type: Input }],\n    verticalAlign: [{ type: Input }],\n    yAlign: [{ type: Input }],\n    forceAlignment: [{ type: Input }],\n    lockAlignment: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    restoreFocus: [{ type: Input }],\n    scrollStrategy: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    interactiveClose: [{ type: Input }],\n    openTransition: [{ type: Input }],\n    closeTransition: [{ type: Input }],\n    backdropClass: [{ type: Input }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    afterOpen: [{ type: Output }],\n    afterClose: [{ type: Output }],\n    backdropClicked: [{ type: Output }],\n    overlayKeydown: [{ type: Output }],\n    _templateRef: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    _focusTrapElement: [{ type: ViewChild, args: ['focusTrapElement',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SatPopover, [{\n        type: Component,\n        args: [{\n                selector: 'sat-popover',\n                encapsulation: ViewEncapsulation.None,\n                animations: [transformPopover],\n                template: \"<ng-template>\\n  <div class=\\\"sat-popover-container\\\"\\n      #focusTrapElement\\n      [ngClass]=\\\"_classList\\\"\\n      [@transformPopover]=\\\"_getAnimation()\\\"\\n      (@transformPopover.done)=\\\"_onAnimationDone($event)\\\">\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                providers: [SatPopoverAnchoringService],\n                styles: [\".cdk-global-overlay-wrapper,.cdk-overlay-container{height:100%;left:0;pointer-events:none;top:0;width:100%}.cdk-overlay-container{position:fixed;z-index:1000}.cdk-overlay-container:empty{display:none}.cdk-global-overlay-wrapper,.cdk-overlay-pane{display:flex;position:absolute;z-index:1000}.cdk-overlay-pane{box-sizing:border-box;max-height:100%;max-width:100%;pointer-events:auto}.cdk-overlay-backdrop{-webkit-tap-highlight-color:transparent;bottom:0;left:0;opacity:0;pointer-events:auto;position:absolute;right:0;top:0;transition:opacity .4s cubic-bezier(.25,.8,.25,1);z-index:1000}.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}.cdk-overlay-connected-position-bounding-box{display:flex;flex-direction:column;min-height:1px;min-width:1px;position:absolute;z-index:1000}.cdk-global-scrollblock{overflow-y:scroll;position:fixed;width:100%}.sat-popover-container.sat-popover-before.sat-popover-above{transform-origin:right bottom}[dir=rtl] .sat-popover-container.sat-popover-before.sat-popover-above{transform-origin:left bottom}.sat-popover-container.sat-popover-before.sat-popover-center{transform-origin:right center}[dir=rtl] .sat-popover-container.sat-popover-before.sat-popover-center{transform-origin:left center}.sat-popover-container.sat-popover-before.sat-popover-below{transform-origin:right top}[dir=rtl] .sat-popover-container.sat-popover-before.sat-popover-below{transform-origin:left top}.sat-popover-container.sat-popover-center.sat-popover-above{transform-origin:center bottom}.sat-popover-container.sat-popover-center.sat-popover-below{transform-origin:center top}.sat-popover-container.sat-popover-after.sat-popover-above{transform-origin:left bottom}[dir=rtl] .sat-popover-container.sat-popover-after.sat-popover-above{transform-origin:right bottom}.sat-popover-container.sat-popover-after.sat-popover-center{transform-origin:left center}[dir=rtl] .sat-popover-container.sat-popover-after.sat-popover-center{transform-origin:right center}.sat-popover-container.sat-popover-after.sat-popover-below{transform-origin:left top}[dir=rtl] .sat-popover-container.sat-popover-after.sat-popover-below{transform-origin:right top}\"]\n            }]\n    }], function () { return [{ type: ɵngcc3.FocusTrapFactory }, { type: SatPopoverAnchoringService }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], afterOpen: [{\n            type: Output\n        }], afterClose: [{\n            type: Output\n        }], backdropClicked: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], anchor: [{\n            type: Input\n        }], horizontalAlign: [{\n            type: Input\n        }], xAlign: [{\n            type: Input\n        }], verticalAlign: [{\n            type: Input\n        }], yAlign: [{\n            type: Input\n        }], forceAlignment: [{\n            type: Input\n        }], lockAlignment: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], restoreFocus: [{\n            type: Input\n        }], scrollStrategy: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], interactiveClose: [{\n            type: Input\n        }], openTransition: [{\n            type: Input\n        }], closeTransition: [{\n            type: Input\n        }], _templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], _focusTrapElement: [{\n            type: ViewChild,\n            args: ['focusTrapElement']\n        }] }); })();\n\nclass SatPopoverHoverDirective {\n    constructor(anchor) {\n        this.anchor = anchor;\n        this._satPopoverHover = 0;\n        /** Emits when the directive is destroyed. */\n        this._onDestroy = new Subject();\n        /** Emits when the user's mouse enters the element. */\n        this._onMouseEnter = new Subject();\n        /** Emits when the user's mouse leaves the element. */\n        this._onMouseLeave = new Subject();\n    }\n    /**\n     * Amount of time to delay (ms) after hovering starts before\n     * the popover opens. Defaults to 0ms.\n     */\n    get satPopoverHover() { return this._satPopoverHover; }\n    set satPopoverHover(val) {\n        this._satPopoverHover = coerceNumberProperty(val);\n    }\n    ngAfterViewInit() {\n        // Whenever the user hovers this host element, delay the configured\n        // amount of time and open the popover. Terminate if the mouse leaves\n        // the host element before the delay is complete.\n        this._onMouseEnter\n            .pipe(switchMap(() => {\n            return of(null).pipe(delay(this._satPopoverHover || 0), takeUntil(this._onMouseLeave));\n        }), takeUntil(this._onDestroy))\n            .subscribe(() => this.anchor.popover.open());\n    }\n    ngOnDestroy() {\n        this._onDestroy.next();\n        this._onDestroy.complete();\n    }\n    showPopover() {\n        this._onMouseEnter.next();\n    }\n    closePopover() {\n        this._onMouseLeave.next();\n        this.anchor.popover.close();\n    }\n}\nSatPopoverHoverDirective.ɵfac = function SatPopoverHoverDirective_Factory(t) { return new (t || SatPopoverHoverDirective)(ɵngcc0.ɵɵdirectiveInject(SatPopoverAnchor)); };\nSatPopoverHoverDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: SatPopoverHoverDirective, selectors: [[\"\", \"satPopoverHover\", \"\"]], hostBindings: function SatPopoverHoverDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function SatPopoverHoverDirective_mouseenter_HostBindingHandler() { return ctx.showPopover(); })(\"mouseleave\", function SatPopoverHoverDirective_mouseleave_HostBindingHandler() { return ctx.closePopover(); });\n    } }, inputs: { satPopoverHover: \"satPopoverHover\" } });\nSatPopoverHoverDirective.ctorParameters = () => [\n    { type: SatPopoverAnchor }\n];\nSatPopoverHoverDirective.propDecorators = {\n    satPopoverHover: [{ type: Input }],\n    showPopover: [{ type: HostListener, args: ['mouseenter',] }],\n    closePopover: [{ type: HostListener, args: ['mouseleave',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SatPopoverHoverDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[satPopoverHover]'\n            }]\n    }], function () { return [{ type: SatPopoverAnchor }]; }, { satPopoverHover: [{\n            type: Input\n        }], showPopover: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }], closePopover: [{\n            type: HostListener,\n            args: ['mouseleave']\n        }] }); })();\n\nclass SatPopoverModule {\n}\nSatPopoverModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SatPopoverModule });\nSatPopoverModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SatPopoverModule_Factory(t) { return new (t || SatPopoverModule)(); }, imports: [[\n            CommonModule,\n            OverlayModule,\n            A11yModule,\n            BidiModule,\n        ],\n        BidiModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SatPopoverModule, { declarations: function () { return [SatPopover,\n        SatPopoverAnchor,\n        SatPopoverHoverDirective]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        A11yModule,\n        BidiModule]; }, exports: function () { return [SatPopover,\n        SatPopoverAnchor,\n        SatPopoverHoverDirective,\n        BidiModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SatPopoverModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    A11yModule,\n                    BidiModule,\n                ],\n                declarations: [\n                    SatPopover,\n                    SatPopoverAnchor,\n                    SatPopoverHoverDirective,\n                ],\n                exports: [\n                    SatPopover,\n                    SatPopoverAnchor,\n                    SatPopoverHoverDirective,\n                    BidiModule,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SatPopover, SatPopoverAnchor, SatPopoverAnchoringService, SatPopoverHoverDirective, SatPopoverModule, transformPopover as ɵa };\n\n//# sourceMappingURL=ncstate-sat-popover.js.map","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Inject\n} from '@angular/core';\nimport { Validators, FormControl } from '@angular/forms';\nimport { WorkspaceDetailService } from '@app/features/workspace-detail/services/workspace-detail.service';\n\n/**\n * Add Workspace Resource Dialog Component\n *\n * Modal dialog component which is used to add new resources to the current workspace\n */\n@Component({\n  selector: 'mev-add-dialog',\n  templateUrl: './add-dialog.component.html',\n  styleUrls: ['./add-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddDialogComponent implements OnInit {\n  files = [];\n  selectedFiles = [];\n\n  dropdownSettings = {};\n  workspaceId: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddDialogComponent>,\n    private apiService: WorkspaceDetailService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  formControl = new FormControl('', [Validators.required]);\n\n  ngOnInit(): void {\n    this.workspaceId = this.data.workspaceId;\n    this.apiService.getAvailableResources().subscribe(data => {\n      this.files = data;\n    });\n\n    this.dropdownSettings = {\n      text: 'Select resources',\n      selectAllText: 'Select All',\n      unSelectAllText: 'Unselect All',\n      enableSearchFilter: true,\n      searchBy: ['name', 'readable_resource_type'],\n      lazyLoading: true,\n      classes: 'resource-dropdown'\n    };\n  }\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    // empty stuff\n  }\n\n  /**\n   * Function is triggered when user clicks the Add button\n   *\n   */\n  confirmAdd() {\n    this.selectedFiles.forEach(file => {\n      this.apiService\n        .addResourceToWorkspace(file.id, this.data.workspaceId)\n        .subscribe();\n    });\n  }\n}\n","<div class=\"container\">\n  <h3 mat-dialog-title>Select one or more resources from the list to add to the Workspace.\n    <br> Then click the Add button.</h3>\n\n  <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n\n    <div class=\"form\">\n\n      <angular2-multiselect [data]=\"files | validFilesPipe\" [(ngModel)]=\"selectedFiles\"\n        [settings]=\"dropdownSettings\" name=\"resource\">\n        <c-item>\n          <ng-template let-item=\"item\">\n            <span class=\"resource-label\">{{ item.name }} </span>\n            <br>\n            <span class=\"resource-type-label\">Type: {{ item.readable_resource_type || 'N/A' }}</span>\n          </ng-template>\n        </c-item>\n        <c-badge>\n          <ng-template let-item=\"item\">\n            <label>{{ item.name }}</label>\n          </ng-template>\n        </c-badge>\n      </angular2-multiselect>\n\n    </div>\n\n    <div mat-dialog-actions>\n      <button mat-button [mat-dialog-close]=\"1\" mat-raised-button color=\"accent\" (click)=\"confirmAdd()\">Add</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n\n  </form>\n</div>","import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { WorkspaceDetailService } from '@app/features/workspace-detail/services/workspace-detail.service';\nimport { WorkspaceResource } from '@app/features/workspace-detail/models/workspace-resource';\n\n/**\n * Delete Workspace Resource Dialog Component\n *\n * Modal dialog component which is used to delete a resource from the current workspace\n */\n@Component({\n  selector: 'mev-delete-dialog',\n  templateUrl: './delete-dialog.component.html',\n  styleUrls: ['./delete-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeleteDialogComponent {\n  resource: WorkspaceResource;\n\n  constructor(\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public service: WorkspaceDetailService\n  ) {\n    this.resource = this.data.resource;\n  }\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Function is triggered when user clicks the Delete button\n   *\n   */\n  confirmDelete(): void {\n    this.service\n      .deleteResourceFromWorkspace(this.data.resource.id, this.data.workspaceId)\n      .subscribe(\n        () => {\n          this.dialogRef.close();\n        },\n        error => {\n          console.error(error);\n        }\n      );\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>This resource will be deleted from your workspace. Are you sure?</h3>\n    <div mat-dialog-content>\n      <b>File: {{ resource.name }}</b>\n      <p>\n      Resource type: {{ resource.readable_resource_type }}<br>\n      Size: {{ resource.size | byteName}}<br>\n      Created: {{ resource.created | date :'medium' }}<br>\n      </p>\n    </div>\n  \n    <div mat-dialog-actions>\n      <button mat-button [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">Delete</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n  </div>\n  ","import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FileService } from '@app/features/file-manager/services/file-manager.service';\n\n/**\n * Edit Workspace Resource Dialog Component\n *\n * Modal dialog component which is used to edit a resource name\n */\n@Component({\n  selector: 'mev-edit-dialog',\n  templateUrl: './edit-dialog.component.html',\n  styleUrls: ['./edit-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EditDialogComponent {\n  formControl = new FormControl('', [Validators.required]);\n\n  constructor(\n    public dialogRef: MatDialogRef<EditDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fileService: FileService\n  ) {}\n\n  getErrorMessage() {\n    return this.formControl.hasError('required') ? 'Required field' : '';\n  }\n\n  submit() {\n    // empty stuff\n  }\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Function is triggered when user clicks the Save button\n   *\n   */\n  stopEdit(): void {\n    this.fileService.updateFile(this.data);\n  }\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>Edit Resource</h3>\n  \n    <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" #formControl=\"ngForm\">\n  \n      <div class=\"form\">\n        <mat-form-field color=\"accent\">\n          <input matInput #input class=\"form-control\" placeholder=\"File name\" [(ngModel)]=\"data.name\" name=\"name\"\n            required>\n          <mat-error *ngIf=\"formControl.invalid\">{{getErrorMessage()}}</mat-error>\n        </mat-form-field>\n      </div>\n  \n      <div mat-dialog-actions>\n        <button mat-button [type]=\"submit\" [disabled]=\"!formControl.valid\" [mat-dialog-close]=\"1\"\n          (click)=\"stopEdit()\" mat-raised-button color=\"accent\">Save</button>\n        <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n      </div>\n    </form>\n  </div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Inject\n} from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { AnalysesService } from '@app/features/analysis/services/analysis.service';\nimport { CustomSetType } from '@app/_models/metadata';\nimport { Utils } from '@app/shared/utils/utils';\n\n/**\n * Add Annotation Dialog Component\n *\n * Modal dialog component which is used to incorporate an annotation file as custom observation set.\n */\n@Component({\n  selector: 'mev-add-annotation-dialog',\n  templateUrl: './add-annotation-dialog.component.html',\n  styleUrls: ['./add-annotation-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddAnnotationDialogComponent implements OnInit {\n  files = [];\n  attributes = [];\n  selectedAnnotationFileId: string;\n  annotationFileContent = [];\n  selectedAttribute: string;\n  attributeValues = [];\n  selectedAttributeValues = [];\n  form: FormGroup;\n\n  dropdownSettings = {};\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddAnnotationDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private apiService: AnalysesService\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.formBuilder.group({\n      annotation: ['', Validators.required],\n      attribute: ['', Validators.required],\n      attributeValue: ['', Validators.required]\n    });\n\n    this.dropdownSettings = {\n      primaryKey: 'name',\n      text: 'Select custom observation sets to create',\n      selectAllText: 'Select All',\n      unSelectAllText: 'Unselect All',\n      classes: 'resource-dropdown'\n    };\n\n    this.files = this.data.workspaceResources;\n  }\n\n  /**\n   * Method is triggered when the user selects an annotation file from the dropdown list\n   *\n   * Get the annotation file content to get the list of attributes\n   */\n  onSelectAnnonation() {\n    this.apiService\n      .getResourceContent(this.selectedAnnotationFileId)\n      .subscribe(response => {\n        if (response.length) {\n          this.annotationFileContent = response;\n          this.attributes = Object.keys(response[0].values);\n          this.selectedAttributeValues = []; // reset selected attributes in multi-select dropdown\n        }\n      });\n  }\n\n  /**\n   * Method is triggered when the user select an attribure from the annotation file\n   *\n   * Get the list of unique attribute values\n   */\n  onSelectAttribute() {\n    this.attributeValues = [\n      ...new Set(\n        this.annotationFileContent.map(\n          item => item.values[this.selectedAttribute]\n        )\n      )\n    ].map(el => ({ name: el }));\n  }\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    // empty stuff\n  }\n\n  /**\n   * Function is triggered when user clicks the Add button\n   *\n   */\n  confirmAdd() {\n    const customSets = [];\n    this.form.value.attributeValue.forEach(attrValue => {\n      const attrSamples = this.annotationFileContent\n        .filter(\n          sample => sample.values[this.selectedAttribute] === attrValue.name\n        )\n        .map(sample => ({ id: sample.rowname, attributes: sample.values }));\n\n      const customSet = {\n        name: attrValue.name,\n        type: CustomSetType.ObservationSet,\n        elements: attrSamples,\n        color: Utils.getRandomColor(),\n        multiple: true\n      };\n      customSets.push(customSet);\n    });\n    this.dialogRef.close(customSets);\n  }\n}\n","<div class=\"container\">\n  <p> Fill in the parameters and click the Add button. <br> \n    After you have created custom observations sets from your annotation file,\n     you can rename them and assign new colors instead default ones.</p>\n  <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" [formGroup]=\"form\">\n\n    <div class=\"form\">\n      <mat-form-field class=\"form-control\" color=\"accent\">\n        <mat-label>Annotation file</mat-label>\n        <mat-select formControlName=annotation [(value)]=\"selectedAnnotationFileId\"\n          (selectionChange)=\"onSelectAnnonation()\">\n          <mat-option *ngFor=\"let file of files | annotationFilesPipe\" [value]=\"file.id\">\n            {{ file.name }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n    \n      <mat-form-field *ngIf=\"attributes.length\" class=\"form-control\" color=\"accent\">\n        <mat-label>Annotation attribute</mat-label>\n        <mat-select formControlName=attribute [(value)]=\"selectedAttribute\" (selectionChange)=\"onSelectAttribute()\">\n          <mat-option *ngFor=\"let attribute of attributes\" [value]=\"attribute\">\n            {{ attribute }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n     \n      <angular2-multiselect *ngIf=\"attributeValues.length\" formControlName=attributeValue [data]=\"attributeValues\"\n        class=\"form-control\" [settings]=\"dropdownSettings\" [(ngModel)]=\"selectedAttributeValues\" >\n        <c-item>\n          <ng-template let-item=\"item\">\n            <label>{{ item.name }}</label>\n          </ng-template>\n        </c-item>\n        <c-badge>\n          <ng-template let-item=\"item\">\n            <label>{{ item.name }}</label>\n          </ng-template>\n        </c-badge>\n      </angular2-multiselect>\n\n    </div>\n\n    <div mat-dialog-actions>\n      <button mat-button [mat-dialog-close]=\"1\" mat-raised-button color=\"accent\" [type]=\"submit\" (click)=\"confirmAdd()\" [disabled]=\"!form.valid\">Add</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n\n  </form>\n</div>","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Inject,\n  ViewChild\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { CustomSetType } from '@app/_models/metadata';\n\n/**\n * Add Observation Dialog Component\n *\n * Modal dialog component which is used to add a custom observation set\n */\n@Component({\n  selector: 'mev-add-observation-set-dialog',\n  templateUrl: './add-observation-set-dialog.component.html',\n  styleUrls: ['./add-observation-set-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddObservationSetDialogComponent implements OnInit {\n  selection = new SelectionModel(true, []);\n  allObservationSetsDS;\n  observationForm: FormGroup;\n  submitted = false;\n  observationSetsDisplayedColumns;\n  observationSetsDisplayedColumnsAttributesOnly;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<AddObservationSetDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {\n    this.observationForm = this.formBuilder.group({\n      observationSetName: ['', Validators.required],\n      observationSetColor: ['#000000', Validators.required]\n    });\n    this.allObservationSetsDS = this.data.observationSetDS;\n\n    this.observationSetsDisplayedColumns = this.data.observationSetsDisplayedColumns;\n    this.observationSetsDisplayedColumnsAttributesOnly = this.data.observationSetsDisplayedColumnsAttributesOnly;\n  }\n\n  ngAfterViewInit() {\n    this.allObservationSetsDS.paginator = this.paginator;\n  }\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    //empty stuff\n  }\n\n  /**\n   * Function is triggered when user clicks the Add button\n   *\n   */\n  confirmAdd() {\n    const name = this.observationForm.value.observationSetName;\n    const color = this.observationForm.value.observationSetColor;\n    const samples = this.selection.selected;\n    const observationSet = {\n      name: name,\n      color: color,\n      type: CustomSetType.ObservationSet,\n      elements: samples,\n      multiple: true\n    };\n    this.dialogRef.close(observationSet);\n  }\n\n  /**\n   * Whether the number of selected elements matches the total number of rows.\n   */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.allObservationSetsDS.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /**\n   * Selects all rows if they are not all selected; otherwise clear selection.\n   */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.allObservationSetsDS.filteredData.forEach(row =>\n          this.selection.select(row)\n        );\n  }\n\n  /**\n   * Filtering observations by name\n   */\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.allObservationSetsDS.filter = filterValue;\n  }\n\n  /**\n   * Convenience getter for easy access to form fields\n   */\n  get f() {\n    return this.observationForm.controls;\n  }\n}\n","<div class=\"container\">\n    <p>Enter the name of a new observation set and select samples. Then click the Add button.\n    </p>\n\n    <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" [formGroup]=\"observationForm\">\n\n        <div class=\"form\">\n\n            <mat-form-field class=\"form-control\" color=\"accent\">\n                <mat-label>Enter observation set name</mat-label>\n                <input matInput formControlName=observationSetName name=observationSetName>\n            </mat-form-field>\n\n            <mat-form-field class=\"form-control\" color=\"accent\">\n                <mat-label>Select your color for the observation set:</mat-label>\n                <input type=\"color\" class=\"color-picker-input\" matInput formControlName=observationSetColor name=observationSetColor>\n            </mat-form-field>\n            \n            Select samples: \n            <div class=\"mat-elevation-z8\">\n\n                <div class=\"filter-panel\">\n                    <mat-form-field class=\"form-control\">\n                      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n                    </mat-form-field>\n                </div>\n\n                <table mat-table [dataSource]=\"allObservationSetsDS\">\n\n                    <ng-container matColumnDef=\"select\">\n                        <th mat-header-cell *matHeaderCellDef>\n                            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                [checked]=\"selection.hasValue() && isAllSelected()\"\n                                [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                            </mat-checkbox>\n                        </th>\n                        <td mat-cell *matCellDef=\"let row\">\n                            <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\">\n                            </mat-checkbox>\n                        </td>\n                    </ng-container>\n    \n                    <ng-container matColumnDef=\"id\">\n                        <th mat-header-cell *matHeaderCellDef> Name </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                    </ng-container>\n    \n                    <ng-container *ngFor=\"let attrCol of observationSetsDisplayedColumnsAttributesOnly; let colIndex = index\"\n                    matColumnDef=\"{{attrCol}}\">\n                    <th mat-header-cell *matHeaderCellDef>{{ attrCol }}</th>\n                    <td mat-cell *matCellDef=\"let element\"> {{ element.attributes[attrCol] ? element.attributes[attrCol].value : '' }}</td> \n                    </ng-container>\n    \n                    <tr mat-header-row *matHeaderRowDef=\"observationSetsDisplayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: observationSetsDisplayedColumns;\"\n                        (click)=\"selection.toggle(row)\">\n                    </tr>\n                </table>\n                <mat-paginator [pageSizeOptions]=\"[5, 10, 25]\">\n                </mat-paginator>  \n            </div>\n            \n\n            \n\n          \n\n        </div>\n\n        <div class=\"button-panel\">\n            <button mat-button [mat-dialog-close]=\"1\" mat-raised-button color=\"accent\"\n               [type]=\"submit\" [disabled]=\"!observationForm.valid\" (click)=\"confirmAdd()\">Add</button>\n            <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n        </div>\n    </form>\n</div>","import { Component, ChangeDetectionStrategy, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * Delete Observation Dialog Component\n *\n * Modal dialog component which is used to delete a custom observation set\n */\n@Component({\n  selector: 'mev-delete-set-dialog',\n  templateUrl: './delete-set-dialog.component.html',\n  styleUrls: ['./delete-set-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeleteSetDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DeleteSetDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Function is triggered when user clicks the Delete button\n   *\n   */\n  confirmDelete(): void {}\n}\n","<div class=\"container\">\n    <h3 mat-dialog-title>This custom observation/feature set will be deleted. Are you sure?</h3>\n    <div mat-dialog-content>\n      Set name: {{data.setId}}\n      <p></p>\n    </div>\n  \n    <div mat-dialog-actions>\n      <button mat-button mat-raised-button [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\" color=\"accent\">Delete</button>\n      <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n    </div>\n  </div>\n  ","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Inject,\n  ViewChild\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { CustomSetType } from '@app/_models/metadata';\n\n/**\n * Edit Feature/Observation Dialog Component\n *\n * Modal dialog component which is used to edit a custom feature or observation set\n * For Observation sets the user  can update name and the list of samples included\n * For Feature sets the user can update name\n */\n@Component({\n  selector: 'mev-edit-feature-set-dialog',\n  templateUrl: './edit-feature-set-dialog.component.html',\n  styleUrls: ['./edit-feature-set-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class EditFeatureSetDialogComponent implements OnInit {\n  selection = new SelectionModel(true, []);\n  customSetType: string;\n  isObservationSet = true;\n  allObservationSetsDS;\n  observationForm: FormGroup;\n  submitted = false;\n  observationSetsDisplayedColumns;\n  observationSetsDisplayedColumnsAttributesOnly;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<EditFeatureSetDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  ngOnInit(): void {\n    // if no custom set type is passed, assume Observation set by default\n    this.customSetType = this.data?.type || CustomSetType.ObservationSet;\n    if (this.customSetType === CustomSetType.FeatureSet) {\n      this.isObservationSet = false;\n    }\n    this.observationForm = this.formBuilder.group({\n      observationSetName: [this.data.name, Validators.required],\n      observationSetColor: [\n        this.data.color,\n        [...(this.isObservationSet ? [Validators.required] : [])]\n      ]\n    });\n\n    if (this.isObservationSet) {\n      this.allObservationSetsDS = this.data.observationSetDS;\n      this.observationSetsDisplayedColumns = this.data.observationSetsDisplayedColumns;\n      this.observationSetsDisplayedColumnsAttributesOnly = this.data.observationSetsDisplayedColumnsAttributesOnly;\n      this.allObservationSetsDS.data\n        .filter(el =>\n          this.data.selectedElements.some(selEl => selEl.id === el.id)\n        )\n        .forEach(row => {\n          this.selection.select(row);\n        });\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.isObservationSet) {\n      this.allObservationSetsDS.paginator = this.paginator;\n    }\n  }\n\n  /**\n   * Function is triggered when user clicks the Cancel button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  submit() {\n    //empty stuff\n  }\n\n  /**\n   * Whether the number of selected elements matches the total number of rows.\n   */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.allObservationSetsDS.filteredData.length;\n    return numSelected === numRows;\n  }\n\n  /**\n   * Selects all rows if they are not all selected; otherwise clear selection.\n   */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.allObservationSetsDS.filteredData.forEach(row =>\n          this.selection.select(row)\n        );\n  }\n\n  /**\n   * Convenience getter for easy access to form fields\n   */\n  get f() {\n    return this.observationForm.controls;\n  }\n\n  /**\n   * Method is triggered when user clicks the Save button\n   *\n   */\n  confirmEdit() {\n    const name = this.observationForm.value.observationSetName;\n    const color = this.observationForm.value.observationSetColor;\n    const samples = this.selection.selected;\n    const observationSet = {\n      name: name,\n      color: color,\n      type: this.customSetType,\n      multiple: true\n    };\n\n    // for Feature sets users can't update sample list\n    if (this.customSetType === CustomSetType.ObservationSet) {\n      observationSet['elements'] = samples;\n    }\n    this.dialogRef.close(observationSet);\n  }\n\n  /**\n   * Filtering observations by name\n   */\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim();\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.allObservationSetsDS.filter = filterValue;\n  }\n}\n","<div class=\"container\">\n    <p *ngIf=\"isObservationSet; else featureSetText\">\n        Update the name of the observation set, its color and sample list. Then click the Save button.\n    </p>\n\n    <ng-template #featureSetText>\n        <p>\n            Update the name of the feature set. Then click the Save button.\n        </p>\n    </ng-template>\n\n    <form class=\"mat-dialog-content\" (ngSubmit)=\"submit\" [formGroup]=\"observationForm\">\n        <div class=\"form\">\n            <mat-form-field class=\"form-control\" color=\"accent\">\n                <mat-label>Enter {{ customSetType | lowercase}} name</mat-label>\n                <input matInput formControlName=observationSetName name=observationSetName>\n            </mat-form-field>\n\n            <mat-form-field *ngIf=\"isObservationSet\" class=\"form-control\" color=\"accent\">\n                <mat-label>Select your color for the observation set:</mat-label>\n                <input type=\"color\" class=\"color-picker-input\" matInput formControlName=observationSetColor\n                    name=observationSetColor>\n            </mat-form-field>\n\n            <div *ngIf=\"isObservationSet\">\n                Select samples:\n                <div class=\"mat-elevation-z8\">\n                    <div class=\"filter-panel\">\n                        <mat-form-field class=\"form-control\">\n                            <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n                        </mat-form-field>\n                    </div>\n\n                    <table mat-table [dataSource]=\"allObservationSetsDS\">\n\n                        <ng-container matColumnDef=\"select\">\n                            <th mat-header-cell *matHeaderCellDef>\n                                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n                                </mat-checkbox>\n                            </th>\n                            <td mat-cell *matCellDef=\"let row\">\n                                <mat-checkbox (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(row) : null\"\n                                    [checked]=\"selection.isSelected(row)\">\n                                </mat-checkbox>\n                            </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"id\">\n                            <th mat-header-cell *matHeaderCellDef> Name </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                        </ng-container>\n\n                        <ng-container\n                            *ngFor=\"let attrCol of observationSetsDisplayedColumnsAttributesOnly; let colIndex = index\"\n                            matColumnDef=\"{{attrCol}}\">\n                            <th mat-header-cell *matHeaderCellDef>{{ attrCol }}</th>\n                            <td mat-cell *matCellDef=\"let element\">\n                                {{ element.attributes[attrCol] ? element.attributes[attrCol].value : '' }}</td>\n                        </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"observationSetsDisplayedColumns\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: observationSetsDisplayedColumns;\"\n                            (click)=\"selection.toggle(row)\">\n                        </tr>\n                    </table>\n                    <mat-paginator [pageSizeOptions]=\"[5, 10, 25]\">\n                    </mat-paginator>\n                </div>\n            </div>\n\n            <div *ngIf=\"!isObservationSet\">\n                Selected features:\n                <ul> \n                    <li *ngFor=\"let elem of data.selectedElements\">{{ elem.id }}</li>\n                </ul>\n            </div>            \n\n        </div>\n        <div class=\"button-panel\">\n            <button mat-button [mat-dialog-close]=\"1\" mat-raised-button color=\"accent\" [type]=\"submit\"\n                [disabled]=\"!observationForm.valid\" (click)=\"confirmEdit()\">Save</button>\n            <button mat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\n        </div>\n    </form>\n</div>","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n/**\n * Feature/Observation Information Dialog Component\n *\n * Modal dialog component which is used to view information\n * about custom observation and feature sets\n */\n@Component({\n  selector: 'mev-view-info-dialog',\n  templateUrl: './view-info-dialog.component.html',\n  styleUrls: ['./view-info-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewInfoDialogComponent implements OnInit {\n  constructor(public dialogRef: MatDialogRef<ViewInfoDialogComponent>) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Function is triggered when user clicks the Close button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<header>Observations and features</header>\n<main class=\"container\">\n<p>\n    Within WebMEV, you will see references to \"Observations\" and \"Features\". \n    If you are working with \"-omic\" data as WebMEV is intended, an observation is a sample and a feature is a gene/transcript. \n    However, we use these more generic terms to allow flexibility in the types of data we work with. \n</p>\n<p>\n    Observations and features are directly linked. \n    An illustrative example is a count table (or matrix) generated in RNA-seq data. \n    Typically, these matrices are arranged so that each column corresponds to a single sample and each row corresponds to a gene. \n    If we examine a single column of the table, we see that this observation/sample is composed of many gene measurements, which we are calling features; collectively, we can refer to that column as a \"feature vector\" or \"feature array\". \n    In many \"omic\" analyses, we compare these arrays in an attempt to infer biological meaning. \n    For a more general example, we could imagine investigating a population of patients (observations); \n    each patient has some features (e.g. age, sex, smoking history) which may affect the measured outcome variable (e.g. blood pressure).\n</p> \n<p>\n    Within WebMEV, we can create sets of custom observations/samples and features/genes to allow stratification and comparisons between biologically meaningful groups. \n    These groups may already be known, as in the case of a designed experiment between \"control\" and \"experimental\" observations. \n    Alternatively, custom groups may be discovered and defined in the course of an analysis, perhaps originating from a clustering operation. \n    Similarly, we can create a group of genes/features that represent a biologically meaningful pathway. \n    Suggestively, these are referred to as <em>observation sets</em> and <em>feature sets</em>.\n</p>   \n</main>\n<footer mat-dialog-actions class=\"btn-group\">\n    <button mat-button (click)=\"onNoClick()\" mat-raised-button color=\"accent\">Close</button>\n</footer>","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Inject\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CustomSetType } from '@app/_models/metadata';\n\n/**\n * View Custom Feature/Observation Dialog Component\n *\n * Modal dialog component which is used to view a custom feature or observation set\n * User can view set name and the list of features/samples\n */\n@Component({\n  selector: 'mev-view-set-dialog',\n  templateUrl: './view-set-dialog.component.html',\n  styleUrls: ['./view-set-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewSetDialogComponent implements OnInit {\n  isObservationSet: boolean;\n\n  constructor(\n    public dialogRef: MatDialogRef<ViewSetDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  /*\n   * Initialization of the isObservationSet property\n   * If no set type, use Observation Set type by default\n   */\n  ngOnInit(): void {\n    this.isObservationSet =\n      this.data.type === CustomSetType.FeatureSet ? false : true;\n  }\n\n  /**\n   * Function is triggered when user clicks the Close button\n   *\n   */\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"container\">\n    <p mat-dialog-title>{{ data.name }}</p>\n    <div mat-dialog-content>\n      <p>Type: {{ data.type }}</p>\n      {{ isObservationSet ? 'Observations' : 'Features' }}: \n      <ul> \n        <li *ngFor=\"let elem of data.elements\">{{ elem.id }}</li>\n      </ul>\n    </div>\n  \n    <div mat-dialog-actions>\n      <button mat-button mat-raised-button (click)=\"onNoClick()\" color=\"accent\" tabindex=\"-1\">Close</button>\n    </div>\n</div>\n  ","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  Input,\n  ViewChild,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport { takeUntil, switchMap, delay } from 'rxjs/operators';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatAccordion } from '@angular/material/expansion';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { AddAnnotationDialogComponent } from './dialogs/add-annotation-dialog/add-annotation-dialog.component';\nimport { WorkspaceResource } from '../../models/workspace-resource';\nimport { WorkspaceDetailService } from '../../services/workspace-detail.service';\nimport { AddObservationSetDialogComponent } from './dialogs/add-observation-set-dialog/add-observation-set-dialog.component';\nimport { DeleteSetDialogComponent } from './dialogs/delete-set-dialog/delete-set-dialog.component';\nimport { ViewSetDialogComponent } from './dialogs/view-set-dialog/view-set-dialog.component';\nimport { LclStorageService } from '@app/core/local-storage/lcl-storage.service';\nimport { MetadataService } from '@app/core/metadata/metadata.service';\nimport { EditFeatureSetDialogComponent } from './dialogs/edit-feature-set-dialog/edit-feature-set-dialog.component';\nimport { ViewInfoDialogComponent } from './dialogs/view-info-dialog/view-info-dialog.component';\n\n/**\n * Metadata Component\n *\n * Used to add, edit, remove custom observations sets and edit, remove custom feature sets.\n * User's custom sets are stored in local storage only\n */\n@Component({\n  selector: 'mev-metadata',\n  templateUrl: './metadata.component.html',\n  styleUrls: ['./metadata.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class MetadataComponent implements OnInit {\n  displayedColumns = ['name', 'symbol'];\n  displayedColumnsAttributesOnly = [];\n\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n  @Input() workspaceResources: WorkspaceResource[];\n  workspaceId: string;\n\n  observationSetDS; // use in MatDataTable to display the current annotation\n  metadataObsDisplayedColumns: string[]; // columns for the Current Annotation table\n  metadataObsDisplayedColumnsAttributesOnly: string[];\n\n  customSetDS; // use in MatDataTable to display the list of custom observation/feature sets created by user\n  customSetsDisplayedColumns: string[] = ['name', 'type', 'actions']; // the list of columns for the Custom Sets table\n\n  visObservationSetDS; // use in MatDataTable to display visualisation for custom observation sets\n  visObsDisplayedColumns: string[];\n  visObsDisplayedColumnsSetsOnly: string[];\n\n  globalObservationSets = []; // all samples from all resources\n\n  datasource;\n  selection = new SelectionModel(true, []);\n  isWait = false;\n  private readonly onDestroy = new Subject<void>();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  storageSubscription: Subscription;\n\n  constructor(\n    private service: WorkspaceDetailService,\n    private metadataService: MetadataService,\n    private storage: LclStorageService,\n    private route: ActivatedRoute,\n    private cd: ChangeDetectorRef,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.workspaceId = this.route.snapshot.paramMap.get('workspaceId');\n\n    // check if there is a current annotation saved locally to display\n    const currentObsSet =\n      JSON.parse(\n        localStorage.getItem(this.workspaceId + '_current_observation_set')\n      ) || [];\n    this.generateMetadataColumns(currentObsSet);\n    this.observationSetDS = new MatTableDataSource(currentObsSet);\n\n    // retrieve custom observation/feature sets\n    const customSet = this.metadataService.getCustomSets();\n    this.customSetDS = new MatTableDataSource(customSet);\n\n    // watch value changes\n    this.storageSubscription = this.storage\n      .watch(this.workspaceId + '_custom_sets')\n      .subscribe(response => {\n        this.customSetDS = new MatTableDataSource(\n          this.metadataService.getCustomSets()\n        );\n        this.generateObservationSetsVisualization(); // generate custom observation visualization\n        this.cd.markForCheck();\n      });\n  }\n\n  ngAfterViewInit() {\n    this.observationSetDS.paginator = this.paginator;\n  }\n\n  ngOnDestroy() {\n    this.onDestroy.next();\n    this.onDestroy.complete();\n    this.storageSubscription.unsubscribe();\n  }\n\n  /**\n   * Method is triggered when the user clicks button 'Incorporate annotation'\n   *\n   */\n  onChooseAnnotation() {\n    const dialogRef = this.dialog.open(AddAnnotationDialogComponent, {\n      data: { workspaceResources: this.workspaceResources }\n    });\n    dialogRef.afterClosed().subscribe(newCustomSets => {\n      if (newCustomSets) {\n        newCustomSets.forEach(newCustomSet =>\n          this.metadataService.addCustomSet(newCustomSet)\n        );\n      }\n    });\n  }\n\n  /**\n   * Method is triggered when the user clicks button 'Create a custom observation set'\n   * Display the list of all available samples from all files in the workspace\n   */\n  onCreateObservationSet() {\n    this.isWait = true;\n    this.globalObservationSets = [];\n    this.service\n      .getWorkspaceMetadataObservations(this.workspaceId)\n      .pipe(\n        delay(500), // delay for spinner\n        switchMap(metadata => {\n          if (metadata?.observation_set?.elements) {\n            this.globalObservationSets = metadata.observation_set.elements;\n          }\n          const globalObservationSetsDS = new MatTableDataSource(\n            this.globalObservationSets\n          );\n\n          // the list of columns for pop-up table to select samples for custom observation sets\n          const observationSetsDisplayedColumns = ['select', 'id'];\n          const observationSetsDisplayedColumnsAttributesOnly = [];\n\n          const obsSetsWithAttr = this.globalObservationSets.filter(\n            set => 'attributes' in set\n          );\n          const attributes = obsSetsWithAttr.length\n            ? obsSetsWithAttr[0].attributes\n            : {};\n\n          for (const attribute in attributes) {\n            if (attributes.hasOwnProperty(attribute)) {\n              observationSetsDisplayedColumns.push(attribute);\n              observationSetsDisplayedColumnsAttributesOnly.push(attribute);\n            }\n          }\n\n          this.isWait = false;\n          const dialogRef = this.dialog.open(AddObservationSetDialogComponent, {\n            data: {\n              observationSetDS: globalObservationSetsDS,\n              observationSetsDisplayedColumns: observationSetsDisplayedColumns,\n              observationSetsDisplayedColumnsAttributesOnly: observationSetsDisplayedColumnsAttributesOnly\n            }\n          });\n          return dialogRef.afterClosed();\n        }),\n\n        takeUntil(this.onDestroy)\n      )\n      .subscribe(newObservationSet => {\n        if (newObservationSet) {\n          this.metadataService.addCustomSet(newObservationSet);\n        }\n      });\n  }\n\n  /**\n   * Method to display the list of custom observation sets in the Visualization mode\n   */\n  generateObservationSetsVisualization() {\n    const visTable = [];\n    const customObservationSets = this.metadataService.getCustomObservationSets();\n\n    this.visObsDisplayedColumns = [\n      'id',\n      ...customObservationSets.map(customSet => customSet.name)\n    ];\n    this.visObsDisplayedColumnsSetsOnly = customObservationSets.map(\n      customSet => customSet.name\n    );\n\n    if (this.visObsDisplayedColumnsSetsOnly.length > 0) {\n      this.getGlobalObservationSets().subscribe(data => {\n        this.globalObservationSets = data;\n        this.globalObservationSets.forEach(sample => {\n          const elem = { sampleName: sample.id };\n          customObservationSets.forEach(customSet => {\n            if (customSet.elements.filter(e => e.id === sample.id).length > 0) {\n              elem[customSet.name] = customSet.color;\n            } else {\n              elem[customSet.name] = 'transparent';\n            }\n          });\n\n          visTable.push(elem);\n        });\n        this.visObservationSetDS = new MatTableDataSource(visTable);\n        this.cd.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Method is triggered when the user clicks icon 'Delete'\n   * Delete a custom observation or feature set from the list\n   */\n  onDeleteCustomSet(setId: string) {\n    const dialogRef = this.dialog.open(DeleteSetDialogComponent, {\n      data: { setId: setId }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.metadataService.deleteCustomSet(setId);\n      }\n    });\n  }\n\n  /**\n   * Method is triggered when the user clicks icon 'Edit'\n   *\n   * Edit a custom observation or feature set.\n   * For custom observation sets the user can update name, color, list of samples.\n   * For feature sets only names can be updated\n   */\n  onEditCustomSet(set) {\n    this.isWait = true;\n    this.globalObservationSets = [];\n    this.service\n      .getWorkspaceMetadataObservations(this.workspaceId)\n      .pipe(\n        delay(500), // delay for spinner\n        switchMap(metadata => {\n          if (metadata?.observation_set?.elements) {\n            this.globalObservationSets = metadata.observation_set.elements;\n          }\n          const globalObservationSetsDS = new MatTableDataSource(\n            this.globalObservationSets\n          );\n\n          // the list of columns for pop-up table to select samples for custom observation sets\n          const observationSetsDisplayedColumns = ['select', 'id'];\n          const observationSetsDisplayedColumnsAttributesOnly = [];\n\n          const obsSetsWithAttr = this.globalObservationSets.filter(\n            set => 'attributes' in set\n          );\n          const attributes = obsSetsWithAttr.length\n            ? obsSetsWithAttr[0].attributes\n            : {};\n\n          for (const attribute in attributes) {\n            if (attributes.hasOwnProperty(attribute)) {\n              observationSetsDisplayedColumns.push(attribute);\n              observationSetsDisplayedColumnsAttributesOnly.push(attribute);\n            }\n          }\n\n          this.isWait = false;\n          const dialogRef = this.dialog.open(EditFeatureSetDialogComponent, {\n            data: {\n              name: set.name,\n              color: set.color,\n              type: set.type,\n              selectedElements: set.elements,\n              observationSetDS: globalObservationSetsDS,\n              observationSetsDisplayedColumns: observationSetsDisplayedColumns,\n              observationSetsDisplayedColumnsAttributesOnly: observationSetsDisplayedColumnsAttributesOnly\n            }\n          });\n          return dialogRef.afterClosed();\n        }),\n        takeUntil(this.onDestroy)\n      )\n      .subscribe(updatedObservationSet => {\n        if (updatedObservationSet) {\n          this.metadataService.updateCustomSet(updatedObservationSet, set.name);\n        }\n      });\n  }\n\n  /**\n   * Method is triggered when the user clicks icon 'View'\n   * View a custom observation or feature set.\n   */\n\n  onViewCustomSet(set) {\n    const dialogRef = this.dialog.open(ViewSetDialogComponent, { data: set });\n    dialogRef.afterClosed().subscribe();\n  }\n\n  /**\n   * Make the list of columns for the Mat Table with current annotation\n   */\n  generateMetadataColumns(currentObsSet) {\n    if (currentObsSet && currentObsSet.length) {\n      this.metadataObsDisplayedColumns = ['id'];\n      this.metadataObsDisplayedColumnsAttributesOnly = [];\n      let attributes = {};\n      currentObsSet.forEach(\n        sample => (attributes = { ...attributes, ...sample.attributes })\n      );\n      for (const attribute in attributes) {\n        if (attributes.hasOwnProperty(attribute)) {\n          this.metadataObsDisplayedColumns.push(attribute);\n          this.metadataObsDisplayedColumnsAttributesOnly.push(attribute);\n        }\n      }\n    }\n  }\n\n  /**\n   * Get the list of observations used in all files/resources included in the current workspace\n   */\n  getGlobalObservationSets() {\n    let globalObservationSets = [];\n    const subject = new Subject<any>();\n    this.service\n      .getWorkspaceMetadataObservations(this.workspaceId)\n      .subscribe(metadata => {\n        if (metadata?.observation_set?.elements) {\n          globalObservationSets = metadata.observation_set.elements;\n        }\n        subject.next(globalObservationSets);\n      });\n    return subject.asObservable();\n  }\n\n  /**\n   * Method is triggered when the user clicks a link in the Metadata tab description\n   */\n  viewCustomSetInfo() {\n    this.dialog.open(ViewInfoDialogComponent);\n  }\n}\n","<mev-spinner-overlay *ngIf=\"isWait\"></mev-spinner-overlay>\n\n<section class=\"metadata-container\">\n  <mat-card class=\"metadata-card\">\n      <mat-card-content class=\"metadata-card__main\">\n          <div class=\"metadata-card__instruction\">\n            <p>\n              Here you can create <a (click)=\"viewCustomSetInfo()\">custom observation and feature sets</a> to filter your data during\n              the analysis. You also can incorporate an annotation file as attributes to your custom observation set. \n            </p>\n            <p *ngIf=\"(workspaceResources| annotationFilesPipe)?.length > 0; else noAnnotationFiles\">\n              Click the Incorporate annotations button to use your annotation file.\n            </p>\n           <ng-template #noAnnotationFiles>\n             <p>Please upload an annotation file \n               <mat-icon class=\"icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\"\n              matTooltip=\" An Annotation Table is a special type of table that is be responsible for annotating observations/samples (e.g. adding sample names and associated attributes like experimental group or other covariates). The first column gives the sample names and the remaining columns  each individually represent different covariates associated with that sample.\" aria-label=\"Info tooltip about the field\">info\n            </mat-icon>and add it to your workspace to. </p>\n           </ng-template>\n          </div>\n          <mat-divider [inset]=\"true\"></mat-divider>\n          <div class=\"metadata-card__content\">\n            <div class=\"control-group\">\n              <div class=\"btn-group\">\n                <button mat-raised-button color=\"accent\" (click)=\"onCreateObservationSet()\">\n                  <mat-icon aria-label=\"Create an observation set\">add</mat-icon>\n                  Create an observation set\n                </button>\n      \n                <button mat-raised-button color=\"accent\" (click)=\"onChooseAnnotation()\"\n                [disabled]=\"(workspaceResources| annotationFilesPipe)?.length === 0\">\n                  <mat-icon aria-label=\"Incorporate annotations\">add</mat-icon>\n                  Incorporate annotations\n                  </button>\n      \n              </div>\n\n              <mat-button-toggle-group #customSetsViewMode=\"matButtonToggleGroup\" value=\"tableMode\">\n                <mat-button-toggle value=\"tableMode\" aria-label=\"Text align left\">\n                  Table view\n                </mat-button-toggle>\n                <mat-button-toggle value=\"visMode\" aria-label=\"Text align center\">\n                  Visualization\n                </mat-button-toggle>\n              </mat-button-toggle-group>\n            </div>\n            <div *ngIf=\"!customSetDS || !customSetDS.data || customSetDS.data.length === 0\">\n              No custom observation and feature sets available.\n            </div>\n            <div *ngIf=\"customSetDS?.data?.length > 0\">\n              <table *ngIf=\"customSetsViewMode.value === 'tableMode'\" mat-table [dataSource]=\"customSetDS\"\n                class=\"mat-elevation-z8\">\n                <ng-container matColumnDef=\"name\">\n                  <th mat-header-cell *matHeaderCellDef> Name </th>\n                  <td mat-cell *matCellDef=\"let element\">\n                     <span class=\"sample-color\" [style.background-color]=\"element.color\"></span>\n                     {{element.name}} \n                  </td>\n                </ng-container>\n      \n                <ng-container matColumnDef=\"type\">\n                  <th mat-header-cell *matHeaderCellDef> Type (Observation/Feature set) </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{element.type}} </td>\n                </ng-container>\n      \n                <ng-container matColumnDef=\"actions\">\n                  <th mat-header-cell *matHeaderCellDef>Actions</th>\n                  <td mat-cell *matCellDef=\"let element; let i=index;\">\n                    <button mat-icon-button color=\"accent\" title=\"View\" (click)=\"onViewCustomSet(element)\">\n                      <mat-icon aria-label=\"View\">visibility</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"accent\" title=\"Delete\" (click)=\"onDeleteCustomSet(element.name)\">\n                      <mat-icon aria-label=\"Delete\">delete</mat-icon>\n                    </button>\n                    <button mat-icon-button color=\"accent\" title=\"Edit\" (click)=\"onEditCustomSet(element)\">\n                      <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                    </button>\n                  </td>\n                </ng-container>\n      \n                <tr mat-header-row *matHeaderRowDef=\"customSetsDisplayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: customSetsDisplayedColumns;\">\n      \n              </table>\n      \n      \n              <table *ngIf=\"customSetsViewMode.value === 'visMode'\" mat-table [dataSource]=\"visObservationSetDS\"\n                class=\"visualization-table\">\n                <ng-container matColumnDef=\"id\">\n                  <th mat-header-cell *matHeaderCellDef> Sample </th>\n                  <td mat-cell *matCellDef=\"let element\"> {{ element.sampleName }} </td>\n                </ng-container>\n      \n                <ng-container *ngFor=\"let setCol of visObsDisplayedColumnsSetsOnly\" matColumnDef=\"{{setCol}}\">\n                  <th mat-header-cell *matHeaderCellDef>{{ setCol }}</th>\n                  <td mat-cell *matCellDef=\"let element\">\n                    <div class=\"highlighted-cell\" [style.background-color]=\"element[setCol]\"\n                      [ngClass]=\"{'highlighted-cell2': element[setCol] === true}\"></div>\n                  </td>\n                </ng-container>\n      \n      \n                <tr mat-header-row *matHeaderRowDef=\"visObsDisplayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: visObsDisplayedColumns;\">\n                </tr>\n              </table>\n            </div>\n          </div>\n      </mat-card-content>\n  </mat-card>\n</section>\n","import {\n  Component,\n  OnInit,\n  ChangeDetectionStrategy,\n  ViewChild\n} from '@angular/core';\nimport { WorkspaceResource } from '@features/workspace-detail/models/workspace-resource';\nimport { Workspace } from '@workspace-manager/models/workspace';\nimport { Observable } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { WorkspaceDetailService } from '@features/workspace-detail/services/workspace-detail.service';\nimport { AddDialogComponent } from '../dialogs/add-dialog/add-dialog.component';\nimport { PreviewDialogComponent } from '../dialogs/preview-dialog/preview-dialog.component';\nimport { DeleteDialogComponent } from '../dialogs/delete-dialog/delete-dialog.component';\nimport { EditDialogComponent } from '../dialogs/edit-dialog/edit-dialog/edit-dialog.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\n/**\n * Workspace Detail Component\n *\n * Used to display the list of files/resources included in the current workspace\n * Also contains child components for Metadata, Analyses Flow, Tools and Analyses Result\n */\n@Component({\n  selector: 'mev-workspace-detail',\n  templateUrl: './workspace-detail.component.html',\n  styleUrls: ['./workspace-detail.component.scss'],\n  changeDetection: ChangeDetectionStrategy.Default\n})\nexport class WorkspaceDetailComponent implements OnInit {\n  workspaceResources: WorkspaceResource[];\n  workspaceId: string;\n  workspace$: Observable<Workspace>;\n  searchText;\n  selectedTabIndex;\n  execOperationId: string;\n  isWait = false;\n\n  workspaceResourcesDS;\n  displayedColumns: string[] = [\n    'name',\n    'readable_resource_type',\n    'size',\n    'created',\n    'actions'\n  ];\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n\n  constructor(\n    private route: ActivatedRoute,\n    private service: WorkspaceDetailService,\n    public dialog: MatDialog\n  ) {}\n\n  ngOnInit(): void {\n    this.loadData();\n  }\n\n  public loadData() {\n    this.workspaceId = this.route.snapshot.paramMap.get('workspaceId');\n    this.service.getConnectedResources(this.workspaceId).subscribe(data => {\n      this.workspaceResources = data;\n\n      this.workspaceResourcesDS = new MatTableDataSource(data);\n      this.workspaceResourcesDS.paginator = this.paginator;\n      this.workspaceResourcesDS.sort = this.sort;\n    });\n    this.workspace$ = this.service.getWorkspaceDetail(this.workspaceId);\n  }\n\n  refresh() {\n    this.loadData();\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.workspaceResourcesDS.filter = filterValue.trim().toLowerCase();\n  }\n\n  selectResource(resource) {\n    console.log(`The selected resource is::  ${resource.name}`);\n  }\n\n  /**\n   * Open a modal dialog to add files to a specific workspace\n   *\n   */\n  addItem() {\n    const dialogRef = this.dialog.open(AddDialogComponent, {\n      data: { workspaceId: this.workspaceId }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 1) {\n        this.refresh();\n      }\n    });\n  }\n\n  /**\n   * Open a modal dialog to preview workspace resource content\n   *\n   */\n  previewItem(resourceId) {\n    this.isWait = true;\n    this.service.getResourcePreview(resourceId).subscribe(data => {\n      const previewData = {};\n      if (data?.results?.length && 'rowname' in data.results[0]) {\n        const minN = Math.min(data.results.length, 10);\n        let slicedData = data.results.slice(0, minN);\n        const columns = Object.keys(slicedData[0].values);\n        const rows = slicedData.map(elem => elem.rowname);\n        const values = slicedData.map(elem => {\n          let rowValues = [];\n          const elemValues = elem.values;\n          columns.forEach(col => rowValues.push(elemValues[col]));\n          return rowValues;\n        });\n        previewData['columns'] = columns;\n        previewData['rows'] = rows;\n        previewData['values'] = values;\n      }\n      setTimeout(() => {\n        this.isWait = false;\n        this.dialog.open(PreviewDialogComponent, {\n          data: {\n            previewData: previewData\n          }\n        });\n      }, 1000); // time-out for spinner\n    });\n  }\n\n  /**\n   * Open a modal dialog to edit workspace resource\n   * Users can re-name resources\n   */\n  editItem(resource) {\n    const dialogRef = this.dialog.open(EditDialogComponent, {\n      data: {\n        id: resource.id,\n        name: resource.name,\n        resource_type: resource.resource_type\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.refresh();\n    });\n  }\n\n  /**\n   * Open a modal dialog to delete a workspace resource from the current workspace\n   *\n   */\n  deleteItem(resource) {\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { workspaceId: this.workspaceId, resource: resource }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.refresh();\n    });\n  }\n\n  /**\n   * Switch to Analyses tab when the user clicks the Run button  on the Tools tab\n   *\n   */\n  goToAnalysesTab() {\n    this.selectedTabIndex = 4;\n  }\n\n  /**\n   * Refresh data when user switching between tabs\n   *\n   */\n  onTabChanged($event) {\n    const clickedIndex = $event.index;\n    if (clickedIndex === 0) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Method is triggered when the user clicks on a executed operation on the Analyses Flow Tab\n   *\n   */\n  public showExecutedOperationResult(executedOperationId: string) {\n    this.execOperationId = executedOperationId;\n    this.goToAnalysesTab();\n  }\n}\n","<mev-spinner-overlay *ngIf=\"isWait\"></mev-spinner-overlay>\n\n<div class=\"workspace-header\">\n  <a routerLink='/workarea' class=\"workspace-header__nav nav\">\n    <mat-icon class=\"nav__icon\" aria-label=\"Next step\">reply</mat-icon>\n    <span class=\"nav__text\">Back to File & Workspace list</span>\n  </a>\n  <span class=\"workspace-header__title\" *ngIf=\"workspace$ | async as workspace\">\n    Workspace\n    <b> {{ workspace.workspace_name }} </b>\n    <mat-icon class=\"workspace-header__icon\" matTooltipClass=\"tooltip\" fontSet=\"material-icons-outlined\" matTooltip=\"Workspace: {{ workspace.workspace_name }} &#13;\n                          Created: {{ workspace.created }} &#13;\n                          Owner: {{ workspace.owner_email }}\" aria-label=\"Info tooltip about the workspace\">info\n    </mat-icon>\n  </span>\n</div>\n\n\n<mat-tab-group animationDuration=\"0ms\" color=\"accent\" [(selectedIndex)]=\"selectedTabIndex\"\n  (selectedTabChange)=\"onTabChanged($event);\">\n  <mat-tab label=\"Resources\">\n    <ng-template matTabContent>\n      <div *ngIf=\"!workspaceResources?.length\" class=\"instruction\">\n        To perform analyses, you need to add or import data into the workspace. Select\n        from among the files you uploaded or import public data (if available)\n      </div>\n      <mat-toolbar>\n        <mat-form-field floatLabel='never' class='search-field'>\n          <input matInput [(ngModel)]=\"searchText\" (keyup)=\"applyFilter($event)\"  autocomplete=\"off\">\n          <mat-placeholder class=\"placeholder\">Search</mat-placeholder>\n        </mat-form-field>\n      </mat-toolbar>\n\n      <div class=\"btn-panel\">\n        <div class=\"btn-group\">\n          <button mat-raised-button color=\"accent\" (click)=\"addItem()\">\n            <mat-icon aria-label=\"Add local data\">add</mat-icon>\n            Add local data\n          </button>\n  \n          <button mat-raised-button color=\"accent\" (click)=\"addItem()\">\n            <mat-icon aria-label=\"Add external data\">add</mat-icon>\n            Add external data\n          </button>\n        </div>\n       \n\n        <mat-button-toggle-group #viewMode=\"matButtonToggleGroup\" value=\"tableMode\">\n          <mat-button-toggle value=\"tableMode\" aria-label=\"Text align left\">\n            Table view\n          </mat-button-toggle>\n          <mat-button-toggle value=\"cardMode\" aria-label=\"Text align center\">\n            Card view\n          </mat-button-toggle>\n        </mat-button-toggle-group>\n      </div>\n\n\n      \n\n\n      <div *ngIf=\"viewMode.value === 'cardMode'\"  class=\"cardList\">\n        <a *ngFor=\"let resource of workspaceResources | filter : searchText\" (click)=\"selectResource(resource);\"\n          class=\"cardList__item card\" matRipple matRippleColor=\"rgba(158, 158, 158, 0.22)\">\n          <mat-card>\n            <mat-card-title class=\"card-title\">\n              {{ resource.name }}\n            </mat-card-title>\n            <mat-card-content>\n              <ul>\n                <li>Resource type: {{ resource.readable_resource_type }}</li>\n                <li>Size: {{ resource.size | byteName}}</li>\n                <li>Date added: {{ resource.created | date :'medium' }}</li>\n              </ul>\n\n            </mat-card-content>\n            <mat-card-footer>\n              <mat-icon fontSet=\"material-icons-outlined\" title=\"Edit resource\" (click)=\"editItem(resource)\">\n                edit</mat-icon>\n              <mat-icon fontSet=\"material-icons-outlined\" title=\"Preview resource\" (click)=\"previewItem(resource.id)\">\n                search</mat-icon>\n              <mat-icon fontSet=\"material-icons-outlined\" title=\"Delete resource\" (click)=\"deleteItem(resource)\">delete\n              </mat-icon>\n            </mat-card-footer>\n          </mat-card>\n        </a>\n      </div>\n      <div *ngIf=\"viewMode.value === 'tableMode'\" class=\"resource-table-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"workspaceResourcesDS\" matSort matSortActive=\"date\" matSortDirection=\"desc\">\n       \n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Resource name </th>\n          <td mat-cell *matCellDef=\"let resource\">\n            {{ resource.name }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"readable_resource_type\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Resource type </th>\n          <td mat-cell *matCellDef=\"let resource\">\n            {{ resource.readable_resource_type }}\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"size\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Size </th>\n          <td mat-cell *matCellDef=\"let resource\"> {{ resource.size | byteName }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"created\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Creation date </th>\n          <td mat-cell *matCellDef=\"let resource\"> {{ resource.created | date :'medium' }} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n          <th mat-header-cell *matHeaderCellDef>Actions</th>\n          <td mat-cell *matCellDef=\"let resource\">\n            <button mat-icon-button color=\"accent\" title=\"Preview\" (click)=\"previewItem(resource.id)\">\n              <mat-icon aria-label=\"View\">visibility</mat-icon>\n            </button>\n            <button mat-icon-button color=\"accent\" title=\"Delete\" (click)=\"deleteItem(resource)\">\n              <mat-icon aria-label=\"Delete\">delete</mat-icon>\n            </button>\n            <button mat-icon-button color=\"accent\" title=\"Edit\" (click)=\"editItem(resource)\">\n              <mat-icon aria-label=\"Edit\">edit</mat-icon>\n            </button>\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\n\n      </table>\n      <mat-paginator #paginator [pageSizeOptions]=\"[5, 10, 25]\" [pageIndex]=\"0\" [pageSize]=\"10\">\n      </mat-paginator>\n    </div>\n    </ng-template>\n  </mat-tab>\n\n  <mat-tab label=\"Metadata\">\n    <ng-template matTabContent>\n      <mev-metadata *ngIf='workspaceResources' [workspaceResources]=\"workspaceResources\"></mev-metadata>\n    </ng-template>\n  </mat-tab>\n\n  <mat-tab label=\"Analysis Flow\">\n    <ng-template matTabContent>\n      <mev-analysis-flow (executedOperationId)=\"showExecutedOperationResult($event)\"></mev-analysis-flow>\n    </ng-template>\n  </mat-tab>\n\n  <mat-tab label=\"Tools\">\n    <ng-template matTabContent>\n      <mev-analyses (executedOperationId)=\"showExecutedOperationResult($event)\"></mev-analyses>\n    </ng-template>\n  </mat-tab>\n\n  <mat-tab label=\"Analyses Result\">\n    <ng-template matTabContent>\n      <mev-executed-operation [execOperationId]=\"execOperationId\"></mev-executed-operation>\n    </ng-template>\n  </mat-tab>\n\n</mat-tab-group>\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * Pipe to include only annotation files from the list of all available resources\n */\n@Pipe({\n  name: 'annotationFilesPipe'\n})\nexport class AnnotationFilesPipe implements PipeTransform {\n  transform(value: any): any {\n    return value.filter(item => item.resource_type == 'ANN');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { WorkspaceResource } from '@features/workspace-detail/models/workspace-resource';\nconst { isArray } = Array;\n\n/**\n * Pipe for text searching\n */\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n  transform(resources: WorkspaceResource[], find: string): WorkspaceResource[] {\n    if (!resources) return [];\n    if (!find) return resources;\n    find = find.toLowerCase();\n    return search(resources, find);\n  }\n}\n\nfunction search(entries: any[], search: string) {\n  search = search.toLowerCase();\n\n  return entries.filter(function(obj) {\n    const keys: string[] = Object.keys(obj);\n    return keys.some(function(key) {\n      const value = obj[key];\n      if (isArray(value)) {\n        return value.some(v => {\n          return v.toLowerCase().includes(search);\n        });\n      } else if (!isArray(value)) {\n        return String(value)\n          .toLowerCase()\n          .includes(search);\n      }\n    });\n  });\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/**\n * To link a resource to a workspace, the file should have a valid resource type.\n * To exclude duplicate rows, we filter out the files that already have a workspace linked.\n */\n@Pipe({\n  name: 'validFilesPipe'\n})\nexport class ValidFilesPipe implements PipeTransform {\n  transform(value: any): any {\n    return value.filter(item => item.resource_type && !item.workspace);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WorkspaceDetailComponent } from './components/workspace-detail/workspace-detail.component';\n\nconst routes: Routes = [\n  // {\n  //   path: ':resourceId/metadata',\n  //   component: MetadataComponent\n  // },\n  // {\n  //   path: 'analyses',\n  //   component: AnalysesComponent\n  // },\n\n  // {\n  //   path: 'executedOperation/:executedOperationId',\n  //   component: ExecutedOperationComponent\n  // },\n  {\n    path: '',\n    component: WorkspaceDetailComponent,\n    pathMatch: 'full'\n    // children: [\n    //   {\n    //     path: 'analyses',\n    //     loadChildren: () =>\n    //     import('../analysis/analysis.module').then(m => m.AnalysisModule),\n    //   }\n    // ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WorkspaceDetailRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '@app/shared/shared.module';\nimport { WorkspaceDetailRoutingModule } from './workspace-detail-routing.module';\nimport { WorkspaceDetailComponent } from './components/workspace-detail/workspace-detail.component';\nimport { FilterPipe } from '@features/workspace-detail/pipes/search';\nimport { AddDialogComponent } from './components/dialogs/add-dialog/add-dialog.component';\nimport { DeleteDialogComponent } from './components/dialogs/delete-dialog/delete-dialog.component';\nimport { AngularMultiSelectModule } from 'angular2-multiselect-dropdown';\nimport { ValidFilesPipe } from './pipes/valid-files';\nimport { AnnotationFilesPipe } from './pipes/annotation-files';\n\nimport { PreviewDialogComponent } from './components/dialogs/preview-dialog/preview-dialog.component';\nimport { MetadataComponent } from './components/metadata/metadata.component';\nimport { RouterModule } from '@angular/router';\nimport { AddAnnotationDialogComponent } from './components/metadata/dialogs/add-annotation-dialog/add-annotation-dialog.component';\nimport { AddObservationSetDialogComponent } from './components/metadata/dialogs/add-observation-set-dialog/add-observation-set-dialog.component';\nimport { DeleteSetDialogComponent } from './components/metadata/dialogs/delete-set-dialog/delete-set-dialog.component';\nimport { ViewSetDialogComponent } from './components/metadata/dialogs/view-set-dialog/view-set-dialog.component';\nimport { SatPopoverModule } from '@ncstate/sat-popover';\nimport { AnalysisModule } from '../analysis/analysis.module';\nimport { EditFeatureSetDialogComponent } from './components/metadata/dialogs/edit-feature-set-dialog/edit-feature-set-dialog.component';\nimport { EditDialogComponent } from './components/dialogs/edit-dialog/edit-dialog/edit-dialog.component';\nimport { ViewInfoDialogComponent } from './components/metadata/dialogs/view-info-dialog/view-info-dialog.component';\n\n@NgModule({\n  declarations: [\n    WorkspaceDetailComponent,\n    FilterPipe,\n    ValidFilesPipe,\n    AnnotationFilesPipe,\n    AddDialogComponent,\n    DeleteDialogComponent,\n    PreviewDialogComponent,\n    MetadataComponent,\n    AddAnnotationDialogComponent,\n    AddObservationSetDialogComponent,\n    DeleteSetDialogComponent,\n    ViewSetDialogComponent,\n    EditFeatureSetDialogComponent,\n    EditDialogComponent,\n    ViewInfoDialogComponent\n  ],\n  exports: [],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    SatPopoverModule,\n    RouterModule,\n    AngularMultiSelectModule,\n    AnalysisModule,\n    WorkspaceDetailRoutingModule\n  ]\n})\nexport class WorkspaceDetailModule {}\n"]}