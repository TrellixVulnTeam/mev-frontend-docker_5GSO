{"version":3,"sources":["./src/app/features/settings/settings-routing.module.ts","./src/app/features/settings/settings.module.ts","./src/app/features/settings/settings/settings-container.component.ts","./src/app/features/settings/settings/settings-container.component.html"],"names":[],"mappings":"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","file":"features-settings-settings-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsContainerComponent } from './settings/settings-container.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsContainerComponent,\n    data: { title: 'mev.menu.settings' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '@app/shared/shared.module';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsContainerComponent } from './settings/settings-container.component';\n\n@NgModule({\n  declarations: [SettingsContainerComponent],\n  imports: [CommonModule, SharedModule, SettingsRoutingModule]\n})\nexport class SettingsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '../../../core/core.module';\n\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeTheme,\n  actionSettingsChangeStickyHeader\n} from '../../../core/settings/settings.actions';\nimport { SettingsState, State } from '../../../core/settings/settings.model';\nimport { selectSettings } from '../../../core/settings/settings.selectors';\n\n/**\n * Settings Component\n *\n * Display user's settings (theme, language, night-mode, animations)\n * Currently it is hidden and unavailable for users\n */\n@Component({\n  selector: 'mev-settings',\n  templateUrl: './settings-container.component.html',\n  styleUrls: ['./settings-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SettingsContainerComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n  settings$: Observable<SettingsState>;\n\n  themes = [\n    { value: 'DEFAULT-THEME', label: 'blue' },\n    { value: 'LIGHT-THEME', label: 'light' },\n    { value: 'NATURE-THEME', label: 'nature' },\n    { value: 'BLACK-THEME', label: 'dark' }\n  ];\n\n  languages = [\n    { value: 'en', label: 'en' },\n    { value: 'de', label: 'de' },\n    { value: 'sk', label: 'sk' },\n    { value: 'fr', label: 'fr' },\n    { value: 'es', label: 'es' },\n    { value: 'pt-br', label: 'pt-br' },\n    { value: 'zh-cn', label: 'zh-cn' },\n    { value: 'he', label: 'he' }\n  ];\n\n  constructor(private store: Store<State>) {}\n\n  ngOnInit() {\n    this.settings$ = this.store.pipe(select(selectSettings));\n  }\n\n  onLanguageSelect({ value: language }) {\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\n  }\n\n  onThemeSelect({ value: theme }) {\n    this.store.dispatch(actionSettingsChangeTheme({ theme }));\n  }\n\n  onAutoNightModeToggle({ checked: autoNightMode }) {\n    this.store.dispatch(actionSettingsChangeAutoNightMode({ autoNightMode }));\n  }\n\n  onStickyHeaderToggle({ checked: stickyHeader }) {\n    this.store.dispatch(actionSettingsChangeStickyHeader({ stickyHeader }));\n  }\n\n  onPageAnimationsToggle({ checked: pageAnimations }) {\n    this.store.dispatch(actionSettingsChangeAnimationsPage({ pageAnimations }));\n  }\n\n  onElementsAnimationsToggle({ checked: elementsAnimations }) {\n    this.store.dispatch(\n      actionSettingsChangeAnimationsElements({ elementsAnimations })\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\"><h1>{{ 'mev.settings.title' | translate }}</h1></div>\n  </div>\n  <br>\n  <ng-container *ngIf=\"settings$ | async as settings\">\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'mev.settings.general.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"><fa-icon icon=\"language\" color=\"accent\"></fa-icon></mat-icon>\n          <mat-form-field>\n            <mat-select [placeholder]=\"'mev.settings.general.placeholder' | translate\"\n                        [ngModel]=\"settings.language\"\n                        (selectionChange)=\"onLanguageSelect($event)\"\n                        name=\"language\">\n              <mat-option *ngFor=\"let l of languages\" [value]=\"l.value\">\n                {{ 'mev.settings.general.language.' + l.label | translate }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n           <mat-icon color=\"accent\"><fa-icon icon=\"bars\" color=\"accent\"></fa-icon></mat-icon>\n           <mat-placeholder>{{ 'mev.settings.themes.sticky-header' | translate }}\n           </mat-placeholder>\n           <mat-slide-toggle\n             [checked]=\"settings.stickyHeader\"\n             (change)=\"onStickyHeaderToggle($event)\">\n           </mat-slide-toggle>\n         </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'mev.settings.themes.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"><fa-icon icon=\"paint-brush\" color=\"accent\"></fa-icon></mat-icon>\n          <mat-form-field>\n            <mat-select [placeholder]=\"'mev.settings.themes.placeholder' | translate\"\n                        [ngModel]=\"settings.theme\"\n                        (selectionChange)=\"onThemeSelect($event)\"\n                        name=\"themes\">\n              <mat-option *ngFor=\"let t of themes\" [value]=\"t.value\">\n                {{ 'mev.settings.themes.' + t.label | translate }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"><fa-icon icon=\"lightbulb\" color=\"accent\"></fa-icon></mat-icon>\n          <mat-placeholder>{{ 'mev.settings.themes.night-mode' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle\n            [checked]=\"settings.autoNightMode\"\n            (change)=\"onAutoNightModeToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'mev.settings.animations.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"><mat-icon color=\"accent\"><fa-icon icon=\"window-maximize\"></fa-icon></mat-icon></mat-icon>\n          <mat-placeholder>{{ 'mev.settings.animations.page' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle\n            matTooltip=\"Sorry, this feature is disabled in IE, EDGE and Safari\"\n            matTooltipPosition=\"before\"\n            *ngIf=\"settings.pageAnimationsDisabled\"\n            disabled>\n          </mat-slide-toggle>\n          <mat-slide-toggle\n            *ngIf=\"!settings.pageAnimationsDisabled\"\n            [checked]=\"settings.pageAnimations\"\n            (change)=\"onPageAnimationsToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"><fa-icon icon=\"stream\" color=\"accent\"></fa-icon></mat-icon>\n          <mat-placeholder>{{ 'mev.settings.animations.elements' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle\n            [checked]=\"settings.elementsAnimations\"\n            (change)=\"onElementsAnimationsToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n"],"sourceRoot":"webpack:///"}